
BTLNhung.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002adc  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000011c  08002be8  08002be8  00003be8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002d04  08002d04  00004018  2**0
                  CONTENTS
  4 .ARM          00000000  08002d04  08002d04  00004018  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002d04  08002d04  00004018  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002d04  08002d04  00003d04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08002d08  08002d08  00003d08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000018  20000000  08002d0c  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000a0  20000018  08002d24  00004018  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  200000b8  08002d24  000040b8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00004018  2**0
                  CONTENTS, READONLY
 12 .debug_info   00008a54  00000000  00000000  00004041  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001c8d  00000000  00000000  0000ca95  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000b60  00000000  00000000  0000e728  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000008b5  00000000  00000000  0000f288  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017831  00000000  00000000  0000fb3d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000c750  00000000  00000000  0002736e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000881c6  00000000  00000000  00033abe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000bbc84  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002e18  00000000  00000000  000bbcc8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000035  00000000  00000000  000beae0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000018 	.word	0x20000018
 8000128:	00000000 	.word	0x00000000
 800012c:	08002bd0 	.word	0x08002bd0

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	2000001c 	.word	0x2000001c
 8000148:	08002bd0 	.word	0x08002bd0

0800014c <LCD_SendHalf>:
#include "LCD.h"
#include <stdio.h>  // Để sử dụng sprintf cho việc chuyển đổi số thành chuỗi
// Gửi nửa byte (4-bit) đến LCD
void LCD_SendHalf(uint8_t data) {
 800014c:	b580      	push	{r7, lr}
 800014e:	b082      	sub	sp, #8
 8000150:	af00      	add	r7, sp, #0
 8000152:	4603      	mov	r3, r0
 8000154:	71fb      	strb	r3, [r7, #7]
    HAL_GPIO_WritePin(LCD_PORT, D4_PIN, (data >> 0) & 0x01);
 8000156:	79fb      	ldrb	r3, [r7, #7]
 8000158:	f003 0301 	and.w	r3, r3, #1
 800015c:	b2db      	uxtb	r3, r3
 800015e:	461a      	mov	r2, r3
 8000160:	2110      	movs	r1, #16
 8000162:	4814      	ldr	r0, [pc, #80]	@ (80001b4 <LCD_SendHalf+0x68>)
 8000164:	f001 fdc5 	bl	8001cf2 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_PORT, D5_PIN, (data >> 1) & 0x01);
 8000168:	79fb      	ldrb	r3, [r7, #7]
 800016a:	085b      	lsrs	r3, r3, #1
 800016c:	b2db      	uxtb	r3, r3
 800016e:	f003 0301 	and.w	r3, r3, #1
 8000172:	b2db      	uxtb	r3, r3
 8000174:	461a      	mov	r2, r3
 8000176:	2120      	movs	r1, #32
 8000178:	480e      	ldr	r0, [pc, #56]	@ (80001b4 <LCD_SendHalf+0x68>)
 800017a:	f001 fdba 	bl	8001cf2 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_PORT, D6_PIN, (data >> 2) & 0x01);
 800017e:	79fb      	ldrb	r3, [r7, #7]
 8000180:	089b      	lsrs	r3, r3, #2
 8000182:	b2db      	uxtb	r3, r3
 8000184:	f003 0301 	and.w	r3, r3, #1
 8000188:	b2db      	uxtb	r3, r3
 800018a:	461a      	mov	r2, r3
 800018c:	2140      	movs	r1, #64	@ 0x40
 800018e:	4809      	ldr	r0, [pc, #36]	@ (80001b4 <LCD_SendHalf+0x68>)
 8000190:	f001 fdaf 	bl	8001cf2 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_PORT, D7_PIN, (data >> 3) & 0x01);
 8000194:	79fb      	ldrb	r3, [r7, #7]
 8000196:	08db      	lsrs	r3, r3, #3
 8000198:	b2db      	uxtb	r3, r3
 800019a:	f003 0301 	and.w	r3, r3, #1
 800019e:	b2db      	uxtb	r3, r3
 80001a0:	461a      	mov	r2, r3
 80001a2:	2180      	movs	r1, #128	@ 0x80
 80001a4:	4803      	ldr	r0, [pc, #12]	@ (80001b4 <LCD_SendHalf+0x68>)
 80001a6:	f001 fda4 	bl	8001cf2 <HAL_GPIO_WritePin>
}
 80001aa:	bf00      	nop
 80001ac:	3708      	adds	r7, #8
 80001ae:	46bd      	mov	sp, r7
 80001b0:	bd80      	pop	{r7, pc}
 80001b2:	bf00      	nop
 80001b4:	40010800 	.word	0x40010800

080001b8 <LCD_Enable>:

// Kích hoạt xung EN
void LCD_Enable(void) {
 80001b8:	b580      	push	{r7, lr}
 80001ba:	af00      	add	r7, sp, #0
    HAL_GPIO_WritePin(LCD_PORT, EN_PIN, GPIO_PIN_SET);   // Set EN
 80001bc:	2201      	movs	r2, #1
 80001be:	2102      	movs	r1, #2
 80001c0:	4807      	ldr	r0, [pc, #28]	@ (80001e0 <LCD_Enable+0x28>)
 80001c2:	f001 fd96 	bl	8001cf2 <HAL_GPIO_WritePin>
    HAL_Delay(5);                                        // Delay nhỏ
 80001c6:	2005      	movs	r0, #5
 80001c8:	f001 f8f0 	bl	80013ac <HAL_Delay>
    HAL_GPIO_WritePin(LCD_PORT, EN_PIN, GPIO_PIN_RESET); // Reset EN
 80001cc:	2200      	movs	r2, #0
 80001ce:	2102      	movs	r1, #2
 80001d0:	4803      	ldr	r0, [pc, #12]	@ (80001e0 <LCD_Enable+0x28>)
 80001d2:	f001 fd8e 	bl	8001cf2 <HAL_GPIO_WritePin>
    HAL_Delay(5);
 80001d6:	2005      	movs	r0, #5
 80001d8:	f001 f8e8 	bl	80013ac <HAL_Delay>
}
 80001dc:	bf00      	nop
 80001de:	bd80      	pop	{r7, pc}
 80001e0:	40010800 	.word	0x40010800

080001e4 <LCD_SendCmd>:

// Gửi lệnh đến LCD
void LCD_SendCmd(uint8_t cmd) {
 80001e4:	b580      	push	{r7, lr}
 80001e6:	b082      	sub	sp, #8
 80001e8:	af00      	add	r7, sp, #0
 80001ea:	4603      	mov	r3, r0
 80001ec:	71fb      	strb	r3, [r7, #7]
    HAL_GPIO_WritePin(LCD_PORT, RS_PIN, GPIO_PIN_RESET);  // Chọn chế độ lệnh
 80001ee:	2200      	movs	r2, #0
 80001f0:	2101      	movs	r1, #1
 80001f2:	480c      	ldr	r0, [pc, #48]	@ (8000224 <LCD_SendCmd+0x40>)
 80001f4:	f001 fd7d 	bl	8001cf2 <HAL_GPIO_WritePin>
    LCD_SendHalf(cmd >> 4);                               // Gửi 4 bit cao
 80001f8:	79fb      	ldrb	r3, [r7, #7]
 80001fa:	091b      	lsrs	r3, r3, #4
 80001fc:	b2db      	uxtb	r3, r3
 80001fe:	4618      	mov	r0, r3
 8000200:	f7ff ffa4 	bl	800014c <LCD_SendHalf>
    LCD_Enable();
 8000204:	f7ff ffd8 	bl	80001b8 <LCD_Enable>
    LCD_SendHalf(cmd & 0x0F);                             // Gửi 4 bit thấp
 8000208:	79fb      	ldrb	r3, [r7, #7]
 800020a:	f003 030f 	and.w	r3, r3, #15
 800020e:	b2db      	uxtb	r3, r3
 8000210:	4618      	mov	r0, r3
 8000212:	f7ff ff9b 	bl	800014c <LCD_SendHalf>
    LCD_Enable();
 8000216:	f7ff ffcf 	bl	80001b8 <LCD_Enable>
}
 800021a:	bf00      	nop
 800021c:	3708      	adds	r7, #8
 800021e:	46bd      	mov	sp, r7
 8000220:	bd80      	pop	{r7, pc}
 8000222:	bf00      	nop
 8000224:	40010800 	.word	0x40010800

08000228 <LCD_SendData>:

// Gửi dữ liệu đến LCD
void LCD_SendData(uint8_t data) {
 8000228:	b580      	push	{r7, lr}
 800022a:	b082      	sub	sp, #8
 800022c:	af00      	add	r7, sp, #0
 800022e:	4603      	mov	r3, r0
 8000230:	71fb      	strb	r3, [r7, #7]
    HAL_GPIO_WritePin(LCD_PORT, RS_PIN, GPIO_PIN_SET);    // Chọn chế độ dữ liệu
 8000232:	2201      	movs	r2, #1
 8000234:	2101      	movs	r1, #1
 8000236:	480c      	ldr	r0, [pc, #48]	@ (8000268 <LCD_SendData+0x40>)
 8000238:	f001 fd5b 	bl	8001cf2 <HAL_GPIO_WritePin>
    LCD_SendHalf(data >> 4);                              // Gửi 4 bit cao
 800023c:	79fb      	ldrb	r3, [r7, #7]
 800023e:	091b      	lsrs	r3, r3, #4
 8000240:	b2db      	uxtb	r3, r3
 8000242:	4618      	mov	r0, r3
 8000244:	f7ff ff82 	bl	800014c <LCD_SendHalf>
    LCD_Enable();
 8000248:	f7ff ffb6 	bl	80001b8 <LCD_Enable>
    LCD_SendHalf(data & 0x0F);                            // Gửi 4 bit thấp
 800024c:	79fb      	ldrb	r3, [r7, #7]
 800024e:	f003 030f 	and.w	r3, r3, #15
 8000252:	b2db      	uxtb	r3, r3
 8000254:	4618      	mov	r0, r3
 8000256:	f7ff ff79 	bl	800014c <LCD_SendHalf>
    LCD_Enable();
 800025a:	f7ff ffad 	bl	80001b8 <LCD_Enable>
}
 800025e:	bf00      	nop
 8000260:	3708      	adds	r7, #8
 8000262:	46bd      	mov	sp, r7
 8000264:	bd80      	pop	{r7, pc}
 8000266:	bf00      	nop
 8000268:	40010800 	.word	0x40010800

0800026c <LCD_Init>:

// Khởi tạo LCD
void LCD_Init(void) {
 800026c:	b580      	push	{r7, lr}
 800026e:	af00      	add	r7, sp, #0
    HAL_Delay(100);  // Chờ LCD khởi động
 8000270:	2064      	movs	r0, #100	@ 0x64
 8000272:	f001 f89b 	bl	80013ac <HAL_Delay>

    // Gửi chuỗi khởi tạo LCD
    LCD_SendCmd(0x02);  // Chế độ 4-bit
 8000276:	2002      	movs	r0, #2
 8000278:	f7ff ffb4 	bl	80001e4 <LCD_SendCmd>
    LCD_SendCmd(0x28);  // Giao diện 2 dòng, 5x7 matrix
 800027c:	2028      	movs	r0, #40	@ 0x28
 800027e:	f7ff ffb1 	bl	80001e4 <LCD_SendCmd>
    LCD_SendCmd(0x0C);  // Bật màn hình, tắt con trỏ
 8000282:	200c      	movs	r0, #12
 8000284:	f7ff ffae 	bl	80001e4 <LCD_SendCmd>
    LCD_SendCmd(0x06);  // Tăng địa chỉ con trỏ sau khi ghi
 8000288:	2006      	movs	r0, #6
 800028a:	f7ff ffab 	bl	80001e4 <LCD_SendCmd>
    LCD_SendCmd(0x01);  // Xóa màn hình
 800028e:	2001      	movs	r0, #1
 8000290:	f7ff ffa8 	bl	80001e4 <LCD_SendCmd>
    HAL_Delay(10);
 8000294:	200a      	movs	r0, #10
 8000296:	f001 f889 	bl	80013ac <HAL_Delay>
}
 800029a:	bf00      	nop
 800029c:	bd80      	pop	{r7, pc}

0800029e <LCD_Print>:

// Hiển thị chuỗi ký tự trên LCD
void LCD_Print(char *str) {
 800029e:	b580      	push	{r7, lr}
 80002a0:	b082      	sub	sp, #8
 80002a2:	af00      	add	r7, sp, #0
 80002a4:	6078      	str	r0, [r7, #4]
    while (*str) {
 80002a6:	e006      	b.n	80002b6 <LCD_Print+0x18>
        LCD_SendData(*str++);
 80002a8:	687b      	ldr	r3, [r7, #4]
 80002aa:	1c5a      	adds	r2, r3, #1
 80002ac:	607a      	str	r2, [r7, #4]
 80002ae:	781b      	ldrb	r3, [r3, #0]
 80002b0:	4618      	mov	r0, r3
 80002b2:	f7ff ffb9 	bl	8000228 <LCD_SendData>
    while (*str) {
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	781b      	ldrb	r3, [r3, #0]
 80002ba:	2b00      	cmp	r3, #0
 80002bc:	d1f4      	bne.n	80002a8 <LCD_Print+0xa>
    }
}
 80002be:	bf00      	nop
 80002c0:	bf00      	nop
 80002c2:	3708      	adds	r7, #8
 80002c4:	46bd      	mov	sp, r7
 80002c6:	bd80      	pop	{r7, pc}

080002c8 <LCD_Clear>:

// Xóa màn hình LCD
void LCD_Clear(void) {
 80002c8:	b580      	push	{r7, lr}
 80002ca:	af00      	add	r7, sp, #0
    LCD_SendCmd(0x01);  // Lệnh xóa màn hình
 80002cc:	2001      	movs	r0, #1
 80002ce:	f7ff ff89 	bl	80001e4 <LCD_SendCmd>
    HAL_Delay(10);       // Đợi cho lệnh hoàn tất
 80002d2:	200a      	movs	r0, #10
 80002d4:	f001 f86a 	bl	80013ac <HAL_Delay>
}
 80002d8:	bf00      	nop
 80002da:	bd80      	pop	{r7, pc}

080002dc <LCD_SetCursor>:
void LCD_SetCursor(uint8_t row, uint8_t col) {
 80002dc:	b580      	push	{r7, lr}
 80002de:	b084      	sub	sp, #16
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	4603      	mov	r3, r0
 80002e4:	460a      	mov	r2, r1
 80002e6:	71fb      	strb	r3, [r7, #7]
 80002e8:	4613      	mov	r3, r2
 80002ea:	71bb      	strb	r3, [r7, #6]
    uint8_t address;

    // Tính toán địa chỉ dựa trên hàng và cột
    if (row == 0) {
 80002ec:	79fb      	ldrb	r3, [r7, #7]
 80002ee:	2b00      	cmp	r3, #0
 80002f0:	d102      	bne.n	80002f8 <LCD_SetCursor+0x1c>
        address = col;          // Hàng 1, bắt đầu từ địa chỉ 0x00
 80002f2:	79bb      	ldrb	r3, [r7, #6]
 80002f4:	73fb      	strb	r3, [r7, #15]
 80002f6:	e002      	b.n	80002fe <LCD_SetCursor+0x22>
    } else {
        address = 0x40 + col;   // Hàng 2, bắt đầu từ địa chỉ 0x40
 80002f8:	79bb      	ldrb	r3, [r7, #6]
 80002fa:	3340      	adds	r3, #64	@ 0x40
 80002fc:	73fb      	strb	r3, [r7, #15]
    }

    // Gửi lệnh di chuyển con trỏ
    LCD_SendCmd(0x80 | address);
 80002fe:	7bfb      	ldrb	r3, [r7, #15]
 8000300:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8000304:	b2db      	uxtb	r3, r3
 8000306:	4618      	mov	r0, r3
 8000308:	f7ff ff6c 	bl	80001e4 <LCD_SendCmd>
}
 800030c:	bf00      	nop
 800030e:	3710      	adds	r7, #16
 8000310:	46bd      	mov	sp, r7
 8000312:	bd80      	pop	{r7, pc}

08000314 <LCD_CursorBlink>:
// Gửi lệnh để bật con trỏ và làm nó nhấp nháy
void LCD_CursorBlink(void) {
 8000314:	b580      	push	{r7, lr}
 8000316:	af00      	add	r7, sp, #0
    LCD_SendCmd(0x0F); // Lệnh để bật màn hình, con trỏ và nhấp nháy
 8000318:	200f      	movs	r0, #15
 800031a:	f7ff ff63 	bl	80001e4 <LCD_SendCmd>
}
 800031e:	bf00      	nop
 8000320:	bd80      	pop	{r7, pc}

08000322 <LCD_DisableCursorBlink>:

// Gửi lệnh để tắt con trỏ nhấp nháy
void LCD_DisableCursorBlink(void) {
 8000322:	b580      	push	{r7, lr}
 8000324:	af00      	add	r7, sp, #0
    LCD_SendCmd(0x0C); // Lệnh để tắt con trỏ và nhấp nháy
 8000326:	200c      	movs	r0, #12
 8000328:	f7ff ff5c 	bl	80001e4 <LCD_SendCmd>
}
 800032c:	bf00      	nop
 800032e:	bd80      	pop	{r7, pc}

08000330 <Flash_Erase>:
#include <flash.h>

void Flash_Erase(uint32_t address){
 8000330:	b580      	push	{r7, lr}
 8000332:	b088      	sub	sp, #32
 8000334:	af00      	add	r7, sp, #0
 8000336:	6078      	str	r0, [r7, #4]
	HAL_FLASH_Unlock();
 8000338:	f001 f9b0 	bl	800169c <HAL_FLASH_Unlock>
	FLASH_EraseInitTypeDef	EraseInit;
	EraseInit.Banks  = 1;
 800033c:	2301      	movs	r3, #1
 800033e:	617b      	str	r3, [r7, #20]
	EraseInit.NbPages = 1;
 8000340:	2301      	movs	r3, #1
 8000342:	61fb      	str	r3, [r7, #28]
	EraseInit.PageAddress = address;
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	61bb      	str	r3, [r7, #24]
	EraseInit.TypeErase = FLASH_TYPEERASE_PAGES;
 8000348:	2300      	movs	r3, #0
 800034a:	613b      	str	r3, [r7, #16]
	uint32_t pageerr;
	HAL_FLASHEx_Erase(&EraseInit ,&pageerr );
 800034c:	f107 020c 	add.w	r2, r7, #12
 8000350:	f107 0310 	add.w	r3, r7, #16
 8000354:	4611      	mov	r1, r2
 8000356:	4618      	mov	r0, r3
 8000358:	f001 fa88 	bl	800186c <HAL_FLASHEx_Erase>
	HAL_FLASH_Lock();
 800035c:	f001 f9c4 	bl	80016e8 <HAL_FLASH_Lock>
}
 8000360:	bf00      	nop
 8000362:	3720      	adds	r7, #32
 8000364:	46bd      	mov	sp, r7
 8000366:	bd80      	pop	{r7, pc}

08000368 <Flash_Write_2Byte>:
void Flash_Write_2Byte(uint32_t address , uint16_t data){
 8000368:	b5b0      	push	{r4, r5, r7, lr}
 800036a:	b082      	sub	sp, #8
 800036c:	af00      	add	r7, sp, #0
 800036e:	6078      	str	r0, [r7, #4]
 8000370:	460b      	mov	r3, r1
 8000372:	807b      	strh	r3, [r7, #2]
	HAL_FLASH_Unlock();
 8000374:	f001 f992 	bl	800169c <HAL_FLASH_Unlock>
	HAL_FLASH_Program(FLASH_TYPEPROGRAM_HALFWORD, address, data);
 8000378:	887b      	ldrh	r3, [r7, #2]
 800037a:	2200      	movs	r2, #0
 800037c:	461c      	mov	r4, r3
 800037e:	4615      	mov	r5, r2
 8000380:	4622      	mov	r2, r4
 8000382:	462b      	mov	r3, r5
 8000384:	6879      	ldr	r1, [r7, #4]
 8000386:	2001      	movs	r0, #1
 8000388:	f001 f918 	bl	80015bc <HAL_FLASH_Program>
	HAL_FLASH_Lock();
 800038c:	f001 f9ac 	bl	80016e8 <HAL_FLASH_Lock>
}
 8000390:	bf00      	nop
 8000392:	3708      	adds	r7, #8
 8000394:	46bd      	mov	sp, r7
 8000396:	bdb0      	pop	{r4, r5, r7, pc}

08000398 <Flash_Read_2Byte>:
}

uint8_t  Flash_Read_Byte(uint32_t address){
	return *(__IO uint8_t *)(address);
}
uint16_t Flash_Read_2Byte(uint32_t address){
 8000398:	b480      	push	{r7}
 800039a:	b083      	sub	sp, #12
 800039c:	af00      	add	r7, sp, #0
 800039e:	6078      	str	r0, [r7, #4]
	return *(__IO uint16_t *)(address);
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	881b      	ldrh	r3, [r3, #0]
 80003a4:	b29b      	uxth	r3, r3
}
 80003a6:	4618      	mov	r0, r3
 80003a8:	370c      	adds	r7, #12
 80003aa:	46bd      	mov	sp, r7
 80003ac:	bc80      	pop	{r7}
 80003ae:	4770      	bx	lr

080003b0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80003b0:	b580      	push	{r7, lr}
 80003b2:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80003b4:	f000 ff98 	bl	80012e8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80003b8:	f000 f820 	bl	80003fc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80003bc:	f000 f8c8 	bl	8000550 <MX_GPIO_Init>
  MX_TIM2_Init();
 80003c0:	f000 f862 	bl	8000488 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  Value_check = Flash_Read_2Byte(Flash_save_pass);
 80003c4:	480a      	ldr	r0, [pc, #40]	@ (80003f0 <main+0x40>)
 80003c6:	f7ff ffe7 	bl	8000398 <Flash_Read_2Byte>
 80003ca:	4603      	mov	r3, r0
 80003cc:	b2da      	uxtb	r2, r3
 80003ce:	4b09      	ldr	r3, [pc, #36]	@ (80003f4 <main+0x44>)
 80003d0:	701a      	strb	r2, [r3, #0]
  if( Value_check != 255) // 255 is 0xFF value.
 80003d2:	4b08      	ldr	r3, [pc, #32]	@ (80003f4 <main+0x44>)
 80003d4:	781b      	ldrb	r3, [r3, #0]
 80003d6:	2bff      	cmp	r3, #255	@ 0xff
 80003d8:	d002      	beq.n	80003e0 <main+0x30>
  {
	  Change_flag = 1;
 80003da:	4b07      	ldr	r3, [pc, #28]	@ (80003f8 <main+0x48>)
 80003dc:	2201      	movs	r2, #1
 80003de:	701a      	strb	r2, [r3, #0]
  }
  Read_pass_from_flash();
 80003e0:	f000 f9be 	bl	8000760 <Read_pass_from_flash>
  Reset_LCD();
 80003e4:	f000 f922 	bl	800062c <Reset_LCD>
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */
    /* USER CODE BEGIN 3 */
   KeyPad();
 80003e8:	f000 fbf2 	bl	8000bd0 <KeyPad>
 80003ec:	e7fc      	b.n	80003e8 <main+0x38>
 80003ee:	bf00      	nop
 80003f0:	08007c3c 	.word	0x08007c3c
 80003f4:	20000049 	.word	0x20000049
 80003f8:	20000048 	.word	0x20000048

080003fc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80003fc:	b580      	push	{r7, lr}
 80003fe:	b090      	sub	sp, #64	@ 0x40
 8000400:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000402:	f107 0318 	add.w	r3, r7, #24
 8000406:	2228      	movs	r2, #40	@ 0x28
 8000408:	2100      	movs	r1, #0
 800040a:	4618      	mov	r0, r3
 800040c:	f002 fbb4 	bl	8002b78 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000410:	1d3b      	adds	r3, r7, #4
 8000412:	2200      	movs	r2, #0
 8000414:	601a      	str	r2, [r3, #0]
 8000416:	605a      	str	r2, [r3, #4]
 8000418:	609a      	str	r2, [r3, #8]
 800041a:	60da      	str	r2, [r3, #12]
 800041c:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800041e:	2301      	movs	r3, #1
 8000420:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000422:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000426:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 8000428:	2300      	movs	r3, #0
 800042a:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800042c:	2301      	movs	r3, #1
 800042e:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000430:	2302      	movs	r3, #2
 8000432:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000434:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000438:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 800043a:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 800043e:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000440:	f107 0318 	add.w	r3, r7, #24
 8000444:	4618      	mov	r0, r3
 8000446:	f001 fc6d 	bl	8001d24 <HAL_RCC_OscConfig>
 800044a:	4603      	mov	r3, r0
 800044c:	2b00      	cmp	r3, #0
 800044e:	d001      	beq.n	8000454 <SystemClock_Config+0x58>
  {
    Error_Handler();
 8000450:	f000 fe9e 	bl	8001190 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000454:	230f      	movs	r3, #15
 8000456:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000458:	2302      	movs	r3, #2
 800045a:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800045c:	2300      	movs	r3, #0
 800045e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000460:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000464:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000466:	2300      	movs	r3, #0
 8000468:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800046a:	1d3b      	adds	r3, r7, #4
 800046c:	2102      	movs	r1, #2
 800046e:	4618      	mov	r0, r3
 8000470:	f001 feda 	bl	8002228 <HAL_RCC_ClockConfig>
 8000474:	4603      	mov	r3, r0
 8000476:	2b00      	cmp	r3, #0
 8000478:	d001      	beq.n	800047e <SystemClock_Config+0x82>
  {
    Error_Handler();
 800047a:	f000 fe89 	bl	8001190 <Error_Handler>
  }
}
 800047e:	bf00      	nop
 8000480:	3740      	adds	r7, #64	@ 0x40
 8000482:	46bd      	mov	sp, r7
 8000484:	bd80      	pop	{r7, pc}
	...

08000488 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000488:	b580      	push	{r7, lr}
 800048a:	b08c      	sub	sp, #48	@ 0x30
 800048c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800048e:	f107 0320 	add.w	r3, r7, #32
 8000492:	2200      	movs	r2, #0
 8000494:	601a      	str	r2, [r3, #0]
 8000496:	605a      	str	r2, [r3, #4]
 8000498:	609a      	str	r2, [r3, #8]
 800049a:	60da      	str	r2, [r3, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800049c:	f107 030c 	add.w	r3, r7, #12
 80004a0:	2200      	movs	r2, #0
 80004a2:	601a      	str	r2, [r3, #0]
 80004a4:	605a      	str	r2, [r3, #4]
 80004a6:	609a      	str	r2, [r3, #8]
 80004a8:	60da      	str	r2, [r3, #12]
 80004aa:	611a      	str	r2, [r3, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80004ac:	1d3b      	adds	r3, r7, #4
 80004ae:	2200      	movs	r2, #0
 80004b0:	601a      	str	r2, [r3, #0]
 80004b2:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80004b4:	4b25      	ldr	r3, [pc, #148]	@ (800054c <MX_TIM2_Init+0xc4>)
 80004b6:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80004ba:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 80004bc:	4b23      	ldr	r3, [pc, #140]	@ (800054c <MX_TIM2_Init+0xc4>)
 80004be:	2200      	movs	r2, #0
 80004c0:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80004c2:	4b22      	ldr	r3, [pc, #136]	@ (800054c <MX_TIM2_Init+0xc4>)
 80004c4:	2200      	movs	r2, #0
 80004c6:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 65535;
 80004c8:	4b20      	ldr	r3, [pc, #128]	@ (800054c <MX_TIM2_Init+0xc4>)
 80004ca:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80004ce:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80004d0:	4b1e      	ldr	r3, [pc, #120]	@ (800054c <MX_TIM2_Init+0xc4>)
 80004d2:	2200      	movs	r2, #0
 80004d4:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80004d6:	4b1d      	ldr	r3, [pc, #116]	@ (800054c <MX_TIM2_Init+0xc4>)
 80004d8:	2200      	movs	r2, #0
 80004da:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80004dc:	481b      	ldr	r0, [pc, #108]	@ (800054c <MX_TIM2_Init+0xc4>)
 80004de:	f001 ffff 	bl	80024e0 <HAL_TIM_Base_Init>
 80004e2:	4603      	mov	r3, r0
 80004e4:	2b00      	cmp	r3, #0
 80004e6:	d001      	beq.n	80004ec <MX_TIM2_Init+0x64>
  {
    Error_Handler();
 80004e8:	f000 fe52 	bl	8001190 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80004ec:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80004f0:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80004f2:	f107 0320 	add.w	r3, r7, #32
 80004f6:	4619      	mov	r1, r3
 80004f8:	4814      	ldr	r0, [pc, #80]	@ (800054c <MX_TIM2_Init+0xc4>)
 80004fa:	f002 f840 	bl	800257e <HAL_TIM_ConfigClockSource>
 80004fe:	4603      	mov	r3, r0
 8000500:	2b00      	cmp	r3, #0
 8000502:	d001      	beq.n	8000508 <MX_TIM2_Init+0x80>
  {
    Error_Handler();
 8000504:	f000 fe44 	bl	8001190 <Error_Handler>
  }
  sSlaveConfig.SlaveMode = TIM_SLAVEMODE_DISABLE;
 8000508:	2300      	movs	r3, #0
 800050a:	60fb      	str	r3, [r7, #12]
  sSlaveConfig.InputTrigger = TIM_TS_ITR2;
 800050c:	2320      	movs	r3, #32
 800050e:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_SlaveConfigSynchro(&htim2, &sSlaveConfig) != HAL_OK)
 8000510:	f107 030c 	add.w	r3, r7, #12
 8000514:	4619      	mov	r1, r3
 8000516:	480d      	ldr	r0, [pc, #52]	@ (800054c <MX_TIM2_Init+0xc4>)
 8000518:	f002 f8f8 	bl	800270c <HAL_TIM_SlaveConfigSynchro>
 800051c:	4603      	mov	r3, r0
 800051e:	2b00      	cmp	r3, #0
 8000520:	d001      	beq.n	8000526 <MX_TIM2_Init+0x9e>
  {
    Error_Handler();
 8000522:	f000 fe35 	bl	8001190 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000526:	2300      	movs	r3, #0
 8000528:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800052a:	2300      	movs	r3, #0
 800052c:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800052e:	1d3b      	adds	r3, r7, #4
 8000530:	4619      	mov	r1, r3
 8000532:	4806      	ldr	r0, [pc, #24]	@ (800054c <MX_TIM2_Init+0xc4>)
 8000534:	f002 fac2 	bl	8002abc <HAL_TIMEx_MasterConfigSynchronization>
 8000538:	4603      	mov	r3, r0
 800053a:	2b00      	cmp	r3, #0
 800053c:	d001      	beq.n	8000542 <MX_TIM2_Init+0xba>
  {
    Error_Handler();
 800053e:	f000 fe27 	bl	8001190 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000542:	bf00      	nop
 8000544:	3730      	adds	r7, #48	@ 0x30
 8000546:	46bd      	mov	sp, r7
 8000548:	bd80      	pop	{r7, pc}
 800054a:	bf00      	nop
 800054c:	2000004c 	.word	0x2000004c

08000550 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000550:	b580      	push	{r7, lr}
 8000552:	b088      	sub	sp, #32
 8000554:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000556:	f107 0310 	add.w	r3, r7, #16
 800055a:	2200      	movs	r2, #0
 800055c:	601a      	str	r2, [r3, #0]
 800055e:	605a      	str	r2, [r3, #4]
 8000560:	609a      	str	r2, [r3, #8]
 8000562:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000564:	4b2e      	ldr	r3, [pc, #184]	@ (8000620 <MX_GPIO_Init+0xd0>)
 8000566:	699b      	ldr	r3, [r3, #24]
 8000568:	4a2d      	ldr	r2, [pc, #180]	@ (8000620 <MX_GPIO_Init+0xd0>)
 800056a:	f043 0320 	orr.w	r3, r3, #32
 800056e:	6193      	str	r3, [r2, #24]
 8000570:	4b2b      	ldr	r3, [pc, #172]	@ (8000620 <MX_GPIO_Init+0xd0>)
 8000572:	699b      	ldr	r3, [r3, #24]
 8000574:	f003 0320 	and.w	r3, r3, #32
 8000578:	60fb      	str	r3, [r7, #12]
 800057a:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800057c:	4b28      	ldr	r3, [pc, #160]	@ (8000620 <MX_GPIO_Init+0xd0>)
 800057e:	699b      	ldr	r3, [r3, #24]
 8000580:	4a27      	ldr	r2, [pc, #156]	@ (8000620 <MX_GPIO_Init+0xd0>)
 8000582:	f043 0304 	orr.w	r3, r3, #4
 8000586:	6193      	str	r3, [r2, #24]
 8000588:	4b25      	ldr	r3, [pc, #148]	@ (8000620 <MX_GPIO_Init+0xd0>)
 800058a:	699b      	ldr	r3, [r3, #24]
 800058c:	f003 0304 	and.w	r3, r3, #4
 8000590:	60bb      	str	r3, [r7, #8]
 8000592:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000594:	4b22      	ldr	r3, [pc, #136]	@ (8000620 <MX_GPIO_Init+0xd0>)
 8000596:	699b      	ldr	r3, [r3, #24]
 8000598:	4a21      	ldr	r2, [pc, #132]	@ (8000620 <MX_GPIO_Init+0xd0>)
 800059a:	f043 0308 	orr.w	r3, r3, #8
 800059e:	6193      	str	r3, [r2, #24]
 80005a0:	4b1f      	ldr	r3, [pc, #124]	@ (8000620 <MX_GPIO_Init+0xd0>)
 80005a2:	699b      	ldr	r3, [r3, #24]
 80005a4:	f003 0308 	and.w	r3, r3, #8
 80005a8:	607b      	str	r3, [r7, #4]
 80005aa:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80005ac:	2200      	movs	r2, #0
 80005ae:	f248 01ff 	movw	r1, #33023	@ 0x80ff
 80005b2:	481c      	ldr	r0, [pc, #112]	@ (8000624 <MX_GPIO_Init+0xd4>)
 80005b4:	f001 fb9d 	bl	8001cf2 <HAL_GPIO_WritePin>
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7
                          |GPIO_PIN_15, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10
 80005b8:	2200      	movs	r2, #0
 80005ba:	f640 710f 	movw	r1, #3855	@ 0xf0f
 80005be:	481a      	ldr	r0, [pc, #104]	@ (8000628 <MX_GPIO_Init+0xd8>)
 80005c0:	f001 fb97 	bl	8001cf2 <HAL_GPIO_WritePin>
                          |GPIO_PIN_11|GPIO_PIN_3|GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);

  /*Configure GPIO pins : PA0 PA1 PA2 PA3
                           PA4 PA5 PA6 PA7
                           PA15 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80005c4:	f248 03ff 	movw	r3, #33023	@ 0x80ff
 80005c8:	613b      	str	r3, [r7, #16]
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7
                          |GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80005ca:	2301      	movs	r3, #1
 80005cc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80005ce:	2300      	movs	r3, #0
 80005d0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80005d2:	2302      	movs	r3, #2
 80005d4:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80005d6:	f107 0310 	add.w	r3, r7, #16
 80005da:	4619      	mov	r1, r3
 80005dc:	4811      	ldr	r0, [pc, #68]	@ (8000624 <MX_GPIO_Init+0xd4>)
 80005de:	f001 f9ed 	bl	80019bc <HAL_GPIO_Init>

  /*Configure GPIO pins : PB0 PB1 PB2 PB10
                           PB11 PB3 PB8 PB9 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10
 80005e2:	f640 730f 	movw	r3, #3855	@ 0xf0f
 80005e6:	613b      	str	r3, [r7, #16]
                          |GPIO_PIN_11|GPIO_PIN_3|GPIO_PIN_8|GPIO_PIN_9;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80005e8:	2301      	movs	r3, #1
 80005ea:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80005ec:	2300      	movs	r3, #0
 80005ee:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80005f0:	2302      	movs	r3, #2
 80005f2:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80005f4:	f107 0310 	add.w	r3, r7, #16
 80005f8:	4619      	mov	r1, r3
 80005fa:	480b      	ldr	r0, [pc, #44]	@ (8000628 <MX_GPIO_Init+0xd8>)
 80005fc:	f001 f9de 	bl	80019bc <HAL_GPIO_Init>

  /*Configure GPIO pins : PB4 PB5 PB6 PB7 */
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8000600:	23f0      	movs	r3, #240	@ 0xf0
 8000602:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000604:	2300      	movs	r3, #0
 8000606:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000608:	2301      	movs	r3, #1
 800060a:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800060c:	f107 0310 	add.w	r3, r7, #16
 8000610:	4619      	mov	r1, r3
 8000612:	4805      	ldr	r0, [pc, #20]	@ (8000628 <MX_GPIO_Init+0xd8>)
 8000614:	f001 f9d2 	bl	80019bc <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000618:	bf00      	nop
 800061a:	3720      	adds	r7, #32
 800061c:	46bd      	mov	sp, r7
 800061e:	bd80      	pop	{r7, pc}
 8000620:	40021000 	.word	0x40021000
 8000624:	40010800 	.word	0x40010800
 8000628:	40010c00 	.word	0x40010c00

0800062c <Reset_LCD>:

/* USER CODE BEGIN 4 */
//------------------------------------------------
// RESTART WITH LCD.
     void Reset_LCD()
     {
 800062c:	b580      	push	{r7, lr}
 800062e:	af00      	add	r7, sp, #0
     //DEFAULT SCREEN.
       LCD_Clear();
 8000630:	f7ff fe4a 	bl	80002c8 <LCD_Clear>
       x = 1 ;
 8000634:	4b16      	ldr	r3, [pc, #88]	@ (8000690 <Reset_LCD+0x64>)
 8000636:	2201      	movs	r2, #1
 8000638:	701a      	strb	r2, [r3, #0]
       y = 9 ;
 800063a:	4b16      	ldr	r3, [pc, #88]	@ (8000694 <Reset_LCD+0x68>)
 800063c:	2209      	movs	r2, #9
 800063e:	701a      	strb	r2, [r3, #0]
       LCD_Init();
 8000640:	f7ff fe14 	bl	800026c <LCD_Init>
       LCD_SetCursor(0,4);
 8000644:	2104      	movs	r1, #4
 8000646:	2000      	movs	r0, #0
 8000648:	f7ff fe48 	bl	80002dc <LCD_SetCursor>
	   LCD_Print("WELLCOME!");
 800064c:	4812      	ldr	r0, [pc, #72]	@ (8000698 <Reset_LCD+0x6c>)
 800064e:	f7ff fe26 	bl	800029e <LCD_Print>
	   HAL_Delay(50);
 8000652:	2032      	movs	r0, #50	@ 0x32
 8000654:	f000 feaa 	bl	80013ac <HAL_Delay>
	   LCD_SetCursor(1,0);
 8000658:	2100      	movs	r1, #0
 800065a:	2001      	movs	r0, #1
 800065c:	f7ff fe3e 	bl	80002dc <LCD_SetCursor>
	   LCD_Print("PASSCODE:");
 8000660:	480e      	ldr	r0, [pc, #56]	@ (800069c <Reset_LCD+0x70>)
 8000662:	f7ff fe1c 	bl	800029e <LCD_Print>
	   LCD_SetCursor(1,9);
 8000666:	2109      	movs	r1, #9
 8000668:	2001      	movs	r0, #1
 800066a:	f7ff fe37 	bl	80002dc <LCD_SetCursor>
	   LCD_CursorBlink();
 800066e:	f7ff fe51 	bl	8000314 <LCD_CursorBlink>
	   count = 0;
 8000672:	4b0b      	ldr	r3, [pc, #44]	@ (80006a0 <Reset_LCD+0x74>)
 8000674:	2200      	movs	r2, #0
 8000676:	701a      	strb	r2, [r3, #0]
       x = 1 ;
 8000678:	4b05      	ldr	r3, [pc, #20]	@ (8000690 <Reset_LCD+0x64>)
 800067a:	2201      	movs	r2, #1
 800067c:	701a      	strb	r2, [r3, #0]
       y = 9 ;
 800067e:	4b05      	ldr	r3, [pc, #20]	@ (8000694 <Reset_LCD+0x68>)
 8000680:	2209      	movs	r2, #9
 8000682:	701a      	strb	r2, [r3, #0]
       Check_Mode = 0;
 8000684:	4b07      	ldr	r3, [pc, #28]	@ (80006a4 <Reset_LCD+0x78>)
 8000686:	2200      	movs	r2, #0
 8000688:	701a      	strb	r2, [r3, #0]
     }
 800068a:	bf00      	nop
 800068c:	bd80      	pop	{r7, pc}
 800068e:	bf00      	nop
 8000690:	20000006 	.word	0x20000006
 8000694:	20000007 	.word	0x20000007
 8000698:	08002be8 	.word	0x08002be8
 800069c:	08002bf4 	.word	0x08002bf4
 80006a0:	20000042 	.word	0x20000042
 80006a4:	20000046 	.word	0x20000046

080006a8 <Read_Keypad>:
     // WRITE DATA in ARRAY.
     void Read_Keypad(int key)
     {
 80006a8:	b580      	push	{r7, lr}
 80006aa:	b082      	sub	sp, #8
 80006ac:	af00      	add	r7, sp, #0
 80006ae:	6078      	str	r0, [r7, #4]
         if(count < 6)
 80006b0:	4b14      	ldr	r3, [pc, #80]	@ (8000704 <Read_Keypad+0x5c>)
 80006b2:	781b      	ldrb	r3, [r3, #0]
 80006b4:	2b05      	cmp	r3, #5
 80006b6:	d820      	bhi.n	80006fa <Read_Keypad+0x52>
     	 {
     	  	 enter_passcode[count] = key;
 80006b8:	4b12      	ldr	r3, [pc, #72]	@ (8000704 <Read_Keypad+0x5c>)
 80006ba:	781b      	ldrb	r3, [r3, #0]
 80006bc:	461a      	mov	r2, r3
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	b2d9      	uxtb	r1, r3
 80006c2:	4b11      	ldr	r3, [pc, #68]	@ (8000708 <Read_Keypad+0x60>)
 80006c4:	5499      	strb	r1, [r3, r2]
     	  	 if(flag_new_pass)
 80006c6:	4b11      	ldr	r3, [pc, #68]	@ (800070c <Read_Keypad+0x64>)
 80006c8:	781b      	ldrb	r3, [r3, #0]
 80006ca:	2b00      	cmp	r3, #0
 80006cc:	d00f      	beq.n	80006ee <Read_Keypad+0x46>
     	  	 {
     	  	     new_passcode[count]=key;
 80006ce:	4b0d      	ldr	r3, [pc, #52]	@ (8000704 <Read_Keypad+0x5c>)
 80006d0:	781b      	ldrb	r3, [r3, #0]
 80006d2:	461a      	mov	r2, r3
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	b2d9      	uxtb	r1, r3
 80006d8:	4b0d      	ldr	r3, [pc, #52]	@ (8000710 <Read_Keypad+0x68>)
 80006da:	5499      	strb	r1, [r3, r2]
     	  	     if(count==5)
 80006dc:	4b09      	ldr	r3, [pc, #36]	@ (8000704 <Read_Keypad+0x5c>)
 80006de:	781b      	ldrb	r3, [r3, #0]
 80006e0:	2b05      	cmp	r3, #5
 80006e2:	d104      	bne.n	80006ee <Read_Keypad+0x46>
     	  	     {
     	  	    	Save_pass_to_flash();
 80006e4:	f000 f816 	bl	8000714 <Save_pass_to_flash>
     	  	    	flag_new_pass = 0;
 80006e8:	4b08      	ldr	r3, [pc, #32]	@ (800070c <Read_Keypad+0x64>)
 80006ea:	2200      	movs	r2, #0
 80006ec:	701a      	strb	r2, [r3, #0]
     	  	     }
     	  	 }
     	  	    count++;
 80006ee:	4b05      	ldr	r3, [pc, #20]	@ (8000704 <Read_Keypad+0x5c>)
 80006f0:	781b      	ldrb	r3, [r3, #0]
 80006f2:	3301      	adds	r3, #1
 80006f4:	b2da      	uxtb	r2, r3
 80006f6:	4b03      	ldr	r3, [pc, #12]	@ (8000704 <Read_Keypad+0x5c>)
 80006f8:	701a      	strb	r2, [r3, #0]
     	 }
     }
 80006fa:	bf00      	nop
 80006fc:	3708      	adds	r7, #8
 80006fe:	46bd      	mov	sp, r7
 8000700:	bd80      	pop	{r7, pc}
 8000702:	bf00      	nop
 8000704:	20000042 	.word	0x20000042
 8000708:	20000034 	.word	0x20000034
 800070c:	20000047 	.word	0x20000047
 8000710:	2000003c 	.word	0x2000003c

08000714 <Save_pass_to_flash>:
     void Save_pass_to_flash()
     {
 8000714:	b580      	push	{r7, lr}
 8000716:	b082      	sub	sp, #8
 8000718:	af00      	add	r7, sp, #0
         Flash_Erase(Flash_save_pass);
 800071a:	480e      	ldr	r0, [pc, #56]	@ (8000754 <Save_pass_to_flash+0x40>)
 800071c:	f7ff fe08 	bl	8000330 <Flash_Erase>
         for(int i = 0; i < 6; i++)
 8000720:	2300      	movs	r3, #0
 8000722:	607b      	str	r3, [r7, #4]
 8000724:	e00e      	b.n	8000744 <Save_pass_to_flash+0x30>
         {
        	 Flash_Write_2Byte(Flash_save_pass + i*2, new_passcode[i]);
 8000726:	687a      	ldr	r2, [r7, #4]
 8000728:	4b0b      	ldr	r3, [pc, #44]	@ (8000758 <Save_pass_to_flash+0x44>)
 800072a:	4413      	add	r3, r2
 800072c:	005b      	lsls	r3, r3, #1
 800072e:	4618      	mov	r0, r3
 8000730:	4a0a      	ldr	r2, [pc, #40]	@ (800075c <Save_pass_to_flash+0x48>)
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	4413      	add	r3, r2
 8000736:	781b      	ldrb	r3, [r3, #0]
 8000738:	4619      	mov	r1, r3
 800073a:	f7ff fe15 	bl	8000368 <Flash_Write_2Byte>
         for(int i = 0; i < 6; i++)
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	3301      	adds	r3, #1
 8000742:	607b      	str	r3, [r7, #4]
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	2b05      	cmp	r3, #5
 8000748:	dded      	ble.n	8000726 <Save_pass_to_flash+0x12>
         }
     }
 800074a:	bf00      	nop
 800074c:	bf00      	nop
 800074e:	3708      	adds	r7, #8
 8000750:	46bd      	mov	sp, r7
 8000752:	bd80      	pop	{r7, pc}
 8000754:	08007c3c 	.word	0x08007c3c
 8000758:	04003e1e 	.word	0x04003e1e
 800075c:	2000003c 	.word	0x2000003c

08000760 <Read_pass_from_flash>:
     void Read_pass_from_flash()
	 {
 8000760:	b580      	push	{r7, lr}
 8000762:	b082      	sub	sp, #8
 8000764:	af00      	add	r7, sp, #0
    	 for(int i = 0; i < 6; i++)
 8000766:	2300      	movs	r3, #0
 8000768:	607b      	str	r3, [r7, #4]
 800076a:	e010      	b.n	800078e <Read_pass_from_flash+0x2e>
    	 {
    	     new_passcode[i] = Flash_Read_2Byte(Flash_save_pass + i*2 );
 800076c:	687a      	ldr	r2, [r7, #4]
 800076e:	4b0c      	ldr	r3, [pc, #48]	@ (80007a0 <Read_pass_from_flash+0x40>)
 8000770:	4413      	add	r3, r2
 8000772:	005b      	lsls	r3, r3, #1
 8000774:	4618      	mov	r0, r3
 8000776:	f7ff fe0f 	bl	8000398 <Flash_Read_2Byte>
 800077a:	4603      	mov	r3, r0
 800077c:	b2d9      	uxtb	r1, r3
 800077e:	4a09      	ldr	r2, [pc, #36]	@ (80007a4 <Read_pass_from_flash+0x44>)
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	4413      	add	r3, r2
 8000784:	460a      	mov	r2, r1
 8000786:	701a      	strb	r2, [r3, #0]
    	 for(int i = 0; i < 6; i++)
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	3301      	adds	r3, #1
 800078c:	607b      	str	r3, [r7, #4]
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	2b05      	cmp	r3, #5
 8000792:	ddeb      	ble.n	800076c <Read_pass_from_flash+0xc>
    	 }
	 }
 8000794:	bf00      	nop
 8000796:	bf00      	nop
 8000798:	3708      	adds	r7, #8
 800079a:	46bd      	mov	sp, r7
 800079c:	bd80      	pop	{r7, pc}
 800079e:	bf00      	nop
 80007a0:	04003e1e 	.word	0x04003e1e
 80007a4:	2000003c 	.word	0x2000003c

080007a8 <Default_Change_Screen>:
     //--------------------------------------------
     // Change passcode if need.
     void Default_Change_Screen()
     {
 80007a8:	b580      	push	{r7, lr}
 80007aa:	af00      	add	r7, sp, #0
         //Initial.
         Check_Mode = 1;
 80007ac:	4b12      	ldr	r3, [pc, #72]	@ (80007f8 <Default_Change_Screen+0x50>)
 80007ae:	2201      	movs	r2, #1
 80007b0:	701a      	strb	r2, [r3, #0]
         count = 0;
 80007b2:	4b12      	ldr	r3, [pc, #72]	@ (80007fc <Default_Change_Screen+0x54>)
 80007b4:	2200      	movs	r2, #0
 80007b6:	701a      	strb	r2, [r3, #0]
         LCD_Clear();
 80007b8:	f7ff fd86 	bl	80002c8 <LCD_Clear>
         LCD_Print("Waiting...");
 80007bc:	4810      	ldr	r0, [pc, #64]	@ (8000800 <Default_Change_Screen+0x58>)
 80007be:	f7ff fd6e 	bl	800029e <LCD_Print>
         LCD_DisableCursorBlink();
 80007c2:	f7ff fdae 	bl	8000322 <LCD_DisableCursorBlink>
         HAL_Delay(1000);
 80007c6:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80007ca:	f000 fdef 	bl	80013ac <HAL_Delay>
     	 LCD_Clear();
 80007ce:	f7ff fd7b 	bl	80002c8 <LCD_Clear>
     	 LCD_SetCursor(0,1);
 80007d2:	2101      	movs	r1, #1
 80007d4:	2000      	movs	r0, #0
 80007d6:	f7ff fd81 	bl	80002dc <LCD_SetCursor>
     	 LCD_Print("Enter Old Pass");
 80007da:	480a      	ldr	r0, [pc, #40]	@ (8000804 <Default_Change_Screen+0x5c>)
 80007dc:	f7ff fd5f 	bl	800029e <LCD_Print>
     	 LCD_SetCursor(1,0);
 80007e0:	2100      	movs	r1, #0
 80007e2:	2001      	movs	r0, #1
 80007e4:	f7ff fd7a 	bl	80002dc <LCD_SetCursor>
     	 LCD_Print("=>");
 80007e8:	4807      	ldr	r0, [pc, #28]	@ (8000808 <Default_Change_Screen+0x60>)
 80007ea:	f7ff fd58 	bl	800029e <LCD_Print>
     	 LCD_CursorBlink();
 80007ee:	f7ff fd91 	bl	8000314 <LCD_CursorBlink>
     }
 80007f2:	bf00      	nop
 80007f4:	bd80      	pop	{r7, pc}
 80007f6:	bf00      	nop
 80007f8:	20000046 	.word	0x20000046
 80007fc:	20000042 	.word	0x20000042
 8000800:	08002c00 	.word	0x08002c00
 8000804:	08002c0c 	.word	0x08002c0c
 8000808:	08002c1c 	.word	0x08002c1c

0800080c <Change_Passcode>:
     void Change_Passcode()
     {
 800080c:	b580      	push	{r7, lr}
 800080e:	af00      	add	r7, sp, #0
     	 Default_Change_Screen();
 8000810:	f7ff ffca 	bl	80007a8 <Default_Change_Screen>
         x = 1;
 8000814:	4b03      	ldr	r3, [pc, #12]	@ (8000824 <Change_Passcode+0x18>)
 8000816:	2201      	movs	r2, #1
 8000818:	701a      	strb	r2, [r3, #0]
         y = 2;
 800081a:	4b03      	ldr	r3, [pc, #12]	@ (8000828 <Change_Passcode+0x1c>)
 800081c:	2202      	movs	r2, #2
 800081e:	701a      	strb	r2, [r3, #0]
     }
 8000820:	bf00      	nop
 8000822:	bd80      	pop	{r7, pc}
 8000824:	20000006 	.word	0x20000006
 8000828:	20000007 	.word	0x20000007

0800082c <Check_Old_Passcode>:
     //--------------------------------------------
     // CHECK OLD PASSCODE.
     void Check_Old_Passcode()
     {
 800082c:	b580      	push	{r7, lr}
 800082e:	b082      	sub	sp, #8
 8000830:	af00      	add	r7, sp, #0
     	 check_old = 1;
 8000832:	4b48      	ldr	r3, [pc, #288]	@ (8000954 <Check_Old_Passcode+0x128>)
 8000834:	2201      	movs	r2, #1
 8000836:	701a      	strb	r2, [r3, #0]
     	 if(Change_flag == 1)
 8000838:	4b47      	ldr	r3, [pc, #284]	@ (8000958 <Check_Old_Passcode+0x12c>)
 800083a:	781b      	ldrb	r3, [r3, #0]
 800083c:	2b01      	cmp	r3, #1
 800083e:	d126      	bne.n	800088e <Check_Old_Passcode+0x62>
     	 {
     		for(int i = 0; i < 6; i++)
 8000840:	2300      	movs	r3, #0
 8000842:	607b      	str	r3, [r7, #4]
 8000844:	e01f      	b.n	8000886 <Check_Old_Passcode+0x5a>
     		{
     			if(new_passcode[i] != enter_passcode[i])
 8000846:	4a45      	ldr	r2, [pc, #276]	@ (800095c <Check_Old_Passcode+0x130>)
 8000848:	687b      	ldr	r3, [r7, #4]
 800084a:	4413      	add	r3, r2
 800084c:	781a      	ldrb	r2, [r3, #0]
 800084e:	4944      	ldr	r1, [pc, #272]	@ (8000960 <Check_Old_Passcode+0x134>)
 8000850:	687b      	ldr	r3, [r7, #4]
 8000852:	440b      	add	r3, r1
 8000854:	781b      	ldrb	r3, [r3, #0]
 8000856:	429a      	cmp	r2, r3
 8000858:	d003      	beq.n	8000862 <Check_Old_Passcode+0x36>
     			{
     				check_old  =  0;
 800085a:	4b3e      	ldr	r3, [pc, #248]	@ (8000954 <Check_Old_Passcode+0x128>)
 800085c:	2200      	movs	r2, #0
 800085e:	701a      	strb	r2, [r3, #0]
     				break;
 8000860:	e03b      	b.n	80008da <Check_Old_Passcode+0xae>
     			}
     			else if(count < 5 || count > 6)
 8000862:	4b40      	ldr	r3, [pc, #256]	@ (8000964 <Check_Old_Passcode+0x138>)
 8000864:	781b      	ldrb	r3, [r3, #0]
 8000866:	2b04      	cmp	r3, #4
 8000868:	d903      	bls.n	8000872 <Check_Old_Passcode+0x46>
 800086a:	4b3e      	ldr	r3, [pc, #248]	@ (8000964 <Check_Old_Passcode+0x138>)
 800086c:	781b      	ldrb	r3, [r3, #0]
 800086e:	2b06      	cmp	r3, #6
 8000870:	d903      	bls.n	800087a <Check_Old_Passcode+0x4e>
     			{
     				check_old = 0;
 8000872:	4b38      	ldr	r3, [pc, #224]	@ (8000954 <Check_Old_Passcode+0x128>)
 8000874:	2200      	movs	r2, #0
 8000876:	701a      	strb	r2, [r3, #0]
     				break;
 8000878:	e02f      	b.n	80008da <Check_Old_Passcode+0xae>
     			}
     			else
     			{
     				check_old = 1;
 800087a:	4b36      	ldr	r3, [pc, #216]	@ (8000954 <Check_Old_Passcode+0x128>)
 800087c:	2201      	movs	r2, #1
 800087e:	701a      	strb	r2, [r3, #0]
     		for(int i = 0; i < 6; i++)
 8000880:	687b      	ldr	r3, [r7, #4]
 8000882:	3301      	adds	r3, #1
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	687b      	ldr	r3, [r7, #4]
 8000888:	2b05      	cmp	r3, #5
 800088a:	dddc      	ble.n	8000846 <Check_Old_Passcode+0x1a>
 800088c:	e025      	b.n	80008da <Check_Old_Passcode+0xae>
     			}
     		}
     	 }else
     	 {
     		 for(int i = 0; i < 6; i++)
 800088e:	2300      	movs	r3, #0
 8000890:	603b      	str	r3, [r7, #0]
 8000892:	e01f      	b.n	80008d4 <Check_Old_Passcode+0xa8>
     		 {
     			 if(passcode[i] != enter_passcode[i])
 8000894:	4a34      	ldr	r2, [pc, #208]	@ (8000968 <Check_Old_Passcode+0x13c>)
 8000896:	683b      	ldr	r3, [r7, #0]
 8000898:	4413      	add	r3, r2
 800089a:	781a      	ldrb	r2, [r3, #0]
 800089c:	4930      	ldr	r1, [pc, #192]	@ (8000960 <Check_Old_Passcode+0x134>)
 800089e:	683b      	ldr	r3, [r7, #0]
 80008a0:	440b      	add	r3, r1
 80008a2:	781b      	ldrb	r3, [r3, #0]
 80008a4:	429a      	cmp	r2, r3
 80008a6:	d003      	beq.n	80008b0 <Check_Old_Passcode+0x84>
     			 {
     				 check_old  =  0;
 80008a8:	4b2a      	ldr	r3, [pc, #168]	@ (8000954 <Check_Old_Passcode+0x128>)
 80008aa:	2200      	movs	r2, #0
 80008ac:	701a      	strb	r2, [r3, #0]
     				 break;
 80008ae:	e014      	b.n	80008da <Check_Old_Passcode+0xae>
     			 }
     			 else if(count < 5 || count > 6)
 80008b0:	4b2c      	ldr	r3, [pc, #176]	@ (8000964 <Check_Old_Passcode+0x138>)
 80008b2:	781b      	ldrb	r3, [r3, #0]
 80008b4:	2b04      	cmp	r3, #4
 80008b6:	d903      	bls.n	80008c0 <Check_Old_Passcode+0x94>
 80008b8:	4b2a      	ldr	r3, [pc, #168]	@ (8000964 <Check_Old_Passcode+0x138>)
 80008ba:	781b      	ldrb	r3, [r3, #0]
 80008bc:	2b06      	cmp	r3, #6
 80008be:	d903      	bls.n	80008c8 <Check_Old_Passcode+0x9c>
     			 {
     				 check_old = 0;
 80008c0:	4b24      	ldr	r3, [pc, #144]	@ (8000954 <Check_Old_Passcode+0x128>)
 80008c2:	2200      	movs	r2, #0
 80008c4:	701a      	strb	r2, [r3, #0]
     				 break;
 80008c6:	e008      	b.n	80008da <Check_Old_Passcode+0xae>
     			 }
     			 else
     			 {
     				 check_old = 1;
 80008c8:	4b22      	ldr	r3, [pc, #136]	@ (8000954 <Check_Old_Passcode+0x128>)
 80008ca:	2201      	movs	r2, #1
 80008cc:	701a      	strb	r2, [r3, #0]
     		 for(int i = 0; i < 6; i++)
 80008ce:	683b      	ldr	r3, [r7, #0]
 80008d0:	3301      	adds	r3, #1
 80008d2:	603b      	str	r3, [r7, #0]
 80008d4:	683b      	ldr	r3, [r7, #0]
 80008d6:	2b05      	cmp	r3, #5
 80008d8:	dddc      	ble.n	8000894 <Check_Old_Passcode+0x68>
     			 }
     		 }
     	 }

     	 if(check_old != 1)
 80008da:	4b1e      	ldr	r3, [pc, #120]	@ (8000954 <Check_Old_Passcode+0x128>)
 80008dc:	781b      	ldrb	r3, [r3, #0]
 80008de:	2b01      	cmp	r3, #1
 80008e0:	d018      	beq.n	8000914 <Check_Old_Passcode+0xe8>
     	 {
     		 LCD_Clear();
 80008e2:	f7ff fcf1 	bl	80002c8 <LCD_Clear>
     		 LCD_SetCursor(0,1);
 80008e6:	2101      	movs	r1, #1
 80008e8:	2000      	movs	r0, #0
 80008ea:	f7ff fcf7 	bl	80002dc <LCD_SetCursor>
     		 LCD_Print("FALSE,");
 80008ee:	481f      	ldr	r0, [pc, #124]	@ (800096c <Check_Old_Passcode+0x140>)
 80008f0:	f7ff fcd5 	bl	800029e <LCD_Print>
     		 LCD_SetCursor(1,1);
 80008f4:	2101      	movs	r1, #1
 80008f6:	2001      	movs	r0, #1
 80008f8:	f7ff fcf0 	bl	80002dc <LCD_SetCursor>
     		 LCD_Print("PLEASE AGAIN !");
 80008fc:	481c      	ldr	r0, [pc, #112]	@ (8000970 <Check_Old_Passcode+0x144>)
 80008fe:	f7ff fcce 	bl	800029e <LCD_Print>
     		 LCD_DisableCursorBlink();
 8000902:	f7ff fd0e 	bl	8000322 <LCD_DisableCursorBlink>
     		 HAL_Delay(1500);
 8000906:	f240 50dc 	movw	r0, #1500	@ 0x5dc
 800090a:	f000 fd4f 	bl	80013ac <HAL_Delay>
     		 Change_Passcode();
 800090e:	f7ff ff7d 	bl	800080c <Change_Passcode>
     		 LCD_Print("=>");
     		 x = 1; y = 2;
     		 count = 0;
     		 flag_new_pass = 1;
     	 }
     }
 8000912:	e01b      	b.n	800094c <Check_Old_Passcode+0x120>
     		 LCD_Clear();
 8000914:	f7ff fcd8 	bl	80002c8 <LCD_Clear>
     		 LCD_SetCursor(0,1);
 8000918:	2101      	movs	r1, #1
 800091a:	2000      	movs	r0, #0
 800091c:	f7ff fcde 	bl	80002dc <LCD_SetCursor>
     		 LCD_Print("Enter New Pass");
 8000920:	4814      	ldr	r0, [pc, #80]	@ (8000974 <Check_Old_Passcode+0x148>)
 8000922:	f7ff fcbc 	bl	800029e <LCD_Print>
     		 LCD_SetCursor(1,0);
 8000926:	2100      	movs	r1, #0
 8000928:	2001      	movs	r0, #1
 800092a:	f7ff fcd7 	bl	80002dc <LCD_SetCursor>
     		 LCD_Print("=>");
 800092e:	4812      	ldr	r0, [pc, #72]	@ (8000978 <Check_Old_Passcode+0x14c>)
 8000930:	f7ff fcb5 	bl	800029e <LCD_Print>
     		 x = 1; y = 2;
 8000934:	4b11      	ldr	r3, [pc, #68]	@ (800097c <Check_Old_Passcode+0x150>)
 8000936:	2201      	movs	r2, #1
 8000938:	701a      	strb	r2, [r3, #0]
 800093a:	4b11      	ldr	r3, [pc, #68]	@ (8000980 <Check_Old_Passcode+0x154>)
 800093c:	2202      	movs	r2, #2
 800093e:	701a      	strb	r2, [r3, #0]
     		 count = 0;
 8000940:	4b08      	ldr	r3, [pc, #32]	@ (8000964 <Check_Old_Passcode+0x138>)
 8000942:	2200      	movs	r2, #0
 8000944:	701a      	strb	r2, [r3, #0]
     		 flag_new_pass = 1;
 8000946:	4b0f      	ldr	r3, [pc, #60]	@ (8000984 <Check_Old_Passcode+0x158>)
 8000948:	2201      	movs	r2, #1
 800094a:	701a      	strb	r2, [r3, #0]
     }
 800094c:	bf00      	nop
 800094e:	3708      	adds	r7, #8
 8000950:	46bd      	mov	sp, r7
 8000952:	bd80      	pop	{r7, pc}
 8000954:	20000045 	.word	0x20000045
 8000958:	20000048 	.word	0x20000048
 800095c:	2000003c 	.word	0x2000003c
 8000960:	20000034 	.word	0x20000034
 8000964:	20000042 	.word	0x20000042
 8000968:	20000000 	.word	0x20000000
 800096c:	08002c20 	.word	0x08002c20
 8000970:	08002c28 	.word	0x08002c28
 8000974:	08002c38 	.word	0x08002c38
 8000978:	08002c1c 	.word	0x08002c1c
 800097c:	20000006 	.word	0x20000006
 8000980:	20000007 	.word	0x20000007
 8000984:	20000047 	.word	0x20000047

08000988 <Successful_change_screen>:
     void Successful_change_screen()
     {
 8000988:	b580      	push	{r7, lr}
 800098a:	af00      	add	r7, sp, #0
    	 LCD_Clear();
 800098c:	f7ff fc9c 	bl	80002c8 <LCD_Clear>
    	 LCD_SetCursor(0,1);
 8000990:	2101      	movs	r1, #1
 8000992:	2000      	movs	r0, #0
 8000994:	f7ff fca2 	bl	80002dc <LCD_SetCursor>
    	 LCD_Print("Successful");
 8000998:	4807      	ldr	r0, [pc, #28]	@ (80009b8 <Successful_change_screen+0x30>)
 800099a:	f7ff fc80 	bl	800029e <LCD_Print>
    	 LCD_SetCursor(1,1);
 800099e:	2101      	movs	r1, #1
 80009a0:	2001      	movs	r0, #1
 80009a2:	f7ff fc9b 	bl	80002dc <LCD_SetCursor>
    	 LCD_Print("Change passcode!");
 80009a6:	4805      	ldr	r0, [pc, #20]	@ (80009bc <Successful_change_screen+0x34>)
 80009a8:	f7ff fc79 	bl	800029e <LCD_Print>
    	 HAL_Delay(300);
 80009ac:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 80009b0:	f000 fcfc 	bl	80013ac <HAL_Delay>
     }
 80009b4:	bf00      	nop
 80009b6:	bd80      	pop	{r7, pc}
 80009b8:	08002c48 	.word	0x08002c48
 80009bc:	08002c54 	.word	0x08002c54

080009c0 <Xu_Ly_Mat_Khau>:
     //---------------------------------------------
     //CHECK PASSCODE to OPEN THE DOOR.
     void Xu_Ly_Mat_Khau()
     {
 80009c0:	b580      	push	{r7, lr}
 80009c2:	b084      	sub	sp, #16
 80009c4:	af00      	add	r7, sp, #0
     	 check = 1;
 80009c6:	4b74      	ldr	r3, [pc, #464]	@ (8000b98 <Xu_Ly_Mat_Khau+0x1d8>)
 80009c8:	2201      	movs	r2, #1
 80009ca:	701a      	strb	r2, [r3, #0]
     	 if(Change_flag == 1)
 80009cc:	4b73      	ldr	r3, [pc, #460]	@ (8000b9c <Xu_Ly_Mat_Khau+0x1dc>)
 80009ce:	781b      	ldrb	r3, [r3, #0]
 80009d0:	2b01      	cmp	r3, #1
 80009d2:	d123      	bne.n	8000a1c <Xu_Ly_Mat_Khau+0x5c>
     	 {
     		for(int i = 0; i < 6; i++)
 80009d4:	2300      	movs	r3, #0
 80009d6:	60fb      	str	r3, [r7, #12]
 80009d8:	e01c      	b.n	8000a14 <Xu_Ly_Mat_Khau+0x54>
     		{
     			if(new_passcode[i] != enter_passcode[i])
 80009da:	4a71      	ldr	r2, [pc, #452]	@ (8000ba0 <Xu_Ly_Mat_Khau+0x1e0>)
 80009dc:	68fb      	ldr	r3, [r7, #12]
 80009de:	4413      	add	r3, r2
 80009e0:	781a      	ldrb	r2, [r3, #0]
 80009e2:	4970      	ldr	r1, [pc, #448]	@ (8000ba4 <Xu_Ly_Mat_Khau+0x1e4>)
 80009e4:	68fb      	ldr	r3, [r7, #12]
 80009e6:	440b      	add	r3, r1
 80009e8:	781b      	ldrb	r3, [r3, #0]
 80009ea:	429a      	cmp	r2, r3
 80009ec:	d003      	beq.n	80009f6 <Xu_Ly_Mat_Khau+0x36>
     			{
     				check  =  0;
 80009ee:	4b6a      	ldr	r3, [pc, #424]	@ (8000b98 <Xu_Ly_Mat_Khau+0x1d8>)
 80009f0:	2200      	movs	r2, #0
 80009f2:	701a      	strb	r2, [r3, #0]
     				break;
 80009f4:	e035      	b.n	8000a62 <Xu_Ly_Mat_Khau+0xa2>
     			}
     			if(count < 5 || count > 6)
 80009f6:	4b6c      	ldr	r3, [pc, #432]	@ (8000ba8 <Xu_Ly_Mat_Khau+0x1e8>)
 80009f8:	781b      	ldrb	r3, [r3, #0]
 80009fa:	2b04      	cmp	r3, #4
 80009fc:	d903      	bls.n	8000a06 <Xu_Ly_Mat_Khau+0x46>
 80009fe:	4b6a      	ldr	r3, [pc, #424]	@ (8000ba8 <Xu_Ly_Mat_Khau+0x1e8>)
 8000a00:	781b      	ldrb	r3, [r3, #0]
 8000a02:	2b06      	cmp	r3, #6
 8000a04:	d903      	bls.n	8000a0e <Xu_Ly_Mat_Khau+0x4e>
     			{
     				check = 0;
 8000a06:	4b64      	ldr	r3, [pc, #400]	@ (8000b98 <Xu_Ly_Mat_Khau+0x1d8>)
 8000a08:	2200      	movs	r2, #0
 8000a0a:	701a      	strb	r2, [r3, #0]
     				break;
 8000a0c:	e029      	b.n	8000a62 <Xu_Ly_Mat_Khau+0xa2>
     		for(int i = 0; i < 6; i++)
 8000a0e:	68fb      	ldr	r3, [r7, #12]
 8000a10:	3301      	adds	r3, #1
 8000a12:	60fb      	str	r3, [r7, #12]
 8000a14:	68fb      	ldr	r3, [r7, #12]
 8000a16:	2b05      	cmp	r3, #5
 8000a18:	dddf      	ble.n	80009da <Xu_Ly_Mat_Khau+0x1a>
 8000a1a:	e022      	b.n	8000a62 <Xu_Ly_Mat_Khau+0xa2>
     			}
     		}
     	 }else
     	 {
     		 for(int i = 0; i < 6; i++)
 8000a1c:	2300      	movs	r3, #0
 8000a1e:	60bb      	str	r3, [r7, #8]
 8000a20:	e01c      	b.n	8000a5c <Xu_Ly_Mat_Khau+0x9c>
     		 {
     			 if(passcode[i] != enter_passcode[i])
 8000a22:	4a62      	ldr	r2, [pc, #392]	@ (8000bac <Xu_Ly_Mat_Khau+0x1ec>)
 8000a24:	68bb      	ldr	r3, [r7, #8]
 8000a26:	4413      	add	r3, r2
 8000a28:	781a      	ldrb	r2, [r3, #0]
 8000a2a:	495e      	ldr	r1, [pc, #376]	@ (8000ba4 <Xu_Ly_Mat_Khau+0x1e4>)
 8000a2c:	68bb      	ldr	r3, [r7, #8]
 8000a2e:	440b      	add	r3, r1
 8000a30:	781b      	ldrb	r3, [r3, #0]
 8000a32:	429a      	cmp	r2, r3
 8000a34:	d003      	beq.n	8000a3e <Xu_Ly_Mat_Khau+0x7e>
     			 {
     				 check  =  0;
 8000a36:	4b58      	ldr	r3, [pc, #352]	@ (8000b98 <Xu_Ly_Mat_Khau+0x1d8>)
 8000a38:	2200      	movs	r2, #0
 8000a3a:	701a      	strb	r2, [r3, #0]
     				 break;
 8000a3c:	e011      	b.n	8000a62 <Xu_Ly_Mat_Khau+0xa2>
     			 }
     			 if(count < 5 || count > 6)
 8000a3e:	4b5a      	ldr	r3, [pc, #360]	@ (8000ba8 <Xu_Ly_Mat_Khau+0x1e8>)
 8000a40:	781b      	ldrb	r3, [r3, #0]
 8000a42:	2b04      	cmp	r3, #4
 8000a44:	d903      	bls.n	8000a4e <Xu_Ly_Mat_Khau+0x8e>
 8000a46:	4b58      	ldr	r3, [pc, #352]	@ (8000ba8 <Xu_Ly_Mat_Khau+0x1e8>)
 8000a48:	781b      	ldrb	r3, [r3, #0]
 8000a4a:	2b06      	cmp	r3, #6
 8000a4c:	d903      	bls.n	8000a56 <Xu_Ly_Mat_Khau+0x96>
     			 {
     				 check = 0;
 8000a4e:	4b52      	ldr	r3, [pc, #328]	@ (8000b98 <Xu_Ly_Mat_Khau+0x1d8>)
 8000a50:	2200      	movs	r2, #0
 8000a52:	701a      	strb	r2, [r3, #0]
     				 break;
 8000a54:	e005      	b.n	8000a62 <Xu_Ly_Mat_Khau+0xa2>
     		 for(int i = 0; i < 6; i++)
 8000a56:	68bb      	ldr	r3, [r7, #8]
 8000a58:	3301      	adds	r3, #1
 8000a5a:	60bb      	str	r3, [r7, #8]
 8000a5c:	68bb      	ldr	r3, [r7, #8]
 8000a5e:	2b05      	cmp	r3, #5
 8000a60:	dddf      	ble.n	8000a22 <Xu_Ly_Mat_Khau+0x62>
     			 }
     		 }
     	 }
     	  //IF PASSCODE FALSE => ANNOUNCE AND CLOSE THE DOOR.
     	 if(check != 1)
 8000a62:	4b4d      	ldr	r3, [pc, #308]	@ (8000b98 <Xu_Ly_Mat_Khau+0x1d8>)
 8000a64:	781b      	ldrb	r3, [r3, #0]
 8000a66:	2b01      	cmp	r3, #1
 8000a68:	d04c      	beq.n	8000b04 <Xu_Ly_Mat_Khau+0x144>
     	 {
     		 LCD_Clear();
 8000a6a:	f7ff fc2d 	bl	80002c8 <LCD_Clear>
     		 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_11, 1);
 8000a6e:	2201      	movs	r2, #1
 8000a70:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8000a74:	484e      	ldr	r0, [pc, #312]	@ (8000bb0 <Xu_Ly_Mat_Khau+0x1f0>)
 8000a76:	f001 f93c 	bl	8001cf2 <HAL_GPIO_WritePin>
     		 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, 1);
 8000a7a:	2201      	movs	r2, #1
 8000a7c:	2104      	movs	r1, #4
 8000a7e:	484d      	ldr	r0, [pc, #308]	@ (8000bb4 <Xu_Ly_Mat_Khau+0x1f4>)
 8000a80:	f001 f937 	bl	8001cf2 <HAL_GPIO_WritePin>
     		 HAL_Delay(500);
 8000a84:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8000a88:	f000 fc90 	bl	80013ac <HAL_Delay>
     		 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, 0);
 8000a8c:	2200      	movs	r2, #0
 8000a8e:	2104      	movs	r1, #4
 8000a90:	4848      	ldr	r0, [pc, #288]	@ (8000bb4 <Xu_Ly_Mat_Khau+0x1f4>)
 8000a92:	f001 f92e 	bl	8001cf2 <HAL_GPIO_WritePin>
     		 LCD_SetCursor(0, 5);
 8000a96:	2105      	movs	r1, #5
 8000a98:	2000      	movs	r0, #0
 8000a9a:	f7ff fc1f 	bl	80002dc <LCD_SetCursor>
     		 LCD_Print("FAIL,");
 8000a9e:	4846      	ldr	r0, [pc, #280]	@ (8000bb8 <Xu_Ly_Mat_Khau+0x1f8>)
 8000aa0:	f7ff fbfd 	bl	800029e <LCD_Print>
     		 LCD_SetCursor(1, 1);
 8000aa4:	2101      	movs	r1, #1
 8000aa6:	2001      	movs	r0, #1
 8000aa8:	f7ff fc18 	bl	80002dc <LCD_SetCursor>
     		 LCD_Print("PLEASE AGAIN!");
 8000aac:	4843      	ldr	r0, [pc, #268]	@ (8000bbc <Xu_Ly_Mat_Khau+0x1fc>)
 8000aae:	f7ff fbf6 	bl	800029e <LCD_Print>
     		 LCD_DisableCursorBlink();
 8000ab2:	f7ff fc36 	bl	8000322 <LCD_DisableCursorBlink>
     		 HAL_Delay(1000);
 8000ab6:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000aba:	f000 fc77 	bl	80013ac <HAL_Delay>
     		 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_11, 0);
 8000abe:	2200      	movs	r2, #0
 8000ac0:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8000ac4:	483a      	ldr	r0, [pc, #232]	@ (8000bb0 <Xu_Ly_Mat_Khau+0x1f0>)
 8000ac6:	f001 f914 	bl	8001cf2 <HAL_GPIO_WritePin>
     		 False_Passcode--;
 8000aca:	4b3d      	ldr	r3, [pc, #244]	@ (8000bc0 <Xu_Ly_Mat_Khau+0x200>)
 8000acc:	781b      	ldrb	r3, [r3, #0]
 8000ace:	3b01      	subs	r3, #1
 8000ad0:	b2da      	uxtb	r2, r3
 8000ad2:	4b3b      	ldr	r3, [pc, #236]	@ (8000bc0 <Xu_Ly_Mat_Khau+0x200>)
 8000ad4:	701a      	strb	r2, [r3, #0]
     		 if(False_Passcode == 0)
 8000ad6:	4b3a      	ldr	r3, [pc, #232]	@ (8000bc0 <Xu_Ly_Mat_Khau+0x200>)
 8000ad8:	781b      	ldrb	r3, [r3, #0]
 8000ada:	2b00      	cmp	r3, #0
 8000adc:	d10f      	bne.n	8000afe <Xu_Ly_Mat_Khau+0x13e>
     		 {
     			 LCD_Clear();
 8000ade:	f7ff fbf3 	bl	80002c8 <LCD_Clear>
     			 LCD_SetCursor(0, 0);
 8000ae2:	2100      	movs	r1, #0
 8000ae4:	2000      	movs	r0, #0
 8000ae6:	f7ff fbf9 	bl	80002dc <LCD_SetCursor>
     			 LCD_Print("WAITING FOR 30s");
 8000aea:	4836      	ldr	r0, [pc, #216]	@ (8000bc4 <Xu_Ly_Mat_Khau+0x204>)
 8000aec:	f7ff fbd7 	bl	800029e <LCD_Print>
     			 HAL_Delay(30000);
 8000af0:	f247 5030 	movw	r0, #30000	@ 0x7530
 8000af4:	f000 fc5a 	bl	80013ac <HAL_Delay>
     			 False_Passcode = 3;
 8000af8:	4b31      	ldr	r3, [pc, #196]	@ (8000bc0 <Xu_Ly_Mat_Khau+0x200>)
 8000afa:	2203      	movs	r2, #3
 8000afc:	701a      	strb	r2, [r3, #0]
     		 }
     		 Reset_LCD();
 8000afe:	f7ff fd95 	bl	800062c <Reset_LCD>
     		 GPIOA -> BSRR = (1 << 19);
     		 GPIOB -> BSRR = (1 << 26);
     		 False_Passcode = 3;
     		 Reset_LCD();
     	 }
     }
 8000b02:	e044      	b.n	8000b8e <Xu_Ly_Mat_Khau+0x1ce>
     		 HAL_GPIO_WritePin(GPIOB,GPIO_PIN_10, 1);
 8000b04:	2201      	movs	r2, #1
 8000b06:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000b0a:	4829      	ldr	r0, [pc, #164]	@ (8000bb0 <Xu_Ly_Mat_Khau+0x1f0>)
 8000b0c:	f001 f8f1 	bl	8001cf2 <HAL_GPIO_WritePin>
     		 for(int i=0; i<4; i++)
 8000b10:	2300      	movs	r3, #0
 8000b12:	607b      	str	r3, [r7, #4]
 8000b14:	e012      	b.n	8000b3c <Xu_Ly_Mat_Khau+0x17c>
     			 HAL_GPIO_WritePin(GPIOA,GPIO_PIN_2, 1);
 8000b16:	2201      	movs	r2, #1
 8000b18:	2104      	movs	r1, #4
 8000b1a:	4826      	ldr	r0, [pc, #152]	@ (8000bb4 <Xu_Ly_Mat_Khau+0x1f4>)
 8000b1c:	f001 f8e9 	bl	8001cf2 <HAL_GPIO_WritePin>
     			 HAL_Delay(100);
 8000b20:	2064      	movs	r0, #100	@ 0x64
 8000b22:	f000 fc43 	bl	80013ac <HAL_Delay>
     			 HAL_GPIO_WritePin(GPIOA,GPIO_PIN_2, 0);
 8000b26:	2200      	movs	r2, #0
 8000b28:	2104      	movs	r1, #4
 8000b2a:	4822      	ldr	r0, [pc, #136]	@ (8000bb4 <Xu_Ly_Mat_Khau+0x1f4>)
 8000b2c:	f001 f8e1 	bl	8001cf2 <HAL_GPIO_WritePin>
     			 HAL_Delay(100);
 8000b30:	2064      	movs	r0, #100	@ 0x64
 8000b32:	f000 fc3b 	bl	80013ac <HAL_Delay>
     		 for(int i=0; i<4; i++)
 8000b36:	687b      	ldr	r3, [r7, #4]
 8000b38:	3301      	adds	r3, #1
 8000b3a:	607b      	str	r3, [r7, #4]
 8000b3c:	687b      	ldr	r3, [r7, #4]
 8000b3e:	2b03      	cmp	r3, #3
 8000b40:	dde9      	ble.n	8000b16 <Xu_Ly_Mat_Khau+0x156>
     		 LCD_Clear();
 8000b42:	f7ff fbc1 	bl	80002c8 <LCD_Clear>
     		 LCD_SetCursor(0, 2);
 8000b46:	2102      	movs	r1, #2
 8000b48:	2000      	movs	r0, #0
 8000b4a:	f7ff fbc7 	bl	80002dc <LCD_SetCursor>
     		 LCD_Print("HiHi,SUCCESS!!");
 8000b4e:	481e      	ldr	r0, [pc, #120]	@ (8000bc8 <Xu_Ly_Mat_Khau+0x208>)
 8000b50:	f7ff fba5 	bl	800029e <LCD_Print>
     		 LCD_SetCursor(1, 3);
 8000b54:	2103      	movs	r1, #3
 8000b56:	2001      	movs	r0, #1
 8000b58:	f7ff fbc0 	bl	80002dc <LCD_SetCursor>
     		 LCD_Print("WELLCOME!!!");
 8000b5c:	481b      	ldr	r0, [pc, #108]	@ (8000bcc <Xu_Ly_Mat_Khau+0x20c>)
 8000b5e:	f7ff fb9e 	bl	800029e <LCD_Print>
     		 LCD_DisableCursorBlink();
 8000b62:	f7ff fbde 	bl	8000322 <LCD_DisableCursorBlink>
     		 GPIOA -> BSRR = (1 << 3);
 8000b66:	4b13      	ldr	r3, [pc, #76]	@ (8000bb4 <Xu_Ly_Mat_Khau+0x1f4>)
 8000b68:	2208      	movs	r2, #8
 8000b6a:	611a      	str	r2, [r3, #16]
     		 HAL_Delay(6000);
 8000b6c:	f241 7070 	movw	r0, #6000	@ 0x1770
 8000b70:	f000 fc1c 	bl	80013ac <HAL_Delay>
     		 GPIOA -> BSRR = (1 << 19);
 8000b74:	4b0f      	ldr	r3, [pc, #60]	@ (8000bb4 <Xu_Ly_Mat_Khau+0x1f4>)
 8000b76:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
 8000b7a:	611a      	str	r2, [r3, #16]
     		 GPIOB -> BSRR = (1 << 26);
 8000b7c:	4b0c      	ldr	r3, [pc, #48]	@ (8000bb0 <Xu_Ly_Mat_Khau+0x1f0>)
 8000b7e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000b82:	611a      	str	r2, [r3, #16]
     		 False_Passcode = 3;
 8000b84:	4b0e      	ldr	r3, [pc, #56]	@ (8000bc0 <Xu_Ly_Mat_Khau+0x200>)
 8000b86:	2203      	movs	r2, #3
 8000b88:	701a      	strb	r2, [r3, #0]
     		 Reset_LCD();
 8000b8a:	f7ff fd4f 	bl	800062c <Reset_LCD>
     }
 8000b8e:	bf00      	nop
 8000b90:	3710      	adds	r7, #16
 8000b92:	46bd      	mov	sp, r7
 8000b94:	bd80      	pop	{r7, pc}
 8000b96:	bf00      	nop
 8000b98:	20000044 	.word	0x20000044
 8000b9c:	20000048 	.word	0x20000048
 8000ba0:	2000003c 	.word	0x2000003c
 8000ba4:	20000034 	.word	0x20000034
 8000ba8:	20000042 	.word	0x20000042
 8000bac:	20000000 	.word	0x20000000
 8000bb0:	40010c00 	.word	0x40010c00
 8000bb4:	40010800 	.word	0x40010800
 8000bb8:	08002c68 	.word	0x08002c68
 8000bbc:	08002c70 	.word	0x08002c70
 8000bc0:	20000008 	.word	0x20000008
 8000bc4:	08002c80 	.word	0x08002c80
 8000bc8:	08002c90 	.word	0x08002c90
 8000bcc:	08002ca0 	.word	0x08002ca0

08000bd0 <KeyPad>:

     //CHECK KEYPAD-----------------------------------------------
     int KeyPad()
     {
 8000bd0:	b580      	push	{r7, lr}
 8000bd2:	af00      	add	r7, sp, #0
    	 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_3|GPIO_PIN_8, 1);
 8000bd4:	2201      	movs	r2, #1
 8000bd6:	f240 110b 	movw	r1, #267	@ 0x10b
 8000bda:	48b6      	ldr	r0, [pc, #728]	@ (8000eb4 <KeyPad+0x2e4>)
 8000bdc:	f001 f889 	bl	8001cf2 <HAL_GPIO_WritePin>
    	 //SCAN COLUMN 1.
    	 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, 0);
 8000be0:	2200      	movs	r2, #0
 8000be2:	2101      	movs	r1, #1
 8000be4:	48b3      	ldr	r0, [pc, #716]	@ (8000eb4 <KeyPad+0x2e4>)
 8000be6:	f001 f884 	bl	8001cf2 <HAL_GPIO_WritePin>
    	 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1|GPIO_PIN_8|GPIO_PIN_3, 1);
 8000bea:	2201      	movs	r2, #1
 8000bec:	f44f 7185 	mov.w	r1, #266	@ 0x10a
 8000bf0:	48b0      	ldr	r0, [pc, #704]	@ (8000eb4 <KeyPad+0x2e4>)
 8000bf2:	f001 f87e 	bl	8001cf2 <HAL_GPIO_WritePin>
    	 // NUMBER 7 BUTTON.
    	 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0)
 8000bf6:	2110      	movs	r1, #16
 8000bf8:	48ae      	ldr	r0, [pc, #696]	@ (8000eb4 <KeyPad+0x2e4>)
 8000bfa:	f001 f863 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000bfe:	4603      	mov	r3, r0
 8000c00:	2b00      	cmp	r3, #0
 8000c02:	d124      	bne.n	8000c4e <KeyPad+0x7e>
    	 {
    		 HAL_Delay(130);
 8000c04:	2082      	movs	r0, #130	@ 0x82
 8000c06:	f000 fbd1 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0)
 8000c0a:	2110      	movs	r1, #16
 8000c0c:	48a9      	ldr	r0, [pc, #676]	@ (8000eb4 <KeyPad+0x2e4>)
 8000c0e:	f001 f859 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000c12:	4603      	mov	r3, r0
 8000c14:	2b00      	cmp	r3, #0
 8000c16:	d11a      	bne.n	8000c4e <KeyPad+0x7e>
    		 {
    			 LCD_SetCursor(x, y);
 8000c18:	4ba7      	ldr	r3, [pc, #668]	@ (8000eb8 <KeyPad+0x2e8>)
 8000c1a:	781b      	ldrb	r3, [r3, #0]
 8000c1c:	4aa7      	ldr	r2, [pc, #668]	@ (8000ebc <KeyPad+0x2ec>)
 8000c1e:	7812      	ldrb	r2, [r2, #0]
 8000c20:	4611      	mov	r1, r2
 8000c22:	4618      	mov	r0, r3
 8000c24:	f7ff fb5a 	bl	80002dc <LCD_SetCursor>
    			 LCD_CursorBlink();
 8000c28:	f7ff fb74 	bl	8000314 <LCD_CursorBlink>
    			 LCD_Print("7");
 8000c2c:	48a4      	ldr	r0, [pc, #656]	@ (8000ec0 <KeyPad+0x2f0>)
 8000c2e:	f7ff fb36 	bl	800029e <LCD_Print>
    			 key = 7;
 8000c32:	4ba4      	ldr	r3, [pc, #656]	@ (8000ec4 <KeyPad+0x2f4>)
 8000c34:	2207      	movs	r2, #7
 8000c36:	701a      	strb	r2, [r3, #0]
    			 Read_Keypad(key);
 8000c38:	4ba2      	ldr	r3, [pc, #648]	@ (8000ec4 <KeyPad+0x2f4>)
 8000c3a:	781b      	ldrb	r3, [r3, #0]
 8000c3c:	4618      	mov	r0, r3
 8000c3e:	f7ff fd33 	bl	80006a8 <Read_Keypad>
    			 y = y + 1;
 8000c42:	4b9e      	ldr	r3, [pc, #632]	@ (8000ebc <KeyPad+0x2ec>)
 8000c44:	781b      	ldrb	r3, [r3, #0]
 8000c46:	3301      	adds	r3, #1
 8000c48:	b2da      	uxtb	r2, r3
 8000c4a:	4b9c      	ldr	r3, [pc, #624]	@ (8000ebc <KeyPad+0x2ec>)
 8000c4c:	701a      	strb	r2, [r3, #0]
    	 }
    	 }
    	 // NUMBER 4 BUTTON.
    	 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0)
 8000c4e:	2120      	movs	r1, #32
 8000c50:	4898      	ldr	r0, [pc, #608]	@ (8000eb4 <KeyPad+0x2e4>)
 8000c52:	f001 f837 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000c56:	4603      	mov	r3, r0
 8000c58:	2b00      	cmp	r3, #0
 8000c5a:	d124      	bne.n	8000ca6 <KeyPad+0xd6>
    	 {
    		 HAL_Delay(130);
 8000c5c:	2082      	movs	r0, #130	@ 0x82
 8000c5e:	f000 fba5 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0)
 8000c62:	2120      	movs	r1, #32
 8000c64:	4893      	ldr	r0, [pc, #588]	@ (8000eb4 <KeyPad+0x2e4>)
 8000c66:	f001 f82d 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000c6a:	4603      	mov	r3, r0
 8000c6c:	2b00      	cmp	r3, #0
 8000c6e:	d11a      	bne.n	8000ca6 <KeyPad+0xd6>
    		 {
    			 LCD_SetCursor(x, y);
 8000c70:	4b91      	ldr	r3, [pc, #580]	@ (8000eb8 <KeyPad+0x2e8>)
 8000c72:	781b      	ldrb	r3, [r3, #0]
 8000c74:	4a91      	ldr	r2, [pc, #580]	@ (8000ebc <KeyPad+0x2ec>)
 8000c76:	7812      	ldrb	r2, [r2, #0]
 8000c78:	4611      	mov	r1, r2
 8000c7a:	4618      	mov	r0, r3
 8000c7c:	f7ff fb2e 	bl	80002dc <LCD_SetCursor>
    			 LCD_CursorBlink();
 8000c80:	f7ff fb48 	bl	8000314 <LCD_CursorBlink>
    			 LCD_Print("4");
 8000c84:	4890      	ldr	r0, [pc, #576]	@ (8000ec8 <KeyPad+0x2f8>)
 8000c86:	f7ff fb0a 	bl	800029e <LCD_Print>
    			 key = 4;
 8000c8a:	4b8e      	ldr	r3, [pc, #568]	@ (8000ec4 <KeyPad+0x2f4>)
 8000c8c:	2204      	movs	r2, #4
 8000c8e:	701a      	strb	r2, [r3, #0]
    			 Read_Keypad(key);
 8000c90:	4b8c      	ldr	r3, [pc, #560]	@ (8000ec4 <KeyPad+0x2f4>)
 8000c92:	781b      	ldrb	r3, [r3, #0]
 8000c94:	4618      	mov	r0, r3
 8000c96:	f7ff fd07 	bl	80006a8 <Read_Keypad>
    			 y = y + 1;
 8000c9a:	4b88      	ldr	r3, [pc, #544]	@ (8000ebc <KeyPad+0x2ec>)
 8000c9c:	781b      	ldrb	r3, [r3, #0]
 8000c9e:	3301      	adds	r3, #1
 8000ca0:	b2da      	uxtb	r2, r3
 8000ca2:	4b86      	ldr	r3, [pc, #536]	@ (8000ebc <KeyPad+0x2ec>)
 8000ca4:	701a      	strb	r2, [r3, #0]
    		 }
    	 }

    	 // NUMBER 1 BUTTON.

    	 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0)
 8000ca6:	2140      	movs	r1, #64	@ 0x40
 8000ca8:	4882      	ldr	r0, [pc, #520]	@ (8000eb4 <KeyPad+0x2e4>)
 8000caa:	f001 f80b 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000cae:	4603      	mov	r3, r0
 8000cb0:	2b00      	cmp	r3, #0
 8000cb2:	d124      	bne.n	8000cfe <KeyPad+0x12e>
    	 {
    		 HAL_Delay(100);
 8000cb4:	2064      	movs	r0, #100	@ 0x64
 8000cb6:	f000 fb79 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0)
 8000cba:	2140      	movs	r1, #64	@ 0x40
 8000cbc:	487d      	ldr	r0, [pc, #500]	@ (8000eb4 <KeyPad+0x2e4>)
 8000cbe:	f001 f801 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000cc2:	4603      	mov	r3, r0
 8000cc4:	2b00      	cmp	r3, #0
 8000cc6:	d11a      	bne.n	8000cfe <KeyPad+0x12e>
    		 {
    			 LCD_SetCursor(x, y);
 8000cc8:	4b7b      	ldr	r3, [pc, #492]	@ (8000eb8 <KeyPad+0x2e8>)
 8000cca:	781b      	ldrb	r3, [r3, #0]
 8000ccc:	4a7b      	ldr	r2, [pc, #492]	@ (8000ebc <KeyPad+0x2ec>)
 8000cce:	7812      	ldrb	r2, [r2, #0]
 8000cd0:	4611      	mov	r1, r2
 8000cd2:	4618      	mov	r0, r3
 8000cd4:	f7ff fb02 	bl	80002dc <LCD_SetCursor>
    			 LCD_CursorBlink();
 8000cd8:	f7ff fb1c 	bl	8000314 <LCD_CursorBlink>
    			 LCD_Print("1");
 8000cdc:	487b      	ldr	r0, [pc, #492]	@ (8000ecc <KeyPad+0x2fc>)
 8000cde:	f7ff fade 	bl	800029e <LCD_Print>
    			 key = 1;
 8000ce2:	4b78      	ldr	r3, [pc, #480]	@ (8000ec4 <KeyPad+0x2f4>)
 8000ce4:	2201      	movs	r2, #1
 8000ce6:	701a      	strb	r2, [r3, #0]
    			 Read_Keypad(key);
 8000ce8:	4b76      	ldr	r3, [pc, #472]	@ (8000ec4 <KeyPad+0x2f4>)
 8000cea:	781b      	ldrb	r3, [r3, #0]
 8000cec:	4618      	mov	r0, r3
 8000cee:	f7ff fcdb 	bl	80006a8 <Read_Keypad>
    			 y = y + 1;
 8000cf2:	4b72      	ldr	r3, [pc, #456]	@ (8000ebc <KeyPad+0x2ec>)
 8000cf4:	781b      	ldrb	r3, [r3, #0]
 8000cf6:	3301      	adds	r3, #1
 8000cf8:	b2da      	uxtb	r2, r3
 8000cfa:	4b70      	ldr	r3, [pc, #448]	@ (8000ebc <KeyPad+0x2ec>)
 8000cfc:	701a      	strb	r2, [r3, #0]
    		 }
    	 }
    	 // SYMBOL "*" BUTTON.
    	 if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0)
 8000cfe:	2180      	movs	r1, #128	@ 0x80
 8000d00:	486c      	ldr	r0, [pc, #432]	@ (8000eb4 <KeyPad+0x2e4>)
 8000d02:	f000 ffdf 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000d06:	4603      	mov	r3, r0
 8000d08:	2b00      	cmp	r3, #0
 8000d0a:	d11c      	bne.n	8000d46 <KeyPad+0x176>
    	 {
    		 HAL_Delay(130);
 8000d0c:	2082      	movs	r0, #130	@ 0x82
 8000d0e:	f000 fb4d 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0)
 8000d12:	2180      	movs	r1, #128	@ 0x80
 8000d14:	4867      	ldr	r0, [pc, #412]	@ (8000eb4 <KeyPad+0x2e4>)
 8000d16:	f000 ffd5 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000d1a:	4603      	mov	r3, r0
 8000d1c:	2b00      	cmp	r3, #0
 8000d1e:	d112      	bne.n	8000d46 <KeyPad+0x176>
    		 {
    			 LCD_SetCursor(x, y);
 8000d20:	4b65      	ldr	r3, [pc, #404]	@ (8000eb8 <KeyPad+0x2e8>)
 8000d22:	781b      	ldrb	r3, [r3, #0]
 8000d24:	4a65      	ldr	r2, [pc, #404]	@ (8000ebc <KeyPad+0x2ec>)
 8000d26:	7812      	ldrb	r2, [r2, #0]
 8000d28:	4611      	mov	r1, r2
 8000d2a:	4618      	mov	r0, r3
 8000d2c:	f7ff fad6 	bl	80002dc <LCD_SetCursor>
    			 LCD_CursorBlink();
 8000d30:	f7ff faf0 	bl	8000314 <LCD_CursorBlink>
    			 LCD_Print("*");
 8000d34:	4866      	ldr	r0, [pc, #408]	@ (8000ed0 <KeyPad+0x300>)
 8000d36:	f7ff fab2 	bl	800029e <LCD_Print>
    			 y = y + 1;
 8000d3a:	4b60      	ldr	r3, [pc, #384]	@ (8000ebc <KeyPad+0x2ec>)
 8000d3c:	781b      	ldrb	r3, [r3, #0]
 8000d3e:	3301      	adds	r3, #1
 8000d40:	b2da      	uxtb	r2, r3
 8000d42:	4b5e      	ldr	r3, [pc, #376]	@ (8000ebc <KeyPad+0x2ec>)
 8000d44:	701a      	strb	r2, [r3, #0]
    		 }
    	 }
    	 //------------------------------------------------------------
    	 // SCAN COLUMN 2
    	 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, 0);
 8000d46:	2200      	movs	r2, #0
 8000d48:	2102      	movs	r1, #2
 8000d4a:	485a      	ldr	r0, [pc, #360]	@ (8000eb4 <KeyPad+0x2e4>)
 8000d4c:	f000 ffd1 	bl	8001cf2 <HAL_GPIO_WritePin>
    	 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_3, 1);
 8000d50:	2201      	movs	r2, #1
 8000d52:	f240 1109 	movw	r1, #265	@ 0x109
 8000d56:	4857      	ldr	r0, [pc, #348]	@ (8000eb4 <KeyPad+0x2e4>)
 8000d58:	f000 ffcb 	bl	8001cf2 <HAL_GPIO_WritePin>
    	 // NUMBER 8 BUTTON.
    	 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0)
 8000d5c:	2110      	movs	r1, #16
 8000d5e:	4855      	ldr	r0, [pc, #340]	@ (8000eb4 <KeyPad+0x2e4>)
 8000d60:	f000 ffb0 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000d64:	4603      	mov	r3, r0
 8000d66:	2b00      	cmp	r3, #0
 8000d68:	d124      	bne.n	8000db4 <KeyPad+0x1e4>
    	 {
    		 HAL_Delay(130);
 8000d6a:	2082      	movs	r0, #130	@ 0x82
 8000d6c:	f000 fb1e 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0)
 8000d70:	2110      	movs	r1, #16
 8000d72:	4850      	ldr	r0, [pc, #320]	@ (8000eb4 <KeyPad+0x2e4>)
 8000d74:	f000 ffa6 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000d78:	4603      	mov	r3, r0
 8000d7a:	2b00      	cmp	r3, #0
 8000d7c:	d11a      	bne.n	8000db4 <KeyPad+0x1e4>
    		 {
    			 LCD_SetCursor(x, y);
 8000d7e:	4b4e      	ldr	r3, [pc, #312]	@ (8000eb8 <KeyPad+0x2e8>)
 8000d80:	781b      	ldrb	r3, [r3, #0]
 8000d82:	4a4e      	ldr	r2, [pc, #312]	@ (8000ebc <KeyPad+0x2ec>)
 8000d84:	7812      	ldrb	r2, [r2, #0]
 8000d86:	4611      	mov	r1, r2
 8000d88:	4618      	mov	r0, r3
 8000d8a:	f7ff faa7 	bl	80002dc <LCD_SetCursor>
    			 LCD_CursorBlink();
 8000d8e:	f7ff fac1 	bl	8000314 <LCD_CursorBlink>
    			 LCD_Print("8");
 8000d92:	4850      	ldr	r0, [pc, #320]	@ (8000ed4 <KeyPad+0x304>)
 8000d94:	f7ff fa83 	bl	800029e <LCD_Print>
    			 key = 8;
 8000d98:	4b4a      	ldr	r3, [pc, #296]	@ (8000ec4 <KeyPad+0x2f4>)
 8000d9a:	2208      	movs	r2, #8
 8000d9c:	701a      	strb	r2, [r3, #0]
    			 Read_Keypad(key);
 8000d9e:	4b49      	ldr	r3, [pc, #292]	@ (8000ec4 <KeyPad+0x2f4>)
 8000da0:	781b      	ldrb	r3, [r3, #0]
 8000da2:	4618      	mov	r0, r3
 8000da4:	f7ff fc80 	bl	80006a8 <Read_Keypad>
    			 y = y + 1;
 8000da8:	4b44      	ldr	r3, [pc, #272]	@ (8000ebc <KeyPad+0x2ec>)
 8000daa:	781b      	ldrb	r3, [r3, #0]
 8000dac:	3301      	adds	r3, #1
 8000dae:	b2da      	uxtb	r2, r3
 8000db0:	4b42      	ldr	r3, [pc, #264]	@ (8000ebc <KeyPad+0x2ec>)
 8000db2:	701a      	strb	r2, [r3, #0]
    		 }
    	 }
    	 // NUMBER 5 BUTTON.
    	 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0)
 8000db4:	2120      	movs	r1, #32
 8000db6:	483f      	ldr	r0, [pc, #252]	@ (8000eb4 <KeyPad+0x2e4>)
 8000db8:	f000 ff84 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000dbc:	4603      	mov	r3, r0
 8000dbe:	2b00      	cmp	r3, #0
 8000dc0:	d124      	bne.n	8000e0c <KeyPad+0x23c>
    	 {
    		 HAL_Delay(130);
 8000dc2:	2082      	movs	r0, #130	@ 0x82
 8000dc4:	f000 faf2 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0)
 8000dc8:	2120      	movs	r1, #32
 8000dca:	483a      	ldr	r0, [pc, #232]	@ (8000eb4 <KeyPad+0x2e4>)
 8000dcc:	f000 ff7a 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000dd0:	4603      	mov	r3, r0
 8000dd2:	2b00      	cmp	r3, #0
 8000dd4:	d11a      	bne.n	8000e0c <KeyPad+0x23c>
    		 {
    			 LCD_SetCursor(x, y);
 8000dd6:	4b38      	ldr	r3, [pc, #224]	@ (8000eb8 <KeyPad+0x2e8>)
 8000dd8:	781b      	ldrb	r3, [r3, #0]
 8000dda:	4a38      	ldr	r2, [pc, #224]	@ (8000ebc <KeyPad+0x2ec>)
 8000ddc:	7812      	ldrb	r2, [r2, #0]
 8000dde:	4611      	mov	r1, r2
 8000de0:	4618      	mov	r0, r3
 8000de2:	f7ff fa7b 	bl	80002dc <LCD_SetCursor>
    			 LCD_CursorBlink();
 8000de6:	f7ff fa95 	bl	8000314 <LCD_CursorBlink>
    			 LCD_Print("5");
 8000dea:	483b      	ldr	r0, [pc, #236]	@ (8000ed8 <KeyPad+0x308>)
 8000dec:	f7ff fa57 	bl	800029e <LCD_Print>
    			 key = 5;
 8000df0:	4b34      	ldr	r3, [pc, #208]	@ (8000ec4 <KeyPad+0x2f4>)
 8000df2:	2205      	movs	r2, #5
 8000df4:	701a      	strb	r2, [r3, #0]
    			 Read_Keypad(key);
 8000df6:	4b33      	ldr	r3, [pc, #204]	@ (8000ec4 <KeyPad+0x2f4>)
 8000df8:	781b      	ldrb	r3, [r3, #0]
 8000dfa:	4618      	mov	r0, r3
 8000dfc:	f7ff fc54 	bl	80006a8 <Read_Keypad>
    			 y = y + 1;
 8000e00:	4b2e      	ldr	r3, [pc, #184]	@ (8000ebc <KeyPad+0x2ec>)
 8000e02:	781b      	ldrb	r3, [r3, #0]
 8000e04:	3301      	adds	r3, #1
 8000e06:	b2da      	uxtb	r2, r3
 8000e08:	4b2c      	ldr	r3, [pc, #176]	@ (8000ebc <KeyPad+0x2ec>)
 8000e0a:	701a      	strb	r2, [r3, #0]
    		 }
    	 }
    	 // NUMBER 2 BUTTON.
    	 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0)
 8000e0c:	2140      	movs	r1, #64	@ 0x40
 8000e0e:	4829      	ldr	r0, [pc, #164]	@ (8000eb4 <KeyPad+0x2e4>)
 8000e10:	f000 ff58 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000e14:	4603      	mov	r3, r0
 8000e16:	2b00      	cmp	r3, #0
 8000e18:	d124      	bne.n	8000e64 <KeyPad+0x294>
    	 {
    		 HAL_Delay(130);
 8000e1a:	2082      	movs	r0, #130	@ 0x82
 8000e1c:	f000 fac6 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0)
 8000e20:	2140      	movs	r1, #64	@ 0x40
 8000e22:	4824      	ldr	r0, [pc, #144]	@ (8000eb4 <KeyPad+0x2e4>)
 8000e24:	f000 ff4e 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000e28:	4603      	mov	r3, r0
 8000e2a:	2b00      	cmp	r3, #0
 8000e2c:	d11a      	bne.n	8000e64 <KeyPad+0x294>
    		 {
    			 LCD_SetCursor(x, y);
 8000e2e:	4b22      	ldr	r3, [pc, #136]	@ (8000eb8 <KeyPad+0x2e8>)
 8000e30:	781b      	ldrb	r3, [r3, #0]
 8000e32:	4a22      	ldr	r2, [pc, #136]	@ (8000ebc <KeyPad+0x2ec>)
 8000e34:	7812      	ldrb	r2, [r2, #0]
 8000e36:	4611      	mov	r1, r2
 8000e38:	4618      	mov	r0, r3
 8000e3a:	f7ff fa4f 	bl	80002dc <LCD_SetCursor>
    			 LCD_CursorBlink();
 8000e3e:	f7ff fa69 	bl	8000314 <LCD_CursorBlink>
    			 LCD_Print("2");
 8000e42:	4826      	ldr	r0, [pc, #152]	@ (8000edc <KeyPad+0x30c>)
 8000e44:	f7ff fa2b 	bl	800029e <LCD_Print>
    			 key = 2;
 8000e48:	4b1e      	ldr	r3, [pc, #120]	@ (8000ec4 <KeyPad+0x2f4>)
 8000e4a:	2202      	movs	r2, #2
 8000e4c:	701a      	strb	r2, [r3, #0]
    			 Read_Keypad(key);
 8000e4e:	4b1d      	ldr	r3, [pc, #116]	@ (8000ec4 <KeyPad+0x2f4>)
 8000e50:	781b      	ldrb	r3, [r3, #0]
 8000e52:	4618      	mov	r0, r3
 8000e54:	f7ff fc28 	bl	80006a8 <Read_Keypad>
    			 y = y + 1;
 8000e58:	4b18      	ldr	r3, [pc, #96]	@ (8000ebc <KeyPad+0x2ec>)
 8000e5a:	781b      	ldrb	r3, [r3, #0]
 8000e5c:	3301      	adds	r3, #1
 8000e5e:	b2da      	uxtb	r2, r3
 8000e60:	4b16      	ldr	r3, [pc, #88]	@ (8000ebc <KeyPad+0x2ec>)
 8000e62:	701a      	strb	r2, [r3, #0]
    		 }
    	 }
    	 // NUMBER 0 BUTTON.
    	 if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0)
 8000e64:	2180      	movs	r1, #128	@ 0x80
 8000e66:	4813      	ldr	r0, [pc, #76]	@ (8000eb4 <KeyPad+0x2e4>)
 8000e68:	f000 ff2c 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000e6c:	4603      	mov	r3, r0
 8000e6e:	2b00      	cmp	r3, #0
 8000e70:	d13e      	bne.n	8000ef0 <KeyPad+0x320>
    	 {
    		 HAL_Delay(100);
 8000e72:	2064      	movs	r0, #100	@ 0x64
 8000e74:	f000 fa9a 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0)
 8000e78:	2180      	movs	r1, #128	@ 0x80
 8000e7a:	480e      	ldr	r0, [pc, #56]	@ (8000eb4 <KeyPad+0x2e4>)
 8000e7c:	f000 ff22 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000e80:	4603      	mov	r3, r0
 8000e82:	2b00      	cmp	r3, #0
 8000e84:	d134      	bne.n	8000ef0 <KeyPad+0x320>
    		 {
    			 LCD_SetCursor(x, y);
 8000e86:	4b0c      	ldr	r3, [pc, #48]	@ (8000eb8 <KeyPad+0x2e8>)
 8000e88:	781b      	ldrb	r3, [r3, #0]
 8000e8a:	4a0c      	ldr	r2, [pc, #48]	@ (8000ebc <KeyPad+0x2ec>)
 8000e8c:	7812      	ldrb	r2, [r2, #0]
 8000e8e:	4611      	mov	r1, r2
 8000e90:	4618      	mov	r0, r3
 8000e92:	f7ff fa23 	bl	80002dc <LCD_SetCursor>
    			 LCD_CursorBlink();
 8000e96:	f7ff fa3d 	bl	8000314 <LCD_CursorBlink>
    			 LCD_Print("0");
 8000e9a:	4811      	ldr	r0, [pc, #68]	@ (8000ee0 <KeyPad+0x310>)
 8000e9c:	f7ff f9ff 	bl	800029e <LCD_Print>
    			 key = 0;
 8000ea0:	4b08      	ldr	r3, [pc, #32]	@ (8000ec4 <KeyPad+0x2f4>)
 8000ea2:	2200      	movs	r2, #0
 8000ea4:	701a      	strb	r2, [r3, #0]
    			 Read_Keypad(key);
 8000ea6:	4b07      	ldr	r3, [pc, #28]	@ (8000ec4 <KeyPad+0x2f4>)
 8000ea8:	781b      	ldrb	r3, [r3, #0]
 8000eaa:	4618      	mov	r0, r3
 8000eac:	f7ff fbfc 	bl	80006a8 <Read_Keypad>
 8000eb0:	e018      	b.n	8000ee4 <KeyPad+0x314>
 8000eb2:	bf00      	nop
 8000eb4:	40010c00 	.word	0x40010c00
 8000eb8:	20000006 	.word	0x20000006
 8000ebc:	20000007 	.word	0x20000007
 8000ec0:	08002cac 	.word	0x08002cac
 8000ec4:	20000043 	.word	0x20000043
 8000ec8:	08002cb0 	.word	0x08002cb0
 8000ecc:	08002cb4 	.word	0x08002cb4
 8000ed0:	08002cb8 	.word	0x08002cb8
 8000ed4:	08002cbc 	.word	0x08002cbc
 8000ed8:	08002cc0 	.word	0x08002cc0
 8000edc:	08002cc4 	.word	0x08002cc4
 8000ee0:	08002cc8 	.word	0x08002cc8
    			 y = y + 1;
 8000ee4:	4b9e      	ldr	r3, [pc, #632]	@ (8001160 <KeyPad+0x590>)
 8000ee6:	781b      	ldrb	r3, [r3, #0]
 8000ee8:	3301      	adds	r3, #1
 8000eea:	b2da      	uxtb	r2, r3
 8000eec:	4b9c      	ldr	r3, [pc, #624]	@ (8001160 <KeyPad+0x590>)
 8000eee:	701a      	strb	r2, [r3, #0]
    		 }
    	 }
    	 //-------------------------------------------------------------
    	 // SCAN COLUMN 3.
    	 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, 0);
 8000ef0:	2200      	movs	r2, #0
 8000ef2:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000ef6:	489b      	ldr	r0, [pc, #620]	@ (8001164 <KeyPad+0x594>)
 8000ef8:	f000 fefb 	bl	8001cf2 <HAL_GPIO_WritePin>
    	 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_3, 1);
 8000efc:	2201      	movs	r2, #1
 8000efe:	210b      	movs	r1, #11
 8000f00:	4898      	ldr	r0, [pc, #608]	@ (8001164 <KeyPad+0x594>)
 8000f02:	f000 fef6 	bl	8001cf2 <HAL_GPIO_WritePin>
    	 // NUMBER 9 BUTTON.
    	 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0)
 8000f06:	2110      	movs	r1, #16
 8000f08:	4896      	ldr	r0, [pc, #600]	@ (8001164 <KeyPad+0x594>)
 8000f0a:	f000 fedb 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000f0e:	4603      	mov	r3, r0
 8000f10:	2b00      	cmp	r3, #0
 8000f12:	d124      	bne.n	8000f5e <KeyPad+0x38e>
    	 {
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0)
 8000f14:	2110      	movs	r1, #16
 8000f16:	4893      	ldr	r0, [pc, #588]	@ (8001164 <KeyPad+0x594>)
 8000f18:	f000 fed4 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000f1c:	4603      	mov	r3, r0
 8000f1e:	2b00      	cmp	r3, #0
 8000f20:	d11d      	bne.n	8000f5e <KeyPad+0x38e>
    		 {
    			 HAL_Delay(130);
 8000f22:	2082      	movs	r0, #130	@ 0x82
 8000f24:	f000 fa42 	bl	80013ac <HAL_Delay>
    			 LCD_SetCursor(x, y);
 8000f28:	4b8f      	ldr	r3, [pc, #572]	@ (8001168 <KeyPad+0x598>)
 8000f2a:	781b      	ldrb	r3, [r3, #0]
 8000f2c:	4a8c      	ldr	r2, [pc, #560]	@ (8001160 <KeyPad+0x590>)
 8000f2e:	7812      	ldrb	r2, [r2, #0]
 8000f30:	4611      	mov	r1, r2
 8000f32:	4618      	mov	r0, r3
 8000f34:	f7ff f9d2 	bl	80002dc <LCD_SetCursor>
    			 LCD_CursorBlink();
 8000f38:	f7ff f9ec 	bl	8000314 <LCD_CursorBlink>
    			 LCD_Print("9");
 8000f3c:	488b      	ldr	r0, [pc, #556]	@ (800116c <KeyPad+0x59c>)
 8000f3e:	f7ff f9ae 	bl	800029e <LCD_Print>
    			 key = 9;
 8000f42:	4b8b      	ldr	r3, [pc, #556]	@ (8001170 <KeyPad+0x5a0>)
 8000f44:	2209      	movs	r2, #9
 8000f46:	701a      	strb	r2, [r3, #0]
    			 Read_Keypad(key);
 8000f48:	4b89      	ldr	r3, [pc, #548]	@ (8001170 <KeyPad+0x5a0>)
 8000f4a:	781b      	ldrb	r3, [r3, #0]
 8000f4c:	4618      	mov	r0, r3
 8000f4e:	f7ff fbab 	bl	80006a8 <Read_Keypad>
    			 y = y + 1;
 8000f52:	4b83      	ldr	r3, [pc, #524]	@ (8001160 <KeyPad+0x590>)
 8000f54:	781b      	ldrb	r3, [r3, #0]
 8000f56:	3301      	adds	r3, #1
 8000f58:	b2da      	uxtb	r2, r3
 8000f5a:	4b81      	ldr	r3, [pc, #516]	@ (8001160 <KeyPad+0x590>)
 8000f5c:	701a      	strb	r2, [r3, #0]
    		 }
    	 }
    	 // NUMBER 6 BUTTON.
    	 if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0)
 8000f5e:	2120      	movs	r1, #32
 8000f60:	4880      	ldr	r0, [pc, #512]	@ (8001164 <KeyPad+0x594>)
 8000f62:	f000 feaf 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000f66:	4603      	mov	r3, r0
 8000f68:	2b00      	cmp	r3, #0
 8000f6a:	d124      	bne.n	8000fb6 <KeyPad+0x3e6>
    	 {
    		 HAL_Delay(130);
 8000f6c:	2082      	movs	r0, #130	@ 0x82
 8000f6e:	f000 fa1d 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0)
 8000f72:	2120      	movs	r1, #32
 8000f74:	487b      	ldr	r0, [pc, #492]	@ (8001164 <KeyPad+0x594>)
 8000f76:	f000 fea5 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000f7a:	4603      	mov	r3, r0
 8000f7c:	2b00      	cmp	r3, #0
 8000f7e:	d11a      	bne.n	8000fb6 <KeyPad+0x3e6>
    		 {
    			 LCD_SetCursor(x, y);
 8000f80:	4b79      	ldr	r3, [pc, #484]	@ (8001168 <KeyPad+0x598>)
 8000f82:	781b      	ldrb	r3, [r3, #0]
 8000f84:	4a76      	ldr	r2, [pc, #472]	@ (8001160 <KeyPad+0x590>)
 8000f86:	7812      	ldrb	r2, [r2, #0]
 8000f88:	4611      	mov	r1, r2
 8000f8a:	4618      	mov	r0, r3
 8000f8c:	f7ff f9a6 	bl	80002dc <LCD_SetCursor>
    			 LCD_CursorBlink();
 8000f90:	f7ff f9c0 	bl	8000314 <LCD_CursorBlink>
    			 LCD_Print("6");
 8000f94:	4877      	ldr	r0, [pc, #476]	@ (8001174 <KeyPad+0x5a4>)
 8000f96:	f7ff f982 	bl	800029e <LCD_Print>
    			 key = 6;
 8000f9a:	4b75      	ldr	r3, [pc, #468]	@ (8001170 <KeyPad+0x5a0>)
 8000f9c:	2206      	movs	r2, #6
 8000f9e:	701a      	strb	r2, [r3, #0]
    			 Read_Keypad(key);
 8000fa0:	4b73      	ldr	r3, [pc, #460]	@ (8001170 <KeyPad+0x5a0>)
 8000fa2:	781b      	ldrb	r3, [r3, #0]
 8000fa4:	4618      	mov	r0, r3
 8000fa6:	f7ff fb7f 	bl	80006a8 <Read_Keypad>
    			 y = y + 1;
 8000faa:	4b6d      	ldr	r3, [pc, #436]	@ (8001160 <KeyPad+0x590>)
 8000fac:	781b      	ldrb	r3, [r3, #0]
 8000fae:	3301      	adds	r3, #1
 8000fb0:	b2da      	uxtb	r2, r3
 8000fb2:	4b6b      	ldr	r3, [pc, #428]	@ (8001160 <KeyPad+0x590>)
 8000fb4:	701a      	strb	r2, [r3, #0]
    		 }
    	 }
    	 // NUMBER 3 BUTTON.
    	 if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0)
 8000fb6:	2140      	movs	r1, #64	@ 0x40
 8000fb8:	486a      	ldr	r0, [pc, #424]	@ (8001164 <KeyPad+0x594>)
 8000fba:	f000 fe83 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000fbe:	4603      	mov	r3, r0
 8000fc0:	2b00      	cmp	r3, #0
 8000fc2:	d124      	bne.n	800100e <KeyPad+0x43e>
    	 {
    		 HAL_Delay(130);
 8000fc4:	2082      	movs	r0, #130	@ 0x82
 8000fc6:	f000 f9f1 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0)
 8000fca:	2140      	movs	r1, #64	@ 0x40
 8000fcc:	4865      	ldr	r0, [pc, #404]	@ (8001164 <KeyPad+0x594>)
 8000fce:	f000 fe79 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8000fd2:	4603      	mov	r3, r0
 8000fd4:	2b00      	cmp	r3, #0
 8000fd6:	d11a      	bne.n	800100e <KeyPad+0x43e>
    		 {
    			 LCD_SetCursor(x, y);
 8000fd8:	4b63      	ldr	r3, [pc, #396]	@ (8001168 <KeyPad+0x598>)
 8000fda:	781b      	ldrb	r3, [r3, #0]
 8000fdc:	4a60      	ldr	r2, [pc, #384]	@ (8001160 <KeyPad+0x590>)
 8000fde:	7812      	ldrb	r2, [r2, #0]
 8000fe0:	4611      	mov	r1, r2
 8000fe2:	4618      	mov	r0, r3
 8000fe4:	f7ff f97a 	bl	80002dc <LCD_SetCursor>
    			 LCD_CursorBlink();
 8000fe8:	f7ff f994 	bl	8000314 <LCD_CursorBlink>
    			 LCD_Print("3");
 8000fec:	4862      	ldr	r0, [pc, #392]	@ (8001178 <KeyPad+0x5a8>)
 8000fee:	f7ff f956 	bl	800029e <LCD_Print>
    			 key = 3;
 8000ff2:	4b5f      	ldr	r3, [pc, #380]	@ (8001170 <KeyPad+0x5a0>)
 8000ff4:	2203      	movs	r2, #3
 8000ff6:	701a      	strb	r2, [r3, #0]
    			 Read_Keypad(key);
 8000ff8:	4b5d      	ldr	r3, [pc, #372]	@ (8001170 <KeyPad+0x5a0>)
 8000ffa:	781b      	ldrb	r3, [r3, #0]
 8000ffc:	4618      	mov	r0, r3
 8000ffe:	f7ff fb53 	bl	80006a8 <Read_Keypad>
    			 y = y + 1;
 8001002:	4b57      	ldr	r3, [pc, #348]	@ (8001160 <KeyPad+0x590>)
 8001004:	781b      	ldrb	r3, [r3, #0]
 8001006:	3301      	adds	r3, #1
 8001008:	b2da      	uxtb	r2, r3
 800100a:	4b55      	ldr	r3, [pc, #340]	@ (8001160 <KeyPad+0x590>)
 800100c:	701a      	strb	r2, [r3, #0]
    		 }
    	 }
    	 // SYMBOL "#" BUTTON.
    	 if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0)
 800100e:	2180      	movs	r1, #128	@ 0x80
 8001010:	4854      	ldr	r0, [pc, #336]	@ (8001164 <KeyPad+0x594>)
 8001012:	f000 fe57 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8001016:	4603      	mov	r3, r0
 8001018:	2b00      	cmp	r3, #0
 800101a:	d11c      	bne.n	8001056 <KeyPad+0x486>
    	 {
    		 HAL_Delay(130);
 800101c:	2082      	movs	r0, #130	@ 0x82
 800101e:	f000 f9c5 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0)
 8001022:	2180      	movs	r1, #128	@ 0x80
 8001024:	484f      	ldr	r0, [pc, #316]	@ (8001164 <KeyPad+0x594>)
 8001026:	f000 fe4d 	bl	8001cc4 <HAL_GPIO_ReadPin>
 800102a:	4603      	mov	r3, r0
 800102c:	2b00      	cmp	r3, #0
 800102e:	d112      	bne.n	8001056 <KeyPad+0x486>
    		 {
    			 LCD_SetCursor(x, y);
 8001030:	4b4d      	ldr	r3, [pc, #308]	@ (8001168 <KeyPad+0x598>)
 8001032:	781b      	ldrb	r3, [r3, #0]
 8001034:	4a4a      	ldr	r2, [pc, #296]	@ (8001160 <KeyPad+0x590>)
 8001036:	7812      	ldrb	r2, [r2, #0]
 8001038:	4611      	mov	r1, r2
 800103a:	4618      	mov	r0, r3
 800103c:	f7ff f94e 	bl	80002dc <LCD_SetCursor>
    			 LCD_CursorBlink();
 8001040:	f7ff f968 	bl	8000314 <LCD_CursorBlink>
    			 LCD_Print("#");
 8001044:	484d      	ldr	r0, [pc, #308]	@ (800117c <KeyPad+0x5ac>)
 8001046:	f7ff f92a 	bl	800029e <LCD_Print>
    			 y = y + 1;
 800104a:	4b45      	ldr	r3, [pc, #276]	@ (8001160 <KeyPad+0x590>)
 800104c:	781b      	ldrb	r3, [r3, #0]
 800104e:	3301      	adds	r3, #1
 8001050:	b2da      	uxtb	r2, r3
 8001052:	4b43      	ldr	r3, [pc, #268]	@ (8001160 <KeyPad+0x590>)
 8001054:	701a      	strb	r2, [r3, #0]
    		 }
    	 }
    	 //-------------------------------------------------------------
    	 // SCAN COLUMN 4, IT'S FUNCTION BUTTON.
    	 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 0);
 8001056:	2200      	movs	r2, #0
 8001058:	2108      	movs	r1, #8
 800105a:	4842      	ldr	r0, [pc, #264]	@ (8001164 <KeyPad+0x594>)
 800105c:	f000 fe49 	bl	8001cf2 <HAL_GPIO_WritePin>
    	 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_8	, 1);
 8001060:	2201      	movs	r2, #1
 8001062:	f240 1103 	movw	r1, #259	@ 0x103
 8001066:	483f      	ldr	r0, [pc, #252]	@ (8001164 <KeyPad+0x594>)
 8001068:	f000 fe43 	bl	8001cf2 <HAL_GPIO_WritePin>
    	 // ENTER FUNCTION BUTTON.
    	 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0)
 800106c:	2110      	movs	r1, #16
 800106e:	483d      	ldr	r0, [pc, #244]	@ (8001164 <KeyPad+0x594>)
 8001070:	f000 fe28 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8001074:	4603      	mov	r3, r0
 8001076:	2b00      	cmp	r3, #0
 8001078:	d11e      	bne.n	80010b8 <KeyPad+0x4e8>
    	 {
    		 HAL_Delay(130);
 800107a:	2082      	movs	r0, #130	@ 0x82
 800107c:	f000 f996 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0)
 8001080:	2110      	movs	r1, #16
 8001082:	4838      	ldr	r0, [pc, #224]	@ (8001164 <KeyPad+0x594>)
 8001084:	f000 fe1e 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8001088:	4603      	mov	r3, r0
 800108a:	2b00      	cmp	r3, #0
 800108c:	d114      	bne.n	80010b8 <KeyPad+0x4e8>
    		 {
    			 if(Check_Mode == 0)
 800108e:	4b3c      	ldr	r3, [pc, #240]	@ (8001180 <KeyPad+0x5b0>)
 8001090:	781b      	ldrb	r3, [r3, #0]
 8001092:	2b00      	cmp	r3, #0
 8001094:	d101      	bne.n	800109a <KeyPad+0x4ca>
    			 {
    				 Xu_Ly_Mat_Khau();
 8001096:	f7ff fc93 	bl	80009c0 <Xu_Ly_Mat_Khau>
    			 }
    			 if(Check_Mode == 1)
 800109a:	4b39      	ldr	r3, [pc, #228]	@ (8001180 <KeyPad+0x5b0>)
 800109c:	781b      	ldrb	r3, [r3, #0]
 800109e:	2b01      	cmp	r3, #1
 80010a0:	d104      	bne.n	80010ac <KeyPad+0x4dc>
    			 {
    				 Check_Old_Passcode();
 80010a2:	f7ff fbc3 	bl	800082c <Check_Old_Passcode>
    				 flag_new_pass = 2;
 80010a6:	4b37      	ldr	r3, [pc, #220]	@ (8001184 <KeyPad+0x5b4>)
 80010a8:	2202      	movs	r2, #2
 80010aa:	701a      	strb	r2, [r3, #0]
    			 }
    			 if(flag_new_pass == 2)
 80010ac:	4b35      	ldr	r3, [pc, #212]	@ (8001184 <KeyPad+0x5b4>)
 80010ae:	781b      	ldrb	r3, [r3, #0]
 80010b0:	2b02      	cmp	r3, #2
 80010b2:	d101      	bne.n	80010b8 <KeyPad+0x4e8>
    			 {
    				 Successful_change_screen();
 80010b4:	f7ff fc68 	bl	8000988 <Successful_change_screen>
    			 }
    		 }
    	 }
    	 // DELETE FUNCTION BUTTON
    	 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0)
 80010b8:	2120      	movs	r1, #32
 80010ba:	482a      	ldr	r0, [pc, #168]	@ (8001164 <KeyPad+0x594>)
 80010bc:	f000 fe02 	bl	8001cc4 <HAL_GPIO_ReadPin>
 80010c0:	4603      	mov	r3, r0
 80010c2:	2b00      	cmp	r3, #0
 80010c4:	d122      	bne.n	800110c <KeyPad+0x53c>
    	 {
    		 HAL_Delay(130);
 80010c6:	2082      	movs	r0, #130	@ 0x82
 80010c8:	f000 f970 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0)
 80010cc:	2120      	movs	r1, #32
 80010ce:	4825      	ldr	r0, [pc, #148]	@ (8001164 <KeyPad+0x594>)
 80010d0:	f000 fdf8 	bl	8001cc4 <HAL_GPIO_ReadPin>
 80010d4:	4603      	mov	r3, r0
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	d118      	bne.n	800110c <KeyPad+0x53c>
    		 {
    			 y = y - 1;
 80010da:	4b21      	ldr	r3, [pc, #132]	@ (8001160 <KeyPad+0x590>)
 80010dc:	781b      	ldrb	r3, [r3, #0]
 80010de:	3b01      	subs	r3, #1
 80010e0:	b2da      	uxtb	r2, r3
 80010e2:	4b1f      	ldr	r3, [pc, #124]	@ (8001160 <KeyPad+0x590>)
 80010e4:	701a      	strb	r2, [r3, #0]
    			 LCD_CursorBlink();
 80010e6:	f7ff f915 	bl	8000314 <LCD_CursorBlink>
    			 LCD_Print(" ");
 80010ea:	4827      	ldr	r0, [pc, #156]	@ (8001188 <KeyPad+0x5b8>)
 80010ec:	f7ff f8d7 	bl	800029e <LCD_Print>
    			 LCD_SetCursor(x, y);
 80010f0:	4b1d      	ldr	r3, [pc, #116]	@ (8001168 <KeyPad+0x598>)
 80010f2:	781b      	ldrb	r3, [r3, #0]
 80010f4:	4a1a      	ldr	r2, [pc, #104]	@ (8001160 <KeyPad+0x590>)
 80010f6:	7812      	ldrb	r2, [r2, #0]
 80010f8:	4611      	mov	r1, r2
 80010fa:	4618      	mov	r0, r3
 80010fc:	f7ff f8ee 	bl	80002dc <LCD_SetCursor>
    			 count--;
 8001100:	4b22      	ldr	r3, [pc, #136]	@ (800118c <KeyPad+0x5bc>)
 8001102:	781b      	ldrb	r3, [r3, #0]
 8001104:	3b01      	subs	r3, #1
 8001106:	b2da      	uxtb	r2, r3
 8001108:	4b20      	ldr	r3, [pc, #128]	@ (800118c <KeyPad+0x5bc>)
 800110a:	701a      	strb	r2, [r3, #0]
    		 }
    	 }
    	 //CHANGE FUNCTION BUTTON.
    	 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0)
 800110c:	2140      	movs	r1, #64	@ 0x40
 800110e:	4815      	ldr	r0, [pc, #84]	@ (8001164 <KeyPad+0x594>)
 8001110:	f000 fdd8 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8001114:	4603      	mov	r3, r0
 8001116:	2b00      	cmp	r3, #0
 8001118:	d10b      	bne.n	8001132 <KeyPad+0x562>
    	 {
    		 HAL_Delay(130);
 800111a:	2082      	movs	r0, #130	@ 0x82
 800111c:	f000 f946 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0)
 8001120:	2140      	movs	r1, #64	@ 0x40
 8001122:	4810      	ldr	r0, [pc, #64]	@ (8001164 <KeyPad+0x594>)
 8001124:	f000 fdce 	bl	8001cc4 <HAL_GPIO_ReadPin>
 8001128:	4603      	mov	r3, r0
 800112a:	2b00      	cmp	r3, #0
 800112c:	d101      	bne.n	8001132 <KeyPad+0x562>
    		 {
    			 Change_Passcode();
 800112e:	f7ff fb6d 	bl	800080c <Change_Passcode>
    		 }
    	 }
    	 // RETURN DEFAULT SCREEN WHEN BEGIN.
    	 if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0)
 8001132:	2180      	movs	r1, #128	@ 0x80
 8001134:	480b      	ldr	r0, [pc, #44]	@ (8001164 <KeyPad+0x594>)
 8001136:	f000 fdc5 	bl	8001cc4 <HAL_GPIO_ReadPin>
 800113a:	4603      	mov	r3, r0
 800113c:	2b00      	cmp	r3, #0
 800113e:	d10b      	bne.n	8001158 <KeyPad+0x588>
    	 {
    		 HAL_Delay(130);
 8001140:	2082      	movs	r0, #130	@ 0x82
 8001142:	f000 f933 	bl	80013ac <HAL_Delay>
    		 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0)
 8001146:	2180      	movs	r1, #128	@ 0x80
 8001148:	4806      	ldr	r0, [pc, #24]	@ (8001164 <KeyPad+0x594>)
 800114a:	f000 fdbb 	bl	8001cc4 <HAL_GPIO_ReadPin>
 800114e:	4603      	mov	r3, r0
 8001150:	2b00      	cmp	r3, #0
 8001152:	d101      	bne.n	8001158 <KeyPad+0x588>
    		 {
    			 Reset_LCD();
 8001154:	f7ff fa6a 	bl	800062c <Reset_LCD>
    		 }
    	 }
    	 return key;
 8001158:	4b05      	ldr	r3, [pc, #20]	@ (8001170 <KeyPad+0x5a0>)
 800115a:	781b      	ldrb	r3, [r3, #0]
     }
 800115c:	4618      	mov	r0, r3
 800115e:	bd80      	pop	{r7, pc}
 8001160:	20000007 	.word	0x20000007
 8001164:	40010c00 	.word	0x40010c00
 8001168:	20000006 	.word	0x20000006
 800116c:	08002ccc 	.word	0x08002ccc
 8001170:	20000043 	.word	0x20000043
 8001174:	08002cd0 	.word	0x08002cd0
 8001178:	08002cd4 	.word	0x08002cd4
 800117c:	08002cd8 	.word	0x08002cd8
 8001180:	20000046 	.word	0x20000046
 8001184:	20000047 	.word	0x20000047
 8001188:	08002cdc 	.word	0x08002cdc
 800118c:	20000042 	.word	0x20000042

08001190 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001190:	b480      	push	{r7}
 8001192:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001194:	b672      	cpsid	i
}
 8001196:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001198:	bf00      	nop
 800119a:	e7fd      	b.n	8001198 <Error_Handler+0x8>

0800119c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800119c:	b480      	push	{r7}
 800119e:	b085      	sub	sp, #20
 80011a0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 80011a2:	4b15      	ldr	r3, [pc, #84]	@ (80011f8 <HAL_MspInit+0x5c>)
 80011a4:	699b      	ldr	r3, [r3, #24]
 80011a6:	4a14      	ldr	r2, [pc, #80]	@ (80011f8 <HAL_MspInit+0x5c>)
 80011a8:	f043 0301 	orr.w	r3, r3, #1
 80011ac:	6193      	str	r3, [r2, #24]
 80011ae:	4b12      	ldr	r3, [pc, #72]	@ (80011f8 <HAL_MspInit+0x5c>)
 80011b0:	699b      	ldr	r3, [r3, #24]
 80011b2:	f003 0301 	and.w	r3, r3, #1
 80011b6:	60bb      	str	r3, [r7, #8]
 80011b8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 80011ba:	4b0f      	ldr	r3, [pc, #60]	@ (80011f8 <HAL_MspInit+0x5c>)
 80011bc:	69db      	ldr	r3, [r3, #28]
 80011be:	4a0e      	ldr	r2, [pc, #56]	@ (80011f8 <HAL_MspInit+0x5c>)
 80011c0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80011c4:	61d3      	str	r3, [r2, #28]
 80011c6:	4b0c      	ldr	r3, [pc, #48]	@ (80011f8 <HAL_MspInit+0x5c>)
 80011c8:	69db      	ldr	r3, [r3, #28]
 80011ca:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80011ce:	607b      	str	r3, [r7, #4]
 80011d0:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 80011d2:	4b0a      	ldr	r3, [pc, #40]	@ (80011fc <HAL_MspInit+0x60>)
 80011d4:	685b      	ldr	r3, [r3, #4]
 80011d6:	60fb      	str	r3, [r7, #12]
 80011d8:	68fb      	ldr	r3, [r7, #12]
 80011da:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 80011de:	60fb      	str	r3, [r7, #12]
 80011e0:	68fb      	ldr	r3, [r7, #12]
 80011e2:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80011e6:	60fb      	str	r3, [r7, #12]
 80011e8:	4a04      	ldr	r2, [pc, #16]	@ (80011fc <HAL_MspInit+0x60>)
 80011ea:	68fb      	ldr	r3, [r7, #12]
 80011ec:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80011ee:	bf00      	nop
 80011f0:	3714      	adds	r7, #20
 80011f2:	46bd      	mov	sp, r7
 80011f4:	bc80      	pop	{r7}
 80011f6:	4770      	bx	lr
 80011f8:	40021000 	.word	0x40021000
 80011fc:	40010000 	.word	0x40010000

08001200 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001200:	b480      	push	{r7}
 8001202:	b085      	sub	sp, #20
 8001204:	af00      	add	r7, sp, #0
 8001206:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8001208:	687b      	ldr	r3, [r7, #4]
 800120a:	681b      	ldr	r3, [r3, #0]
 800120c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001210:	d10b      	bne.n	800122a <HAL_TIM_Base_MspInit+0x2a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001212:	4b08      	ldr	r3, [pc, #32]	@ (8001234 <HAL_TIM_Base_MspInit+0x34>)
 8001214:	69db      	ldr	r3, [r3, #28]
 8001216:	4a07      	ldr	r2, [pc, #28]	@ (8001234 <HAL_TIM_Base_MspInit+0x34>)
 8001218:	f043 0301 	orr.w	r3, r3, #1
 800121c:	61d3      	str	r3, [r2, #28]
 800121e:	4b05      	ldr	r3, [pc, #20]	@ (8001234 <HAL_TIM_Base_MspInit+0x34>)
 8001220:	69db      	ldr	r3, [r3, #28]
 8001222:	f003 0301 	and.w	r3, r3, #1
 8001226:	60fb      	str	r3, [r7, #12]
 8001228:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END TIM2_MspInit 1 */

  }

}
 800122a:	bf00      	nop
 800122c:	3714      	adds	r7, #20
 800122e:	46bd      	mov	sp, r7
 8001230:	bc80      	pop	{r7}
 8001232:	4770      	bx	lr
 8001234:	40021000 	.word	0x40021000

08001238 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001238:	b480      	push	{r7}
 800123a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800123c:	bf00      	nop
 800123e:	e7fd      	b.n	800123c <NMI_Handler+0x4>

08001240 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001240:	b480      	push	{r7}
 8001242:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001244:	bf00      	nop
 8001246:	e7fd      	b.n	8001244 <HardFault_Handler+0x4>

08001248 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001248:	b480      	push	{r7}
 800124a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800124c:	bf00      	nop
 800124e:	e7fd      	b.n	800124c <MemManage_Handler+0x4>

08001250 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001250:	b480      	push	{r7}
 8001252:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001254:	bf00      	nop
 8001256:	e7fd      	b.n	8001254 <BusFault_Handler+0x4>

08001258 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001258:	b480      	push	{r7}
 800125a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800125c:	bf00      	nop
 800125e:	e7fd      	b.n	800125c <UsageFault_Handler+0x4>

08001260 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001260:	b480      	push	{r7}
 8001262:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001264:	bf00      	nop
 8001266:	46bd      	mov	sp, r7
 8001268:	bc80      	pop	{r7}
 800126a:	4770      	bx	lr

0800126c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800126c:	b480      	push	{r7}
 800126e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001270:	bf00      	nop
 8001272:	46bd      	mov	sp, r7
 8001274:	bc80      	pop	{r7}
 8001276:	4770      	bx	lr

08001278 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001278:	b480      	push	{r7}
 800127a:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800127c:	bf00      	nop
 800127e:	46bd      	mov	sp, r7
 8001280:	bc80      	pop	{r7}
 8001282:	4770      	bx	lr

08001284 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001284:	b580      	push	{r7, lr}
 8001286:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001288:	f000 f874 	bl	8001374 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800128c:	bf00      	nop
 800128e:	bd80      	pop	{r7, pc}

08001290 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001290:	b480      	push	{r7}
 8001292:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001294:	bf00      	nop
 8001296:	46bd      	mov	sp, r7
 8001298:	bc80      	pop	{r7}
 800129a:	4770      	bx	lr

0800129c <Reset_Handler>:
 800129c:	f7ff fff8 	bl	8001290 <SystemInit>
 80012a0:	480b      	ldr	r0, [pc, #44]	@ (80012d0 <LoopFillZerobss+0xe>)
 80012a2:	490c      	ldr	r1, [pc, #48]	@ (80012d4 <LoopFillZerobss+0x12>)
 80012a4:	4a0c      	ldr	r2, [pc, #48]	@ (80012d8 <LoopFillZerobss+0x16>)
 80012a6:	2300      	movs	r3, #0
 80012a8:	e002      	b.n	80012b0 <LoopCopyDataInit>

080012aa <CopyDataInit>:
 80012aa:	58d4      	ldr	r4, [r2, r3]
 80012ac:	50c4      	str	r4, [r0, r3]
 80012ae:	3304      	adds	r3, #4

080012b0 <LoopCopyDataInit>:
 80012b0:	18c4      	adds	r4, r0, r3
 80012b2:	428c      	cmp	r4, r1
 80012b4:	d3f9      	bcc.n	80012aa <CopyDataInit>
 80012b6:	4a09      	ldr	r2, [pc, #36]	@ (80012dc <LoopFillZerobss+0x1a>)
 80012b8:	4c09      	ldr	r4, [pc, #36]	@ (80012e0 <LoopFillZerobss+0x1e>)
 80012ba:	2300      	movs	r3, #0
 80012bc:	e001      	b.n	80012c2 <LoopFillZerobss>

080012be <FillZerobss>:
 80012be:	6013      	str	r3, [r2, #0]
 80012c0:	3204      	adds	r2, #4

080012c2 <LoopFillZerobss>:
 80012c2:	42a2      	cmp	r2, r4
 80012c4:	d3fb      	bcc.n	80012be <FillZerobss>
 80012c6:	f001 fc5f 	bl	8002b88 <__libc_init_array>
 80012ca:	f7ff f871 	bl	80003b0 <main>
 80012ce:	4770      	bx	lr
 80012d0:	20000000 	.word	0x20000000
 80012d4:	20000018 	.word	0x20000018
 80012d8:	08002d0c 	.word	0x08002d0c
 80012dc:	20000018 	.word	0x20000018
 80012e0:	200000b8 	.word	0x200000b8

080012e4 <ADC1_2_IRQHandler>:
 80012e4:	e7fe      	b.n	80012e4 <ADC1_2_IRQHandler>
	...

080012e8 <HAL_Init>:
 80012e8:	b580      	push	{r7, lr}
 80012ea:	af00      	add	r7, sp, #0
 80012ec:	4b08      	ldr	r3, [pc, #32]	@ (8001310 <HAL_Init+0x28>)
 80012ee:	681b      	ldr	r3, [r3, #0]
 80012f0:	4a07      	ldr	r2, [pc, #28]	@ (8001310 <HAL_Init+0x28>)
 80012f2:	f043 0310 	orr.w	r3, r3, #16
 80012f6:	6013      	str	r3, [r2, #0]
 80012f8:	2003      	movs	r0, #3
 80012fa:	f000 f92b 	bl	8001554 <HAL_NVIC_SetPriorityGrouping>
 80012fe:	200f      	movs	r0, #15
 8001300:	f000 f808 	bl	8001314 <HAL_InitTick>
 8001304:	f7ff ff4a 	bl	800119c <HAL_MspInit>
 8001308:	2300      	movs	r3, #0
 800130a:	4618      	mov	r0, r3
 800130c:	bd80      	pop	{r7, pc}
 800130e:	bf00      	nop
 8001310:	40022000 	.word	0x40022000

08001314 <HAL_InitTick>:
 8001314:	b580      	push	{r7, lr}
 8001316:	b082      	sub	sp, #8
 8001318:	af00      	add	r7, sp, #0
 800131a:	6078      	str	r0, [r7, #4]
 800131c:	4b12      	ldr	r3, [pc, #72]	@ (8001368 <HAL_InitTick+0x54>)
 800131e:	681a      	ldr	r2, [r3, #0]
 8001320:	4b12      	ldr	r3, [pc, #72]	@ (800136c <HAL_InitTick+0x58>)
 8001322:	781b      	ldrb	r3, [r3, #0]
 8001324:	4619      	mov	r1, r3
 8001326:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800132a:	fbb3 f3f1 	udiv	r3, r3, r1
 800132e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001332:	4618      	mov	r0, r3
 8001334:	f000 f935 	bl	80015a2 <HAL_SYSTICK_Config>
 8001338:	4603      	mov	r3, r0
 800133a:	2b00      	cmp	r3, #0
 800133c:	d001      	beq.n	8001342 <HAL_InitTick+0x2e>
 800133e:	2301      	movs	r3, #1
 8001340:	e00e      	b.n	8001360 <HAL_InitTick+0x4c>
 8001342:	687b      	ldr	r3, [r7, #4]
 8001344:	2b0f      	cmp	r3, #15
 8001346:	d80a      	bhi.n	800135e <HAL_InitTick+0x4a>
 8001348:	2200      	movs	r2, #0
 800134a:	6879      	ldr	r1, [r7, #4]
 800134c:	f04f 30ff 	mov.w	r0, #4294967295
 8001350:	f000 f90b 	bl	800156a <HAL_NVIC_SetPriority>
 8001354:	4a06      	ldr	r2, [pc, #24]	@ (8001370 <HAL_InitTick+0x5c>)
 8001356:	687b      	ldr	r3, [r7, #4]
 8001358:	6013      	str	r3, [r2, #0]
 800135a:	2300      	movs	r3, #0
 800135c:	e000      	b.n	8001360 <HAL_InitTick+0x4c>
 800135e:	2301      	movs	r3, #1
 8001360:	4618      	mov	r0, r3
 8001362:	3708      	adds	r7, #8
 8001364:	46bd      	mov	sp, r7
 8001366:	bd80      	pop	{r7, pc}
 8001368:	2000000c 	.word	0x2000000c
 800136c:	20000014 	.word	0x20000014
 8001370:	20000010 	.word	0x20000010

08001374 <HAL_IncTick>:
 8001374:	b480      	push	{r7}
 8001376:	af00      	add	r7, sp, #0
 8001378:	4b05      	ldr	r3, [pc, #20]	@ (8001390 <HAL_IncTick+0x1c>)
 800137a:	781b      	ldrb	r3, [r3, #0]
 800137c:	461a      	mov	r2, r3
 800137e:	4b05      	ldr	r3, [pc, #20]	@ (8001394 <HAL_IncTick+0x20>)
 8001380:	681b      	ldr	r3, [r3, #0]
 8001382:	4413      	add	r3, r2
 8001384:	4a03      	ldr	r2, [pc, #12]	@ (8001394 <HAL_IncTick+0x20>)
 8001386:	6013      	str	r3, [r2, #0]
 8001388:	bf00      	nop
 800138a:	46bd      	mov	sp, r7
 800138c:	bc80      	pop	{r7}
 800138e:	4770      	bx	lr
 8001390:	20000014 	.word	0x20000014
 8001394:	20000094 	.word	0x20000094

08001398 <HAL_GetTick>:
 8001398:	b480      	push	{r7}
 800139a:	af00      	add	r7, sp, #0
 800139c:	4b02      	ldr	r3, [pc, #8]	@ (80013a8 <HAL_GetTick+0x10>)
 800139e:	681b      	ldr	r3, [r3, #0]
 80013a0:	4618      	mov	r0, r3
 80013a2:	46bd      	mov	sp, r7
 80013a4:	bc80      	pop	{r7}
 80013a6:	4770      	bx	lr
 80013a8:	20000094 	.word	0x20000094

080013ac <HAL_Delay>:
 80013ac:	b580      	push	{r7, lr}
 80013ae:	b084      	sub	sp, #16
 80013b0:	af00      	add	r7, sp, #0
 80013b2:	6078      	str	r0, [r7, #4]
 80013b4:	f7ff fff0 	bl	8001398 <HAL_GetTick>
 80013b8:	60b8      	str	r0, [r7, #8]
 80013ba:	687b      	ldr	r3, [r7, #4]
 80013bc:	60fb      	str	r3, [r7, #12]
 80013be:	68fb      	ldr	r3, [r7, #12]
 80013c0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80013c4:	d005      	beq.n	80013d2 <HAL_Delay+0x26>
 80013c6:	4b0a      	ldr	r3, [pc, #40]	@ (80013f0 <HAL_Delay+0x44>)
 80013c8:	781b      	ldrb	r3, [r3, #0]
 80013ca:	461a      	mov	r2, r3
 80013cc:	68fb      	ldr	r3, [r7, #12]
 80013ce:	4413      	add	r3, r2
 80013d0:	60fb      	str	r3, [r7, #12]
 80013d2:	bf00      	nop
 80013d4:	f7ff ffe0 	bl	8001398 <HAL_GetTick>
 80013d8:	4602      	mov	r2, r0
 80013da:	68bb      	ldr	r3, [r7, #8]
 80013dc:	1ad3      	subs	r3, r2, r3
 80013de:	68fa      	ldr	r2, [r7, #12]
 80013e0:	429a      	cmp	r2, r3
 80013e2:	d8f7      	bhi.n	80013d4 <HAL_Delay+0x28>
 80013e4:	bf00      	nop
 80013e6:	bf00      	nop
 80013e8:	3710      	adds	r7, #16
 80013ea:	46bd      	mov	sp, r7
 80013ec:	bd80      	pop	{r7, pc}
 80013ee:	bf00      	nop
 80013f0:	20000014 	.word	0x20000014

080013f4 <__NVIC_SetPriorityGrouping>:
 80013f4:	b480      	push	{r7}
 80013f6:	b085      	sub	sp, #20
 80013f8:	af00      	add	r7, sp, #0
 80013fa:	6078      	str	r0, [r7, #4]
 80013fc:	687b      	ldr	r3, [r7, #4]
 80013fe:	f003 0307 	and.w	r3, r3, #7
 8001402:	60fb      	str	r3, [r7, #12]
 8001404:	4b0c      	ldr	r3, [pc, #48]	@ (8001438 <__NVIC_SetPriorityGrouping+0x44>)
 8001406:	68db      	ldr	r3, [r3, #12]
 8001408:	60bb      	str	r3, [r7, #8]
 800140a:	68ba      	ldr	r2, [r7, #8]
 800140c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001410:	4013      	ands	r3, r2
 8001412:	60bb      	str	r3, [r7, #8]
 8001414:	68fb      	ldr	r3, [r7, #12]
 8001416:	021a      	lsls	r2, r3, #8
 8001418:	68bb      	ldr	r3, [r7, #8]
 800141a:	4313      	orrs	r3, r2
 800141c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001420:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001424:	60bb      	str	r3, [r7, #8]
 8001426:	4a04      	ldr	r2, [pc, #16]	@ (8001438 <__NVIC_SetPriorityGrouping+0x44>)
 8001428:	68bb      	ldr	r3, [r7, #8]
 800142a:	60d3      	str	r3, [r2, #12]
 800142c:	bf00      	nop
 800142e:	3714      	adds	r7, #20
 8001430:	46bd      	mov	sp, r7
 8001432:	bc80      	pop	{r7}
 8001434:	4770      	bx	lr
 8001436:	bf00      	nop
 8001438:	e000ed00 	.word	0xe000ed00

0800143c <__NVIC_GetPriorityGrouping>:
 800143c:	b480      	push	{r7}
 800143e:	af00      	add	r7, sp, #0
 8001440:	4b04      	ldr	r3, [pc, #16]	@ (8001454 <__NVIC_GetPriorityGrouping+0x18>)
 8001442:	68db      	ldr	r3, [r3, #12]
 8001444:	0a1b      	lsrs	r3, r3, #8
 8001446:	f003 0307 	and.w	r3, r3, #7
 800144a:	4618      	mov	r0, r3
 800144c:	46bd      	mov	sp, r7
 800144e:	bc80      	pop	{r7}
 8001450:	4770      	bx	lr
 8001452:	bf00      	nop
 8001454:	e000ed00 	.word	0xe000ed00

08001458 <__NVIC_SetPriority>:
 8001458:	b480      	push	{r7}
 800145a:	b083      	sub	sp, #12
 800145c:	af00      	add	r7, sp, #0
 800145e:	4603      	mov	r3, r0
 8001460:	6039      	str	r1, [r7, #0]
 8001462:	71fb      	strb	r3, [r7, #7]
 8001464:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001468:	2b00      	cmp	r3, #0
 800146a:	db0a      	blt.n	8001482 <__NVIC_SetPriority+0x2a>
 800146c:	683b      	ldr	r3, [r7, #0]
 800146e:	b2da      	uxtb	r2, r3
 8001470:	490c      	ldr	r1, [pc, #48]	@ (80014a4 <__NVIC_SetPriority+0x4c>)
 8001472:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001476:	0112      	lsls	r2, r2, #4
 8001478:	b2d2      	uxtb	r2, r2
 800147a:	440b      	add	r3, r1
 800147c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001480:	e00a      	b.n	8001498 <__NVIC_SetPriority+0x40>
 8001482:	683b      	ldr	r3, [r7, #0]
 8001484:	b2da      	uxtb	r2, r3
 8001486:	4908      	ldr	r1, [pc, #32]	@ (80014a8 <__NVIC_SetPriority+0x50>)
 8001488:	79fb      	ldrb	r3, [r7, #7]
 800148a:	f003 030f 	and.w	r3, r3, #15
 800148e:	3b04      	subs	r3, #4
 8001490:	0112      	lsls	r2, r2, #4
 8001492:	b2d2      	uxtb	r2, r2
 8001494:	440b      	add	r3, r1
 8001496:	761a      	strb	r2, [r3, #24]
 8001498:	bf00      	nop
 800149a:	370c      	adds	r7, #12
 800149c:	46bd      	mov	sp, r7
 800149e:	bc80      	pop	{r7}
 80014a0:	4770      	bx	lr
 80014a2:	bf00      	nop
 80014a4:	e000e100 	.word	0xe000e100
 80014a8:	e000ed00 	.word	0xe000ed00

080014ac <NVIC_EncodePriority>:
 80014ac:	b480      	push	{r7}
 80014ae:	b089      	sub	sp, #36	@ 0x24
 80014b0:	af00      	add	r7, sp, #0
 80014b2:	60f8      	str	r0, [r7, #12]
 80014b4:	60b9      	str	r1, [r7, #8]
 80014b6:	607a      	str	r2, [r7, #4]
 80014b8:	68fb      	ldr	r3, [r7, #12]
 80014ba:	f003 0307 	and.w	r3, r3, #7
 80014be:	61fb      	str	r3, [r7, #28]
 80014c0:	69fb      	ldr	r3, [r7, #28]
 80014c2:	f1c3 0307 	rsb	r3, r3, #7
 80014c6:	2b04      	cmp	r3, #4
 80014c8:	bf28      	it	cs
 80014ca:	2304      	movcs	r3, #4
 80014cc:	61bb      	str	r3, [r7, #24]
 80014ce:	69fb      	ldr	r3, [r7, #28]
 80014d0:	3304      	adds	r3, #4
 80014d2:	2b06      	cmp	r3, #6
 80014d4:	d902      	bls.n	80014dc <NVIC_EncodePriority+0x30>
 80014d6:	69fb      	ldr	r3, [r7, #28]
 80014d8:	3b03      	subs	r3, #3
 80014da:	e000      	b.n	80014de <NVIC_EncodePriority+0x32>
 80014dc:	2300      	movs	r3, #0
 80014de:	617b      	str	r3, [r7, #20]
 80014e0:	f04f 32ff 	mov.w	r2, #4294967295
 80014e4:	69bb      	ldr	r3, [r7, #24]
 80014e6:	fa02 f303 	lsl.w	r3, r2, r3
 80014ea:	43da      	mvns	r2, r3
 80014ec:	68bb      	ldr	r3, [r7, #8]
 80014ee:	401a      	ands	r2, r3
 80014f0:	697b      	ldr	r3, [r7, #20]
 80014f2:	409a      	lsls	r2, r3
 80014f4:	f04f 31ff 	mov.w	r1, #4294967295
 80014f8:	697b      	ldr	r3, [r7, #20]
 80014fa:	fa01 f303 	lsl.w	r3, r1, r3
 80014fe:	43d9      	mvns	r1, r3
 8001500:	687b      	ldr	r3, [r7, #4]
 8001502:	400b      	ands	r3, r1
 8001504:	4313      	orrs	r3, r2
 8001506:	4618      	mov	r0, r3
 8001508:	3724      	adds	r7, #36	@ 0x24
 800150a:	46bd      	mov	sp, r7
 800150c:	bc80      	pop	{r7}
 800150e:	4770      	bx	lr

08001510 <SysTick_Config>:
 8001510:	b580      	push	{r7, lr}
 8001512:	b082      	sub	sp, #8
 8001514:	af00      	add	r7, sp, #0
 8001516:	6078      	str	r0, [r7, #4]
 8001518:	687b      	ldr	r3, [r7, #4]
 800151a:	3b01      	subs	r3, #1
 800151c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001520:	d301      	bcc.n	8001526 <SysTick_Config+0x16>
 8001522:	2301      	movs	r3, #1
 8001524:	e00f      	b.n	8001546 <SysTick_Config+0x36>
 8001526:	4a0a      	ldr	r2, [pc, #40]	@ (8001550 <SysTick_Config+0x40>)
 8001528:	687b      	ldr	r3, [r7, #4]
 800152a:	3b01      	subs	r3, #1
 800152c:	6053      	str	r3, [r2, #4]
 800152e:	210f      	movs	r1, #15
 8001530:	f04f 30ff 	mov.w	r0, #4294967295
 8001534:	f7ff ff90 	bl	8001458 <__NVIC_SetPriority>
 8001538:	4b05      	ldr	r3, [pc, #20]	@ (8001550 <SysTick_Config+0x40>)
 800153a:	2200      	movs	r2, #0
 800153c:	609a      	str	r2, [r3, #8]
 800153e:	4b04      	ldr	r3, [pc, #16]	@ (8001550 <SysTick_Config+0x40>)
 8001540:	2207      	movs	r2, #7
 8001542:	601a      	str	r2, [r3, #0]
 8001544:	2300      	movs	r3, #0
 8001546:	4618      	mov	r0, r3
 8001548:	3708      	adds	r7, #8
 800154a:	46bd      	mov	sp, r7
 800154c:	bd80      	pop	{r7, pc}
 800154e:	bf00      	nop
 8001550:	e000e010 	.word	0xe000e010

08001554 <HAL_NVIC_SetPriorityGrouping>:
 8001554:	b580      	push	{r7, lr}
 8001556:	b082      	sub	sp, #8
 8001558:	af00      	add	r7, sp, #0
 800155a:	6078      	str	r0, [r7, #4]
 800155c:	6878      	ldr	r0, [r7, #4]
 800155e:	f7ff ff49 	bl	80013f4 <__NVIC_SetPriorityGrouping>
 8001562:	bf00      	nop
 8001564:	3708      	adds	r7, #8
 8001566:	46bd      	mov	sp, r7
 8001568:	bd80      	pop	{r7, pc}

0800156a <HAL_NVIC_SetPriority>:
 800156a:	b580      	push	{r7, lr}
 800156c:	b086      	sub	sp, #24
 800156e:	af00      	add	r7, sp, #0
 8001570:	4603      	mov	r3, r0
 8001572:	60b9      	str	r1, [r7, #8]
 8001574:	607a      	str	r2, [r7, #4]
 8001576:	73fb      	strb	r3, [r7, #15]
 8001578:	2300      	movs	r3, #0
 800157a:	617b      	str	r3, [r7, #20]
 800157c:	f7ff ff5e 	bl	800143c <__NVIC_GetPriorityGrouping>
 8001580:	6178      	str	r0, [r7, #20]
 8001582:	687a      	ldr	r2, [r7, #4]
 8001584:	68b9      	ldr	r1, [r7, #8]
 8001586:	6978      	ldr	r0, [r7, #20]
 8001588:	f7ff ff90 	bl	80014ac <NVIC_EncodePriority>
 800158c:	4602      	mov	r2, r0
 800158e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001592:	4611      	mov	r1, r2
 8001594:	4618      	mov	r0, r3
 8001596:	f7ff ff5f 	bl	8001458 <__NVIC_SetPriority>
 800159a:	bf00      	nop
 800159c:	3718      	adds	r7, #24
 800159e:	46bd      	mov	sp, r7
 80015a0:	bd80      	pop	{r7, pc}

080015a2 <HAL_SYSTICK_Config>:
 80015a2:	b580      	push	{r7, lr}
 80015a4:	b082      	sub	sp, #8
 80015a6:	af00      	add	r7, sp, #0
 80015a8:	6078      	str	r0, [r7, #4]
 80015aa:	6878      	ldr	r0, [r7, #4]
 80015ac:	f7ff ffb0 	bl	8001510 <SysTick_Config>
 80015b0:	4603      	mov	r3, r0
 80015b2:	4618      	mov	r0, r3
 80015b4:	3708      	adds	r7, #8
 80015b6:	46bd      	mov	sp, r7
 80015b8:	bd80      	pop	{r7, pc}
	...

080015bc <HAL_FLASH_Program>:
 80015bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80015be:	b087      	sub	sp, #28
 80015c0:	af00      	add	r7, sp, #0
 80015c2:	60f8      	str	r0, [r7, #12]
 80015c4:	60b9      	str	r1, [r7, #8]
 80015c6:	e9c7 2300 	strd	r2, r3, [r7]
 80015ca:	2301      	movs	r3, #1
 80015cc:	75fb      	strb	r3, [r7, #23]
 80015ce:	2300      	movs	r3, #0
 80015d0:	75bb      	strb	r3, [r7, #22]
 80015d2:	2300      	movs	r3, #0
 80015d4:	757b      	strb	r3, [r7, #21]
 80015d6:	4b2f      	ldr	r3, [pc, #188]	@ (8001694 <HAL_FLASH_Program+0xd8>)
 80015d8:	7e1b      	ldrb	r3, [r3, #24]
 80015da:	2b01      	cmp	r3, #1
 80015dc:	d101      	bne.n	80015e2 <HAL_FLASH_Program+0x26>
 80015de:	2302      	movs	r3, #2
 80015e0:	e054      	b.n	800168c <HAL_FLASH_Program+0xd0>
 80015e2:	4b2c      	ldr	r3, [pc, #176]	@ (8001694 <HAL_FLASH_Program+0xd8>)
 80015e4:	2201      	movs	r2, #1
 80015e6:	761a      	strb	r2, [r3, #24]
 80015e8:	f24c 3050 	movw	r0, #50000	@ 0xc350
 80015ec:	f000 f8a8 	bl	8001740 <FLASH_WaitForLastOperation>
 80015f0:	4603      	mov	r3, r0
 80015f2:	75fb      	strb	r3, [r7, #23]
 80015f4:	7dfb      	ldrb	r3, [r7, #23]
 80015f6:	2b00      	cmp	r3, #0
 80015f8:	d144      	bne.n	8001684 <HAL_FLASH_Program+0xc8>
 80015fa:	68fb      	ldr	r3, [r7, #12]
 80015fc:	2b01      	cmp	r3, #1
 80015fe:	d102      	bne.n	8001606 <HAL_FLASH_Program+0x4a>
 8001600:	2301      	movs	r3, #1
 8001602:	757b      	strb	r3, [r7, #21]
 8001604:	e007      	b.n	8001616 <HAL_FLASH_Program+0x5a>
 8001606:	68fb      	ldr	r3, [r7, #12]
 8001608:	2b02      	cmp	r3, #2
 800160a:	d102      	bne.n	8001612 <HAL_FLASH_Program+0x56>
 800160c:	2302      	movs	r3, #2
 800160e:	757b      	strb	r3, [r7, #21]
 8001610:	e001      	b.n	8001616 <HAL_FLASH_Program+0x5a>
 8001612:	2304      	movs	r3, #4
 8001614:	757b      	strb	r3, [r7, #21]
 8001616:	2300      	movs	r3, #0
 8001618:	75bb      	strb	r3, [r7, #22]
 800161a:	e02d      	b.n	8001678 <HAL_FLASH_Program+0xbc>
 800161c:	7dbb      	ldrb	r3, [r7, #22]
 800161e:	005a      	lsls	r2, r3, #1
 8001620:	68bb      	ldr	r3, [r7, #8]
 8001622:	eb02 0c03 	add.w	ip, r2, r3
 8001626:	7dbb      	ldrb	r3, [r7, #22]
 8001628:	0119      	lsls	r1, r3, #4
 800162a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800162e:	f1c1 0620 	rsb	r6, r1, #32
 8001632:	f1a1 0020 	sub.w	r0, r1, #32
 8001636:	fa22 f401 	lsr.w	r4, r2, r1
 800163a:	fa03 f606 	lsl.w	r6, r3, r6
 800163e:	4334      	orrs	r4, r6
 8001640:	fa23 f000 	lsr.w	r0, r3, r0
 8001644:	4304      	orrs	r4, r0
 8001646:	fa23 f501 	lsr.w	r5, r3, r1
 800164a:	b2a3      	uxth	r3, r4
 800164c:	4619      	mov	r1, r3
 800164e:	4660      	mov	r0, ip
 8001650:	f000 f85a 	bl	8001708 <FLASH_Program_HalfWord>
 8001654:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8001658:	f000 f872 	bl	8001740 <FLASH_WaitForLastOperation>
 800165c:	4603      	mov	r3, r0
 800165e:	75fb      	strb	r3, [r7, #23]
 8001660:	4b0d      	ldr	r3, [pc, #52]	@ (8001698 <HAL_FLASH_Program+0xdc>)
 8001662:	691b      	ldr	r3, [r3, #16]
 8001664:	4a0c      	ldr	r2, [pc, #48]	@ (8001698 <HAL_FLASH_Program+0xdc>)
 8001666:	f023 0301 	bic.w	r3, r3, #1
 800166a:	6113      	str	r3, [r2, #16]
 800166c:	7dfb      	ldrb	r3, [r7, #23]
 800166e:	2b00      	cmp	r3, #0
 8001670:	d107      	bne.n	8001682 <HAL_FLASH_Program+0xc6>
 8001672:	7dbb      	ldrb	r3, [r7, #22]
 8001674:	3301      	adds	r3, #1
 8001676:	75bb      	strb	r3, [r7, #22]
 8001678:	7dba      	ldrb	r2, [r7, #22]
 800167a:	7d7b      	ldrb	r3, [r7, #21]
 800167c:	429a      	cmp	r2, r3
 800167e:	d3cd      	bcc.n	800161c <HAL_FLASH_Program+0x60>
 8001680:	e000      	b.n	8001684 <HAL_FLASH_Program+0xc8>
 8001682:	bf00      	nop
 8001684:	4b03      	ldr	r3, [pc, #12]	@ (8001694 <HAL_FLASH_Program+0xd8>)
 8001686:	2200      	movs	r2, #0
 8001688:	761a      	strb	r2, [r3, #24]
 800168a:	7dfb      	ldrb	r3, [r7, #23]
 800168c:	4618      	mov	r0, r3
 800168e:	371c      	adds	r7, #28
 8001690:	46bd      	mov	sp, r7
 8001692:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001694:	20000098 	.word	0x20000098
 8001698:	40022000 	.word	0x40022000

0800169c <HAL_FLASH_Unlock>:
 800169c:	b480      	push	{r7}
 800169e:	b083      	sub	sp, #12
 80016a0:	af00      	add	r7, sp, #0
 80016a2:	2300      	movs	r3, #0
 80016a4:	71fb      	strb	r3, [r7, #7]
 80016a6:	4b0d      	ldr	r3, [pc, #52]	@ (80016dc <HAL_FLASH_Unlock+0x40>)
 80016a8:	691b      	ldr	r3, [r3, #16]
 80016aa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80016ae:	2b00      	cmp	r3, #0
 80016b0:	d00d      	beq.n	80016ce <HAL_FLASH_Unlock+0x32>
 80016b2:	4b0a      	ldr	r3, [pc, #40]	@ (80016dc <HAL_FLASH_Unlock+0x40>)
 80016b4:	4a0a      	ldr	r2, [pc, #40]	@ (80016e0 <HAL_FLASH_Unlock+0x44>)
 80016b6:	605a      	str	r2, [r3, #4]
 80016b8:	4b08      	ldr	r3, [pc, #32]	@ (80016dc <HAL_FLASH_Unlock+0x40>)
 80016ba:	4a0a      	ldr	r2, [pc, #40]	@ (80016e4 <HAL_FLASH_Unlock+0x48>)
 80016bc:	605a      	str	r2, [r3, #4]
 80016be:	4b07      	ldr	r3, [pc, #28]	@ (80016dc <HAL_FLASH_Unlock+0x40>)
 80016c0:	691b      	ldr	r3, [r3, #16]
 80016c2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80016c6:	2b00      	cmp	r3, #0
 80016c8:	d001      	beq.n	80016ce <HAL_FLASH_Unlock+0x32>
 80016ca:	2301      	movs	r3, #1
 80016cc:	71fb      	strb	r3, [r7, #7]
 80016ce:	79fb      	ldrb	r3, [r7, #7]
 80016d0:	4618      	mov	r0, r3
 80016d2:	370c      	adds	r7, #12
 80016d4:	46bd      	mov	sp, r7
 80016d6:	bc80      	pop	{r7}
 80016d8:	4770      	bx	lr
 80016da:	bf00      	nop
 80016dc:	40022000 	.word	0x40022000
 80016e0:	45670123 	.word	0x45670123
 80016e4:	cdef89ab 	.word	0xcdef89ab

080016e8 <HAL_FLASH_Lock>:
 80016e8:	b480      	push	{r7}
 80016ea:	af00      	add	r7, sp, #0
 80016ec:	4b05      	ldr	r3, [pc, #20]	@ (8001704 <HAL_FLASH_Lock+0x1c>)
 80016ee:	691b      	ldr	r3, [r3, #16]
 80016f0:	4a04      	ldr	r2, [pc, #16]	@ (8001704 <HAL_FLASH_Lock+0x1c>)
 80016f2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80016f6:	6113      	str	r3, [r2, #16]
 80016f8:	2300      	movs	r3, #0
 80016fa:	4618      	mov	r0, r3
 80016fc:	46bd      	mov	sp, r7
 80016fe:	bc80      	pop	{r7}
 8001700:	4770      	bx	lr
 8001702:	bf00      	nop
 8001704:	40022000 	.word	0x40022000

08001708 <FLASH_Program_HalfWord>:
 8001708:	b480      	push	{r7}
 800170a:	b083      	sub	sp, #12
 800170c:	af00      	add	r7, sp, #0
 800170e:	6078      	str	r0, [r7, #4]
 8001710:	460b      	mov	r3, r1
 8001712:	807b      	strh	r3, [r7, #2]
 8001714:	4b08      	ldr	r3, [pc, #32]	@ (8001738 <FLASH_Program_HalfWord+0x30>)
 8001716:	2200      	movs	r2, #0
 8001718:	61da      	str	r2, [r3, #28]
 800171a:	4b08      	ldr	r3, [pc, #32]	@ (800173c <FLASH_Program_HalfWord+0x34>)
 800171c:	691b      	ldr	r3, [r3, #16]
 800171e:	4a07      	ldr	r2, [pc, #28]	@ (800173c <FLASH_Program_HalfWord+0x34>)
 8001720:	f043 0301 	orr.w	r3, r3, #1
 8001724:	6113      	str	r3, [r2, #16]
 8001726:	687b      	ldr	r3, [r7, #4]
 8001728:	887a      	ldrh	r2, [r7, #2]
 800172a:	801a      	strh	r2, [r3, #0]
 800172c:	bf00      	nop
 800172e:	370c      	adds	r7, #12
 8001730:	46bd      	mov	sp, r7
 8001732:	bc80      	pop	{r7}
 8001734:	4770      	bx	lr
 8001736:	bf00      	nop
 8001738:	20000098 	.word	0x20000098
 800173c:	40022000 	.word	0x40022000

08001740 <FLASH_WaitForLastOperation>:
 8001740:	b580      	push	{r7, lr}
 8001742:	b084      	sub	sp, #16
 8001744:	af00      	add	r7, sp, #0
 8001746:	6078      	str	r0, [r7, #4]
 8001748:	f7ff fe26 	bl	8001398 <HAL_GetTick>
 800174c:	60f8      	str	r0, [r7, #12]
 800174e:	e010      	b.n	8001772 <FLASH_WaitForLastOperation+0x32>
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001756:	d00c      	beq.n	8001772 <FLASH_WaitForLastOperation+0x32>
 8001758:	687b      	ldr	r3, [r7, #4]
 800175a:	2b00      	cmp	r3, #0
 800175c:	d007      	beq.n	800176e <FLASH_WaitForLastOperation+0x2e>
 800175e:	f7ff fe1b 	bl	8001398 <HAL_GetTick>
 8001762:	4602      	mov	r2, r0
 8001764:	68fb      	ldr	r3, [r7, #12]
 8001766:	1ad3      	subs	r3, r2, r3
 8001768:	687a      	ldr	r2, [r7, #4]
 800176a:	429a      	cmp	r2, r3
 800176c:	d201      	bcs.n	8001772 <FLASH_WaitForLastOperation+0x32>
 800176e:	2303      	movs	r3, #3
 8001770:	e025      	b.n	80017be <FLASH_WaitForLastOperation+0x7e>
 8001772:	4b15      	ldr	r3, [pc, #84]	@ (80017c8 <FLASH_WaitForLastOperation+0x88>)
 8001774:	68db      	ldr	r3, [r3, #12]
 8001776:	f003 0301 	and.w	r3, r3, #1
 800177a:	2b00      	cmp	r3, #0
 800177c:	d1e8      	bne.n	8001750 <FLASH_WaitForLastOperation+0x10>
 800177e:	4b12      	ldr	r3, [pc, #72]	@ (80017c8 <FLASH_WaitForLastOperation+0x88>)
 8001780:	68db      	ldr	r3, [r3, #12]
 8001782:	f003 0320 	and.w	r3, r3, #32
 8001786:	2b00      	cmp	r3, #0
 8001788:	d002      	beq.n	8001790 <FLASH_WaitForLastOperation+0x50>
 800178a:	4b0f      	ldr	r3, [pc, #60]	@ (80017c8 <FLASH_WaitForLastOperation+0x88>)
 800178c:	2220      	movs	r2, #32
 800178e:	60da      	str	r2, [r3, #12]
 8001790:	4b0d      	ldr	r3, [pc, #52]	@ (80017c8 <FLASH_WaitForLastOperation+0x88>)
 8001792:	68db      	ldr	r3, [r3, #12]
 8001794:	f003 0310 	and.w	r3, r3, #16
 8001798:	2b00      	cmp	r3, #0
 800179a:	d10b      	bne.n	80017b4 <FLASH_WaitForLastOperation+0x74>
 800179c:	4b0a      	ldr	r3, [pc, #40]	@ (80017c8 <FLASH_WaitForLastOperation+0x88>)
 800179e:	69db      	ldr	r3, [r3, #28]
 80017a0:	f003 0301 	and.w	r3, r3, #1
 80017a4:	2b00      	cmp	r3, #0
 80017a6:	d105      	bne.n	80017b4 <FLASH_WaitForLastOperation+0x74>
 80017a8:	4b07      	ldr	r3, [pc, #28]	@ (80017c8 <FLASH_WaitForLastOperation+0x88>)
 80017aa:	68db      	ldr	r3, [r3, #12]
 80017ac:	f003 0304 	and.w	r3, r3, #4
 80017b0:	2b00      	cmp	r3, #0
 80017b2:	d003      	beq.n	80017bc <FLASH_WaitForLastOperation+0x7c>
 80017b4:	f000 f80a 	bl	80017cc <FLASH_SetErrorCode>
 80017b8:	2301      	movs	r3, #1
 80017ba:	e000      	b.n	80017be <FLASH_WaitForLastOperation+0x7e>
 80017bc:	2300      	movs	r3, #0
 80017be:	4618      	mov	r0, r3
 80017c0:	3710      	adds	r7, #16
 80017c2:	46bd      	mov	sp, r7
 80017c4:	bd80      	pop	{r7, pc}
 80017c6:	bf00      	nop
 80017c8:	40022000 	.word	0x40022000

080017cc <FLASH_SetErrorCode>:
 80017cc:	b480      	push	{r7}
 80017ce:	b083      	sub	sp, #12
 80017d0:	af00      	add	r7, sp, #0
 80017d2:	2300      	movs	r3, #0
 80017d4:	607b      	str	r3, [r7, #4]
 80017d6:	4b23      	ldr	r3, [pc, #140]	@ (8001864 <FLASH_SetErrorCode+0x98>)
 80017d8:	68db      	ldr	r3, [r3, #12]
 80017da:	f003 0310 	and.w	r3, r3, #16
 80017de:	2b00      	cmp	r3, #0
 80017e0:	d009      	beq.n	80017f6 <FLASH_SetErrorCode+0x2a>
 80017e2:	4b21      	ldr	r3, [pc, #132]	@ (8001868 <FLASH_SetErrorCode+0x9c>)
 80017e4:	69db      	ldr	r3, [r3, #28]
 80017e6:	f043 0302 	orr.w	r3, r3, #2
 80017ea:	4a1f      	ldr	r2, [pc, #124]	@ (8001868 <FLASH_SetErrorCode+0x9c>)
 80017ec:	61d3      	str	r3, [r2, #28]
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	f043 0310 	orr.w	r3, r3, #16
 80017f4:	607b      	str	r3, [r7, #4]
 80017f6:	4b1b      	ldr	r3, [pc, #108]	@ (8001864 <FLASH_SetErrorCode+0x98>)
 80017f8:	68db      	ldr	r3, [r3, #12]
 80017fa:	f003 0304 	and.w	r3, r3, #4
 80017fe:	2b00      	cmp	r3, #0
 8001800:	d009      	beq.n	8001816 <FLASH_SetErrorCode+0x4a>
 8001802:	4b19      	ldr	r3, [pc, #100]	@ (8001868 <FLASH_SetErrorCode+0x9c>)
 8001804:	69db      	ldr	r3, [r3, #28]
 8001806:	f043 0301 	orr.w	r3, r3, #1
 800180a:	4a17      	ldr	r2, [pc, #92]	@ (8001868 <FLASH_SetErrorCode+0x9c>)
 800180c:	61d3      	str	r3, [r2, #28]
 800180e:	687b      	ldr	r3, [r7, #4]
 8001810:	f043 0304 	orr.w	r3, r3, #4
 8001814:	607b      	str	r3, [r7, #4]
 8001816:	4b13      	ldr	r3, [pc, #76]	@ (8001864 <FLASH_SetErrorCode+0x98>)
 8001818:	69db      	ldr	r3, [r3, #28]
 800181a:	f003 0301 	and.w	r3, r3, #1
 800181e:	2b00      	cmp	r3, #0
 8001820:	d00b      	beq.n	800183a <FLASH_SetErrorCode+0x6e>
 8001822:	4b11      	ldr	r3, [pc, #68]	@ (8001868 <FLASH_SetErrorCode+0x9c>)
 8001824:	69db      	ldr	r3, [r3, #28]
 8001826:	f043 0304 	orr.w	r3, r3, #4
 800182a:	4a0f      	ldr	r2, [pc, #60]	@ (8001868 <FLASH_SetErrorCode+0x9c>)
 800182c:	61d3      	str	r3, [r2, #28]
 800182e:	4b0d      	ldr	r3, [pc, #52]	@ (8001864 <FLASH_SetErrorCode+0x98>)
 8001830:	69db      	ldr	r3, [r3, #28]
 8001832:	4a0c      	ldr	r2, [pc, #48]	@ (8001864 <FLASH_SetErrorCode+0x98>)
 8001834:	f023 0301 	bic.w	r3, r3, #1
 8001838:	61d3      	str	r3, [r2, #28]
 800183a:	687b      	ldr	r3, [r7, #4]
 800183c:	f240 1201 	movw	r2, #257	@ 0x101
 8001840:	4293      	cmp	r3, r2
 8001842:	d106      	bne.n	8001852 <FLASH_SetErrorCode+0x86>
 8001844:	4b07      	ldr	r3, [pc, #28]	@ (8001864 <FLASH_SetErrorCode+0x98>)
 8001846:	69db      	ldr	r3, [r3, #28]
 8001848:	4a06      	ldr	r2, [pc, #24]	@ (8001864 <FLASH_SetErrorCode+0x98>)
 800184a:	f023 0301 	bic.w	r3, r3, #1
 800184e:	61d3      	str	r3, [r2, #28]
 8001850:	e002      	b.n	8001858 <FLASH_SetErrorCode+0x8c>
 8001852:	4a04      	ldr	r2, [pc, #16]	@ (8001864 <FLASH_SetErrorCode+0x98>)
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	60d3      	str	r3, [r2, #12]
 8001858:	bf00      	nop
 800185a:	370c      	adds	r7, #12
 800185c:	46bd      	mov	sp, r7
 800185e:	bc80      	pop	{r7}
 8001860:	4770      	bx	lr
 8001862:	bf00      	nop
 8001864:	40022000 	.word	0x40022000
 8001868:	20000098 	.word	0x20000098

0800186c <HAL_FLASHEx_Erase>:
 800186c:	b580      	push	{r7, lr}
 800186e:	b084      	sub	sp, #16
 8001870:	af00      	add	r7, sp, #0
 8001872:	6078      	str	r0, [r7, #4]
 8001874:	6039      	str	r1, [r7, #0]
 8001876:	2301      	movs	r3, #1
 8001878:	73fb      	strb	r3, [r7, #15]
 800187a:	2300      	movs	r3, #0
 800187c:	60bb      	str	r3, [r7, #8]
 800187e:	4b2f      	ldr	r3, [pc, #188]	@ (800193c <HAL_FLASHEx_Erase+0xd0>)
 8001880:	7e1b      	ldrb	r3, [r3, #24]
 8001882:	2b01      	cmp	r3, #1
 8001884:	d101      	bne.n	800188a <HAL_FLASHEx_Erase+0x1e>
 8001886:	2302      	movs	r3, #2
 8001888:	e053      	b.n	8001932 <HAL_FLASHEx_Erase+0xc6>
 800188a:	4b2c      	ldr	r3, [pc, #176]	@ (800193c <HAL_FLASHEx_Erase+0xd0>)
 800188c:	2201      	movs	r2, #1
 800188e:	761a      	strb	r2, [r3, #24]
 8001890:	687b      	ldr	r3, [r7, #4]
 8001892:	681b      	ldr	r3, [r3, #0]
 8001894:	2b02      	cmp	r3, #2
 8001896:	d116      	bne.n	80018c6 <HAL_FLASHEx_Erase+0x5a>
 8001898:	f24c 3050 	movw	r0, #50000	@ 0xc350
 800189c:	f7ff ff50 	bl	8001740 <FLASH_WaitForLastOperation>
 80018a0:	4603      	mov	r3, r0
 80018a2:	2b00      	cmp	r3, #0
 80018a4:	d141      	bne.n	800192a <HAL_FLASHEx_Erase+0xbe>
 80018a6:	2001      	movs	r0, #1
 80018a8:	f000 f84c 	bl	8001944 <FLASH_MassErase>
 80018ac:	f24c 3050 	movw	r0, #50000	@ 0xc350
 80018b0:	f7ff ff46 	bl	8001740 <FLASH_WaitForLastOperation>
 80018b4:	4603      	mov	r3, r0
 80018b6:	73fb      	strb	r3, [r7, #15]
 80018b8:	4b21      	ldr	r3, [pc, #132]	@ (8001940 <HAL_FLASHEx_Erase+0xd4>)
 80018ba:	691b      	ldr	r3, [r3, #16]
 80018bc:	4a20      	ldr	r2, [pc, #128]	@ (8001940 <HAL_FLASHEx_Erase+0xd4>)
 80018be:	f023 0304 	bic.w	r3, r3, #4
 80018c2:	6113      	str	r3, [r2, #16]
 80018c4:	e031      	b.n	800192a <HAL_FLASHEx_Erase+0xbe>
 80018c6:	f24c 3050 	movw	r0, #50000	@ 0xc350
 80018ca:	f7ff ff39 	bl	8001740 <FLASH_WaitForLastOperation>
 80018ce:	4603      	mov	r3, r0
 80018d0:	2b00      	cmp	r3, #0
 80018d2:	d12a      	bne.n	800192a <HAL_FLASHEx_Erase+0xbe>
 80018d4:	683b      	ldr	r3, [r7, #0]
 80018d6:	f04f 32ff 	mov.w	r2, #4294967295
 80018da:	601a      	str	r2, [r3, #0]
 80018dc:	687b      	ldr	r3, [r7, #4]
 80018de:	689b      	ldr	r3, [r3, #8]
 80018e0:	60bb      	str	r3, [r7, #8]
 80018e2:	e019      	b.n	8001918 <HAL_FLASHEx_Erase+0xac>
 80018e4:	68b8      	ldr	r0, [r7, #8]
 80018e6:	f000 f849 	bl	800197c <FLASH_PageErase>
 80018ea:	f24c 3050 	movw	r0, #50000	@ 0xc350
 80018ee:	f7ff ff27 	bl	8001740 <FLASH_WaitForLastOperation>
 80018f2:	4603      	mov	r3, r0
 80018f4:	73fb      	strb	r3, [r7, #15]
 80018f6:	4b12      	ldr	r3, [pc, #72]	@ (8001940 <HAL_FLASHEx_Erase+0xd4>)
 80018f8:	691b      	ldr	r3, [r3, #16]
 80018fa:	4a11      	ldr	r2, [pc, #68]	@ (8001940 <HAL_FLASHEx_Erase+0xd4>)
 80018fc:	f023 0302 	bic.w	r3, r3, #2
 8001900:	6113      	str	r3, [r2, #16]
 8001902:	7bfb      	ldrb	r3, [r7, #15]
 8001904:	2b00      	cmp	r3, #0
 8001906:	d003      	beq.n	8001910 <HAL_FLASHEx_Erase+0xa4>
 8001908:	683b      	ldr	r3, [r7, #0]
 800190a:	68ba      	ldr	r2, [r7, #8]
 800190c:	601a      	str	r2, [r3, #0]
 800190e:	e00c      	b.n	800192a <HAL_FLASHEx_Erase+0xbe>
 8001910:	68bb      	ldr	r3, [r7, #8]
 8001912:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8001916:	60bb      	str	r3, [r7, #8]
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	68db      	ldr	r3, [r3, #12]
 800191c:	029a      	lsls	r2, r3, #10
 800191e:	687b      	ldr	r3, [r7, #4]
 8001920:	689b      	ldr	r3, [r3, #8]
 8001922:	4413      	add	r3, r2
 8001924:	68ba      	ldr	r2, [r7, #8]
 8001926:	429a      	cmp	r2, r3
 8001928:	d3dc      	bcc.n	80018e4 <HAL_FLASHEx_Erase+0x78>
 800192a:	4b04      	ldr	r3, [pc, #16]	@ (800193c <HAL_FLASHEx_Erase+0xd0>)
 800192c:	2200      	movs	r2, #0
 800192e:	761a      	strb	r2, [r3, #24]
 8001930:	7bfb      	ldrb	r3, [r7, #15]
 8001932:	4618      	mov	r0, r3
 8001934:	3710      	adds	r7, #16
 8001936:	46bd      	mov	sp, r7
 8001938:	bd80      	pop	{r7, pc}
 800193a:	bf00      	nop
 800193c:	20000098 	.word	0x20000098
 8001940:	40022000 	.word	0x40022000

08001944 <FLASH_MassErase>:
 8001944:	b480      	push	{r7}
 8001946:	b083      	sub	sp, #12
 8001948:	af00      	add	r7, sp, #0
 800194a:	6078      	str	r0, [r7, #4]
 800194c:	4b09      	ldr	r3, [pc, #36]	@ (8001974 <FLASH_MassErase+0x30>)
 800194e:	2200      	movs	r2, #0
 8001950:	61da      	str	r2, [r3, #28]
 8001952:	4b09      	ldr	r3, [pc, #36]	@ (8001978 <FLASH_MassErase+0x34>)
 8001954:	691b      	ldr	r3, [r3, #16]
 8001956:	4a08      	ldr	r2, [pc, #32]	@ (8001978 <FLASH_MassErase+0x34>)
 8001958:	f043 0304 	orr.w	r3, r3, #4
 800195c:	6113      	str	r3, [r2, #16]
 800195e:	4b06      	ldr	r3, [pc, #24]	@ (8001978 <FLASH_MassErase+0x34>)
 8001960:	691b      	ldr	r3, [r3, #16]
 8001962:	4a05      	ldr	r2, [pc, #20]	@ (8001978 <FLASH_MassErase+0x34>)
 8001964:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001968:	6113      	str	r3, [r2, #16]
 800196a:	bf00      	nop
 800196c:	370c      	adds	r7, #12
 800196e:	46bd      	mov	sp, r7
 8001970:	bc80      	pop	{r7}
 8001972:	4770      	bx	lr
 8001974:	20000098 	.word	0x20000098
 8001978:	40022000 	.word	0x40022000

0800197c <FLASH_PageErase>:
 800197c:	b480      	push	{r7}
 800197e:	b083      	sub	sp, #12
 8001980:	af00      	add	r7, sp, #0
 8001982:	6078      	str	r0, [r7, #4]
 8001984:	4b0b      	ldr	r3, [pc, #44]	@ (80019b4 <FLASH_PageErase+0x38>)
 8001986:	2200      	movs	r2, #0
 8001988:	61da      	str	r2, [r3, #28]
 800198a:	4b0b      	ldr	r3, [pc, #44]	@ (80019b8 <FLASH_PageErase+0x3c>)
 800198c:	691b      	ldr	r3, [r3, #16]
 800198e:	4a0a      	ldr	r2, [pc, #40]	@ (80019b8 <FLASH_PageErase+0x3c>)
 8001990:	f043 0302 	orr.w	r3, r3, #2
 8001994:	6113      	str	r3, [r2, #16]
 8001996:	4a08      	ldr	r2, [pc, #32]	@ (80019b8 <FLASH_PageErase+0x3c>)
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	6153      	str	r3, [r2, #20]
 800199c:	4b06      	ldr	r3, [pc, #24]	@ (80019b8 <FLASH_PageErase+0x3c>)
 800199e:	691b      	ldr	r3, [r3, #16]
 80019a0:	4a05      	ldr	r2, [pc, #20]	@ (80019b8 <FLASH_PageErase+0x3c>)
 80019a2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80019a6:	6113      	str	r3, [r2, #16]
 80019a8:	bf00      	nop
 80019aa:	370c      	adds	r7, #12
 80019ac:	46bd      	mov	sp, r7
 80019ae:	bc80      	pop	{r7}
 80019b0:	4770      	bx	lr
 80019b2:	bf00      	nop
 80019b4:	20000098 	.word	0x20000098
 80019b8:	40022000 	.word	0x40022000

080019bc <HAL_GPIO_Init>:
 80019bc:	b480      	push	{r7}
 80019be:	b08b      	sub	sp, #44	@ 0x2c
 80019c0:	af00      	add	r7, sp, #0
 80019c2:	6078      	str	r0, [r7, #4]
 80019c4:	6039      	str	r1, [r7, #0]
 80019c6:	2300      	movs	r3, #0
 80019c8:	627b      	str	r3, [r7, #36]	@ 0x24
 80019ca:	2300      	movs	r3, #0
 80019cc:	623b      	str	r3, [r7, #32]
 80019ce:	e169      	b.n	8001ca4 <HAL_GPIO_Init+0x2e8>
 80019d0:	2201      	movs	r2, #1
 80019d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80019d4:	fa02 f303 	lsl.w	r3, r2, r3
 80019d8:	61fb      	str	r3, [r7, #28]
 80019da:	683b      	ldr	r3, [r7, #0]
 80019dc:	681b      	ldr	r3, [r3, #0]
 80019de:	69fa      	ldr	r2, [r7, #28]
 80019e0:	4013      	ands	r3, r2
 80019e2:	61bb      	str	r3, [r7, #24]
 80019e4:	69ba      	ldr	r2, [r7, #24]
 80019e6:	69fb      	ldr	r3, [r7, #28]
 80019e8:	429a      	cmp	r2, r3
 80019ea:	f040 8158 	bne.w	8001c9e <HAL_GPIO_Init+0x2e2>
 80019ee:	683b      	ldr	r3, [r7, #0]
 80019f0:	685b      	ldr	r3, [r3, #4]
 80019f2:	4a9a      	ldr	r2, [pc, #616]	@ (8001c5c <HAL_GPIO_Init+0x2a0>)
 80019f4:	4293      	cmp	r3, r2
 80019f6:	d05e      	beq.n	8001ab6 <HAL_GPIO_Init+0xfa>
 80019f8:	4a98      	ldr	r2, [pc, #608]	@ (8001c5c <HAL_GPIO_Init+0x2a0>)
 80019fa:	4293      	cmp	r3, r2
 80019fc:	d875      	bhi.n	8001aea <HAL_GPIO_Init+0x12e>
 80019fe:	4a98      	ldr	r2, [pc, #608]	@ (8001c60 <HAL_GPIO_Init+0x2a4>)
 8001a00:	4293      	cmp	r3, r2
 8001a02:	d058      	beq.n	8001ab6 <HAL_GPIO_Init+0xfa>
 8001a04:	4a96      	ldr	r2, [pc, #600]	@ (8001c60 <HAL_GPIO_Init+0x2a4>)
 8001a06:	4293      	cmp	r3, r2
 8001a08:	d86f      	bhi.n	8001aea <HAL_GPIO_Init+0x12e>
 8001a0a:	4a96      	ldr	r2, [pc, #600]	@ (8001c64 <HAL_GPIO_Init+0x2a8>)
 8001a0c:	4293      	cmp	r3, r2
 8001a0e:	d052      	beq.n	8001ab6 <HAL_GPIO_Init+0xfa>
 8001a10:	4a94      	ldr	r2, [pc, #592]	@ (8001c64 <HAL_GPIO_Init+0x2a8>)
 8001a12:	4293      	cmp	r3, r2
 8001a14:	d869      	bhi.n	8001aea <HAL_GPIO_Init+0x12e>
 8001a16:	4a94      	ldr	r2, [pc, #592]	@ (8001c68 <HAL_GPIO_Init+0x2ac>)
 8001a18:	4293      	cmp	r3, r2
 8001a1a:	d04c      	beq.n	8001ab6 <HAL_GPIO_Init+0xfa>
 8001a1c:	4a92      	ldr	r2, [pc, #584]	@ (8001c68 <HAL_GPIO_Init+0x2ac>)
 8001a1e:	4293      	cmp	r3, r2
 8001a20:	d863      	bhi.n	8001aea <HAL_GPIO_Init+0x12e>
 8001a22:	4a92      	ldr	r2, [pc, #584]	@ (8001c6c <HAL_GPIO_Init+0x2b0>)
 8001a24:	4293      	cmp	r3, r2
 8001a26:	d046      	beq.n	8001ab6 <HAL_GPIO_Init+0xfa>
 8001a28:	4a90      	ldr	r2, [pc, #576]	@ (8001c6c <HAL_GPIO_Init+0x2b0>)
 8001a2a:	4293      	cmp	r3, r2
 8001a2c:	d85d      	bhi.n	8001aea <HAL_GPIO_Init+0x12e>
 8001a2e:	2b12      	cmp	r3, #18
 8001a30:	d82a      	bhi.n	8001a88 <HAL_GPIO_Init+0xcc>
 8001a32:	2b12      	cmp	r3, #18
 8001a34:	d859      	bhi.n	8001aea <HAL_GPIO_Init+0x12e>
 8001a36:	a201      	add	r2, pc, #4	@ (adr r2, 8001a3c <HAL_GPIO_Init+0x80>)
 8001a38:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001a3c:	08001ab7 	.word	0x08001ab7
 8001a40:	08001a91 	.word	0x08001a91
 8001a44:	08001aa3 	.word	0x08001aa3
 8001a48:	08001ae5 	.word	0x08001ae5
 8001a4c:	08001aeb 	.word	0x08001aeb
 8001a50:	08001aeb 	.word	0x08001aeb
 8001a54:	08001aeb 	.word	0x08001aeb
 8001a58:	08001aeb 	.word	0x08001aeb
 8001a5c:	08001aeb 	.word	0x08001aeb
 8001a60:	08001aeb 	.word	0x08001aeb
 8001a64:	08001aeb 	.word	0x08001aeb
 8001a68:	08001aeb 	.word	0x08001aeb
 8001a6c:	08001aeb 	.word	0x08001aeb
 8001a70:	08001aeb 	.word	0x08001aeb
 8001a74:	08001aeb 	.word	0x08001aeb
 8001a78:	08001aeb 	.word	0x08001aeb
 8001a7c:	08001aeb 	.word	0x08001aeb
 8001a80:	08001a99 	.word	0x08001a99
 8001a84:	08001aad 	.word	0x08001aad
 8001a88:	4a79      	ldr	r2, [pc, #484]	@ (8001c70 <HAL_GPIO_Init+0x2b4>)
 8001a8a:	4293      	cmp	r3, r2
 8001a8c:	d013      	beq.n	8001ab6 <HAL_GPIO_Init+0xfa>
 8001a8e:	e02c      	b.n	8001aea <HAL_GPIO_Init+0x12e>
 8001a90:	683b      	ldr	r3, [r7, #0]
 8001a92:	68db      	ldr	r3, [r3, #12]
 8001a94:	623b      	str	r3, [r7, #32]
 8001a96:	e029      	b.n	8001aec <HAL_GPIO_Init+0x130>
 8001a98:	683b      	ldr	r3, [r7, #0]
 8001a9a:	68db      	ldr	r3, [r3, #12]
 8001a9c:	3304      	adds	r3, #4
 8001a9e:	623b      	str	r3, [r7, #32]
 8001aa0:	e024      	b.n	8001aec <HAL_GPIO_Init+0x130>
 8001aa2:	683b      	ldr	r3, [r7, #0]
 8001aa4:	68db      	ldr	r3, [r3, #12]
 8001aa6:	3308      	adds	r3, #8
 8001aa8:	623b      	str	r3, [r7, #32]
 8001aaa:	e01f      	b.n	8001aec <HAL_GPIO_Init+0x130>
 8001aac:	683b      	ldr	r3, [r7, #0]
 8001aae:	68db      	ldr	r3, [r3, #12]
 8001ab0:	330c      	adds	r3, #12
 8001ab2:	623b      	str	r3, [r7, #32]
 8001ab4:	e01a      	b.n	8001aec <HAL_GPIO_Init+0x130>
 8001ab6:	683b      	ldr	r3, [r7, #0]
 8001ab8:	689b      	ldr	r3, [r3, #8]
 8001aba:	2b00      	cmp	r3, #0
 8001abc:	d102      	bne.n	8001ac4 <HAL_GPIO_Init+0x108>
 8001abe:	2304      	movs	r3, #4
 8001ac0:	623b      	str	r3, [r7, #32]
 8001ac2:	e013      	b.n	8001aec <HAL_GPIO_Init+0x130>
 8001ac4:	683b      	ldr	r3, [r7, #0]
 8001ac6:	689b      	ldr	r3, [r3, #8]
 8001ac8:	2b01      	cmp	r3, #1
 8001aca:	d105      	bne.n	8001ad8 <HAL_GPIO_Init+0x11c>
 8001acc:	2308      	movs	r3, #8
 8001ace:	623b      	str	r3, [r7, #32]
 8001ad0:	687b      	ldr	r3, [r7, #4]
 8001ad2:	69fa      	ldr	r2, [r7, #28]
 8001ad4:	611a      	str	r2, [r3, #16]
 8001ad6:	e009      	b.n	8001aec <HAL_GPIO_Init+0x130>
 8001ad8:	2308      	movs	r3, #8
 8001ada:	623b      	str	r3, [r7, #32]
 8001adc:	687b      	ldr	r3, [r7, #4]
 8001ade:	69fa      	ldr	r2, [r7, #28]
 8001ae0:	615a      	str	r2, [r3, #20]
 8001ae2:	e003      	b.n	8001aec <HAL_GPIO_Init+0x130>
 8001ae4:	2300      	movs	r3, #0
 8001ae6:	623b      	str	r3, [r7, #32]
 8001ae8:	e000      	b.n	8001aec <HAL_GPIO_Init+0x130>
 8001aea:	bf00      	nop
 8001aec:	69bb      	ldr	r3, [r7, #24]
 8001aee:	2bff      	cmp	r3, #255	@ 0xff
 8001af0:	d801      	bhi.n	8001af6 <HAL_GPIO_Init+0x13a>
 8001af2:	687b      	ldr	r3, [r7, #4]
 8001af4:	e001      	b.n	8001afa <HAL_GPIO_Init+0x13e>
 8001af6:	687b      	ldr	r3, [r7, #4]
 8001af8:	3304      	adds	r3, #4
 8001afa:	617b      	str	r3, [r7, #20]
 8001afc:	69bb      	ldr	r3, [r7, #24]
 8001afe:	2bff      	cmp	r3, #255	@ 0xff
 8001b00:	d802      	bhi.n	8001b08 <HAL_GPIO_Init+0x14c>
 8001b02:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001b04:	009b      	lsls	r3, r3, #2
 8001b06:	e002      	b.n	8001b0e <HAL_GPIO_Init+0x152>
 8001b08:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001b0a:	3b08      	subs	r3, #8
 8001b0c:	009b      	lsls	r3, r3, #2
 8001b0e:	613b      	str	r3, [r7, #16]
 8001b10:	697b      	ldr	r3, [r7, #20]
 8001b12:	681a      	ldr	r2, [r3, #0]
 8001b14:	210f      	movs	r1, #15
 8001b16:	693b      	ldr	r3, [r7, #16]
 8001b18:	fa01 f303 	lsl.w	r3, r1, r3
 8001b1c:	43db      	mvns	r3, r3
 8001b1e:	401a      	ands	r2, r3
 8001b20:	6a39      	ldr	r1, [r7, #32]
 8001b22:	693b      	ldr	r3, [r7, #16]
 8001b24:	fa01 f303 	lsl.w	r3, r1, r3
 8001b28:	431a      	orrs	r2, r3
 8001b2a:	697b      	ldr	r3, [r7, #20]
 8001b2c:	601a      	str	r2, [r3, #0]
 8001b2e:	683b      	ldr	r3, [r7, #0]
 8001b30:	685b      	ldr	r3, [r3, #4]
 8001b32:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001b36:	2b00      	cmp	r3, #0
 8001b38:	f000 80b1 	beq.w	8001c9e <HAL_GPIO_Init+0x2e2>
 8001b3c:	4b4d      	ldr	r3, [pc, #308]	@ (8001c74 <HAL_GPIO_Init+0x2b8>)
 8001b3e:	699b      	ldr	r3, [r3, #24]
 8001b40:	4a4c      	ldr	r2, [pc, #304]	@ (8001c74 <HAL_GPIO_Init+0x2b8>)
 8001b42:	f043 0301 	orr.w	r3, r3, #1
 8001b46:	6193      	str	r3, [r2, #24]
 8001b48:	4b4a      	ldr	r3, [pc, #296]	@ (8001c74 <HAL_GPIO_Init+0x2b8>)
 8001b4a:	699b      	ldr	r3, [r3, #24]
 8001b4c:	f003 0301 	and.w	r3, r3, #1
 8001b50:	60bb      	str	r3, [r7, #8]
 8001b52:	68bb      	ldr	r3, [r7, #8]
 8001b54:	4a48      	ldr	r2, [pc, #288]	@ (8001c78 <HAL_GPIO_Init+0x2bc>)
 8001b56:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001b58:	089b      	lsrs	r3, r3, #2
 8001b5a:	3302      	adds	r3, #2
 8001b5c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001b60:	60fb      	str	r3, [r7, #12]
 8001b62:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001b64:	f003 0303 	and.w	r3, r3, #3
 8001b68:	009b      	lsls	r3, r3, #2
 8001b6a:	220f      	movs	r2, #15
 8001b6c:	fa02 f303 	lsl.w	r3, r2, r3
 8001b70:	43db      	mvns	r3, r3
 8001b72:	68fa      	ldr	r2, [r7, #12]
 8001b74:	4013      	ands	r3, r2
 8001b76:	60fb      	str	r3, [r7, #12]
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	4a40      	ldr	r2, [pc, #256]	@ (8001c7c <HAL_GPIO_Init+0x2c0>)
 8001b7c:	4293      	cmp	r3, r2
 8001b7e:	d013      	beq.n	8001ba8 <HAL_GPIO_Init+0x1ec>
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	4a3f      	ldr	r2, [pc, #252]	@ (8001c80 <HAL_GPIO_Init+0x2c4>)
 8001b84:	4293      	cmp	r3, r2
 8001b86:	d00d      	beq.n	8001ba4 <HAL_GPIO_Init+0x1e8>
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	4a3e      	ldr	r2, [pc, #248]	@ (8001c84 <HAL_GPIO_Init+0x2c8>)
 8001b8c:	4293      	cmp	r3, r2
 8001b8e:	d007      	beq.n	8001ba0 <HAL_GPIO_Init+0x1e4>
 8001b90:	687b      	ldr	r3, [r7, #4]
 8001b92:	4a3d      	ldr	r2, [pc, #244]	@ (8001c88 <HAL_GPIO_Init+0x2cc>)
 8001b94:	4293      	cmp	r3, r2
 8001b96:	d101      	bne.n	8001b9c <HAL_GPIO_Init+0x1e0>
 8001b98:	2303      	movs	r3, #3
 8001b9a:	e006      	b.n	8001baa <HAL_GPIO_Init+0x1ee>
 8001b9c:	2304      	movs	r3, #4
 8001b9e:	e004      	b.n	8001baa <HAL_GPIO_Init+0x1ee>
 8001ba0:	2302      	movs	r3, #2
 8001ba2:	e002      	b.n	8001baa <HAL_GPIO_Init+0x1ee>
 8001ba4:	2301      	movs	r3, #1
 8001ba6:	e000      	b.n	8001baa <HAL_GPIO_Init+0x1ee>
 8001ba8:	2300      	movs	r3, #0
 8001baa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001bac:	f002 0203 	and.w	r2, r2, #3
 8001bb0:	0092      	lsls	r2, r2, #2
 8001bb2:	4093      	lsls	r3, r2
 8001bb4:	68fa      	ldr	r2, [r7, #12]
 8001bb6:	4313      	orrs	r3, r2
 8001bb8:	60fb      	str	r3, [r7, #12]
 8001bba:	492f      	ldr	r1, [pc, #188]	@ (8001c78 <HAL_GPIO_Init+0x2bc>)
 8001bbc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001bbe:	089b      	lsrs	r3, r3, #2
 8001bc0:	3302      	adds	r3, #2
 8001bc2:	68fa      	ldr	r2, [r7, #12]
 8001bc4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001bc8:	683b      	ldr	r3, [r7, #0]
 8001bca:	685b      	ldr	r3, [r3, #4]
 8001bcc:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001bd0:	2b00      	cmp	r3, #0
 8001bd2:	d006      	beq.n	8001be2 <HAL_GPIO_Init+0x226>
 8001bd4:	4b2d      	ldr	r3, [pc, #180]	@ (8001c8c <HAL_GPIO_Init+0x2d0>)
 8001bd6:	689a      	ldr	r2, [r3, #8]
 8001bd8:	492c      	ldr	r1, [pc, #176]	@ (8001c8c <HAL_GPIO_Init+0x2d0>)
 8001bda:	69bb      	ldr	r3, [r7, #24]
 8001bdc:	4313      	orrs	r3, r2
 8001bde:	608b      	str	r3, [r1, #8]
 8001be0:	e006      	b.n	8001bf0 <HAL_GPIO_Init+0x234>
 8001be2:	4b2a      	ldr	r3, [pc, #168]	@ (8001c8c <HAL_GPIO_Init+0x2d0>)
 8001be4:	689a      	ldr	r2, [r3, #8]
 8001be6:	69bb      	ldr	r3, [r7, #24]
 8001be8:	43db      	mvns	r3, r3
 8001bea:	4928      	ldr	r1, [pc, #160]	@ (8001c8c <HAL_GPIO_Init+0x2d0>)
 8001bec:	4013      	ands	r3, r2
 8001bee:	608b      	str	r3, [r1, #8]
 8001bf0:	683b      	ldr	r3, [r7, #0]
 8001bf2:	685b      	ldr	r3, [r3, #4]
 8001bf4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001bf8:	2b00      	cmp	r3, #0
 8001bfa:	d006      	beq.n	8001c0a <HAL_GPIO_Init+0x24e>
 8001bfc:	4b23      	ldr	r3, [pc, #140]	@ (8001c8c <HAL_GPIO_Init+0x2d0>)
 8001bfe:	68da      	ldr	r2, [r3, #12]
 8001c00:	4922      	ldr	r1, [pc, #136]	@ (8001c8c <HAL_GPIO_Init+0x2d0>)
 8001c02:	69bb      	ldr	r3, [r7, #24]
 8001c04:	4313      	orrs	r3, r2
 8001c06:	60cb      	str	r3, [r1, #12]
 8001c08:	e006      	b.n	8001c18 <HAL_GPIO_Init+0x25c>
 8001c0a:	4b20      	ldr	r3, [pc, #128]	@ (8001c8c <HAL_GPIO_Init+0x2d0>)
 8001c0c:	68da      	ldr	r2, [r3, #12]
 8001c0e:	69bb      	ldr	r3, [r7, #24]
 8001c10:	43db      	mvns	r3, r3
 8001c12:	491e      	ldr	r1, [pc, #120]	@ (8001c8c <HAL_GPIO_Init+0x2d0>)
 8001c14:	4013      	ands	r3, r2
 8001c16:	60cb      	str	r3, [r1, #12]
 8001c18:	683b      	ldr	r3, [r7, #0]
 8001c1a:	685b      	ldr	r3, [r3, #4]
 8001c1c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001c20:	2b00      	cmp	r3, #0
 8001c22:	d006      	beq.n	8001c32 <HAL_GPIO_Init+0x276>
 8001c24:	4b19      	ldr	r3, [pc, #100]	@ (8001c8c <HAL_GPIO_Init+0x2d0>)
 8001c26:	685a      	ldr	r2, [r3, #4]
 8001c28:	4918      	ldr	r1, [pc, #96]	@ (8001c8c <HAL_GPIO_Init+0x2d0>)
 8001c2a:	69bb      	ldr	r3, [r7, #24]
 8001c2c:	4313      	orrs	r3, r2
 8001c2e:	604b      	str	r3, [r1, #4]
 8001c30:	e006      	b.n	8001c40 <HAL_GPIO_Init+0x284>
 8001c32:	4b16      	ldr	r3, [pc, #88]	@ (8001c8c <HAL_GPIO_Init+0x2d0>)
 8001c34:	685a      	ldr	r2, [r3, #4]
 8001c36:	69bb      	ldr	r3, [r7, #24]
 8001c38:	43db      	mvns	r3, r3
 8001c3a:	4914      	ldr	r1, [pc, #80]	@ (8001c8c <HAL_GPIO_Init+0x2d0>)
 8001c3c:	4013      	ands	r3, r2
 8001c3e:	604b      	str	r3, [r1, #4]
 8001c40:	683b      	ldr	r3, [r7, #0]
 8001c42:	685b      	ldr	r3, [r3, #4]
 8001c44:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001c48:	2b00      	cmp	r3, #0
 8001c4a:	d021      	beq.n	8001c90 <HAL_GPIO_Init+0x2d4>
 8001c4c:	4b0f      	ldr	r3, [pc, #60]	@ (8001c8c <HAL_GPIO_Init+0x2d0>)
 8001c4e:	681a      	ldr	r2, [r3, #0]
 8001c50:	490e      	ldr	r1, [pc, #56]	@ (8001c8c <HAL_GPIO_Init+0x2d0>)
 8001c52:	69bb      	ldr	r3, [r7, #24]
 8001c54:	4313      	orrs	r3, r2
 8001c56:	600b      	str	r3, [r1, #0]
 8001c58:	e021      	b.n	8001c9e <HAL_GPIO_Init+0x2e2>
 8001c5a:	bf00      	nop
 8001c5c:	10320000 	.word	0x10320000
 8001c60:	10310000 	.word	0x10310000
 8001c64:	10220000 	.word	0x10220000
 8001c68:	10210000 	.word	0x10210000
 8001c6c:	10120000 	.word	0x10120000
 8001c70:	10110000 	.word	0x10110000
 8001c74:	40021000 	.word	0x40021000
 8001c78:	40010000 	.word	0x40010000
 8001c7c:	40010800 	.word	0x40010800
 8001c80:	40010c00 	.word	0x40010c00
 8001c84:	40011000 	.word	0x40011000
 8001c88:	40011400 	.word	0x40011400
 8001c8c:	40010400 	.word	0x40010400
 8001c90:	4b0b      	ldr	r3, [pc, #44]	@ (8001cc0 <HAL_GPIO_Init+0x304>)
 8001c92:	681a      	ldr	r2, [r3, #0]
 8001c94:	69bb      	ldr	r3, [r7, #24]
 8001c96:	43db      	mvns	r3, r3
 8001c98:	4909      	ldr	r1, [pc, #36]	@ (8001cc0 <HAL_GPIO_Init+0x304>)
 8001c9a:	4013      	ands	r3, r2
 8001c9c:	600b      	str	r3, [r1, #0]
 8001c9e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001ca0:	3301      	adds	r3, #1
 8001ca2:	627b      	str	r3, [r7, #36]	@ 0x24
 8001ca4:	683b      	ldr	r3, [r7, #0]
 8001ca6:	681a      	ldr	r2, [r3, #0]
 8001ca8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001caa:	fa22 f303 	lsr.w	r3, r2, r3
 8001cae:	2b00      	cmp	r3, #0
 8001cb0:	f47f ae8e 	bne.w	80019d0 <HAL_GPIO_Init+0x14>
 8001cb4:	bf00      	nop
 8001cb6:	bf00      	nop
 8001cb8:	372c      	adds	r7, #44	@ 0x2c
 8001cba:	46bd      	mov	sp, r7
 8001cbc:	bc80      	pop	{r7}
 8001cbe:	4770      	bx	lr
 8001cc0:	40010400 	.word	0x40010400

08001cc4 <HAL_GPIO_ReadPin>:
 8001cc4:	b480      	push	{r7}
 8001cc6:	b085      	sub	sp, #20
 8001cc8:	af00      	add	r7, sp, #0
 8001cca:	6078      	str	r0, [r7, #4]
 8001ccc:	460b      	mov	r3, r1
 8001cce:	807b      	strh	r3, [r7, #2]
 8001cd0:	687b      	ldr	r3, [r7, #4]
 8001cd2:	689a      	ldr	r2, [r3, #8]
 8001cd4:	887b      	ldrh	r3, [r7, #2]
 8001cd6:	4013      	ands	r3, r2
 8001cd8:	2b00      	cmp	r3, #0
 8001cda:	d002      	beq.n	8001ce2 <HAL_GPIO_ReadPin+0x1e>
 8001cdc:	2301      	movs	r3, #1
 8001cde:	73fb      	strb	r3, [r7, #15]
 8001ce0:	e001      	b.n	8001ce6 <HAL_GPIO_ReadPin+0x22>
 8001ce2:	2300      	movs	r3, #0
 8001ce4:	73fb      	strb	r3, [r7, #15]
 8001ce6:	7bfb      	ldrb	r3, [r7, #15]
 8001ce8:	4618      	mov	r0, r3
 8001cea:	3714      	adds	r7, #20
 8001cec:	46bd      	mov	sp, r7
 8001cee:	bc80      	pop	{r7}
 8001cf0:	4770      	bx	lr

08001cf2 <HAL_GPIO_WritePin>:
 8001cf2:	b480      	push	{r7}
 8001cf4:	b083      	sub	sp, #12
 8001cf6:	af00      	add	r7, sp, #0
 8001cf8:	6078      	str	r0, [r7, #4]
 8001cfa:	460b      	mov	r3, r1
 8001cfc:	807b      	strh	r3, [r7, #2]
 8001cfe:	4613      	mov	r3, r2
 8001d00:	707b      	strb	r3, [r7, #1]
 8001d02:	787b      	ldrb	r3, [r7, #1]
 8001d04:	2b00      	cmp	r3, #0
 8001d06:	d003      	beq.n	8001d10 <HAL_GPIO_WritePin+0x1e>
 8001d08:	887a      	ldrh	r2, [r7, #2]
 8001d0a:	687b      	ldr	r3, [r7, #4]
 8001d0c:	611a      	str	r2, [r3, #16]
 8001d0e:	e003      	b.n	8001d18 <HAL_GPIO_WritePin+0x26>
 8001d10:	887b      	ldrh	r3, [r7, #2]
 8001d12:	041a      	lsls	r2, r3, #16
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	611a      	str	r2, [r3, #16]
 8001d18:	bf00      	nop
 8001d1a:	370c      	adds	r7, #12
 8001d1c:	46bd      	mov	sp, r7
 8001d1e:	bc80      	pop	{r7}
 8001d20:	4770      	bx	lr
	...

08001d24 <HAL_RCC_OscConfig>:
 8001d24:	b580      	push	{r7, lr}
 8001d26:	b086      	sub	sp, #24
 8001d28:	af00      	add	r7, sp, #0
 8001d2a:	6078      	str	r0, [r7, #4]
 8001d2c:	687b      	ldr	r3, [r7, #4]
 8001d2e:	2b00      	cmp	r3, #0
 8001d30:	d101      	bne.n	8001d36 <HAL_RCC_OscConfig+0x12>
 8001d32:	2301      	movs	r3, #1
 8001d34:	e272      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 8001d36:	687b      	ldr	r3, [r7, #4]
 8001d38:	681b      	ldr	r3, [r3, #0]
 8001d3a:	f003 0301 	and.w	r3, r3, #1
 8001d3e:	2b00      	cmp	r3, #0
 8001d40:	f000 8087 	beq.w	8001e52 <HAL_RCC_OscConfig+0x12e>
 8001d44:	4b92      	ldr	r3, [pc, #584]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001d46:	685b      	ldr	r3, [r3, #4]
 8001d48:	f003 030c 	and.w	r3, r3, #12
 8001d4c:	2b04      	cmp	r3, #4
 8001d4e:	d00c      	beq.n	8001d6a <HAL_RCC_OscConfig+0x46>
 8001d50:	4b8f      	ldr	r3, [pc, #572]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001d52:	685b      	ldr	r3, [r3, #4]
 8001d54:	f003 030c 	and.w	r3, r3, #12
 8001d58:	2b08      	cmp	r3, #8
 8001d5a:	d112      	bne.n	8001d82 <HAL_RCC_OscConfig+0x5e>
 8001d5c:	4b8c      	ldr	r3, [pc, #560]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001d5e:	685b      	ldr	r3, [r3, #4]
 8001d60:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001d64:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001d68:	d10b      	bne.n	8001d82 <HAL_RCC_OscConfig+0x5e>
 8001d6a:	4b89      	ldr	r3, [pc, #548]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d72:	2b00      	cmp	r3, #0
 8001d74:	d06c      	beq.n	8001e50 <HAL_RCC_OscConfig+0x12c>
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	685b      	ldr	r3, [r3, #4]
 8001d7a:	2b00      	cmp	r3, #0
 8001d7c:	d168      	bne.n	8001e50 <HAL_RCC_OscConfig+0x12c>
 8001d7e:	2301      	movs	r3, #1
 8001d80:	e24c      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	685b      	ldr	r3, [r3, #4]
 8001d86:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001d8a:	d106      	bne.n	8001d9a <HAL_RCC_OscConfig+0x76>
 8001d8c:	4b80      	ldr	r3, [pc, #512]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001d8e:	681b      	ldr	r3, [r3, #0]
 8001d90:	4a7f      	ldr	r2, [pc, #508]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001d92:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001d96:	6013      	str	r3, [r2, #0]
 8001d98:	e02e      	b.n	8001df8 <HAL_RCC_OscConfig+0xd4>
 8001d9a:	687b      	ldr	r3, [r7, #4]
 8001d9c:	685b      	ldr	r3, [r3, #4]
 8001d9e:	2b00      	cmp	r3, #0
 8001da0:	d10c      	bne.n	8001dbc <HAL_RCC_OscConfig+0x98>
 8001da2:	4b7b      	ldr	r3, [pc, #492]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001da4:	681b      	ldr	r3, [r3, #0]
 8001da6:	4a7a      	ldr	r2, [pc, #488]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001da8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001dac:	6013      	str	r3, [r2, #0]
 8001dae:	4b78      	ldr	r3, [pc, #480]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001db0:	681b      	ldr	r3, [r3, #0]
 8001db2:	4a77      	ldr	r2, [pc, #476]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001db4:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001db8:	6013      	str	r3, [r2, #0]
 8001dba:	e01d      	b.n	8001df8 <HAL_RCC_OscConfig+0xd4>
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	685b      	ldr	r3, [r3, #4]
 8001dc0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001dc4:	d10c      	bne.n	8001de0 <HAL_RCC_OscConfig+0xbc>
 8001dc6:	4b72      	ldr	r3, [pc, #456]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001dc8:	681b      	ldr	r3, [r3, #0]
 8001dca:	4a71      	ldr	r2, [pc, #452]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001dcc:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001dd0:	6013      	str	r3, [r2, #0]
 8001dd2:	4b6f      	ldr	r3, [pc, #444]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001dd4:	681b      	ldr	r3, [r3, #0]
 8001dd6:	4a6e      	ldr	r2, [pc, #440]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001dd8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001ddc:	6013      	str	r3, [r2, #0]
 8001dde:	e00b      	b.n	8001df8 <HAL_RCC_OscConfig+0xd4>
 8001de0:	4b6b      	ldr	r3, [pc, #428]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001de2:	681b      	ldr	r3, [r3, #0]
 8001de4:	4a6a      	ldr	r2, [pc, #424]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001de6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001dea:	6013      	str	r3, [r2, #0]
 8001dec:	4b68      	ldr	r3, [pc, #416]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001dee:	681b      	ldr	r3, [r3, #0]
 8001df0:	4a67      	ldr	r2, [pc, #412]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001df2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001df6:	6013      	str	r3, [r2, #0]
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	685b      	ldr	r3, [r3, #4]
 8001dfc:	2b00      	cmp	r3, #0
 8001dfe:	d013      	beq.n	8001e28 <HAL_RCC_OscConfig+0x104>
 8001e00:	f7ff faca 	bl	8001398 <HAL_GetTick>
 8001e04:	6138      	str	r0, [r7, #16]
 8001e06:	e008      	b.n	8001e1a <HAL_RCC_OscConfig+0xf6>
 8001e08:	f7ff fac6 	bl	8001398 <HAL_GetTick>
 8001e0c:	4602      	mov	r2, r0
 8001e0e:	693b      	ldr	r3, [r7, #16]
 8001e10:	1ad3      	subs	r3, r2, r3
 8001e12:	2b64      	cmp	r3, #100	@ 0x64
 8001e14:	d901      	bls.n	8001e1a <HAL_RCC_OscConfig+0xf6>
 8001e16:	2303      	movs	r3, #3
 8001e18:	e200      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 8001e1a:	4b5d      	ldr	r3, [pc, #372]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001e1c:	681b      	ldr	r3, [r3, #0]
 8001e1e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001e22:	2b00      	cmp	r3, #0
 8001e24:	d0f0      	beq.n	8001e08 <HAL_RCC_OscConfig+0xe4>
 8001e26:	e014      	b.n	8001e52 <HAL_RCC_OscConfig+0x12e>
 8001e28:	f7ff fab6 	bl	8001398 <HAL_GetTick>
 8001e2c:	6138      	str	r0, [r7, #16]
 8001e2e:	e008      	b.n	8001e42 <HAL_RCC_OscConfig+0x11e>
 8001e30:	f7ff fab2 	bl	8001398 <HAL_GetTick>
 8001e34:	4602      	mov	r2, r0
 8001e36:	693b      	ldr	r3, [r7, #16]
 8001e38:	1ad3      	subs	r3, r2, r3
 8001e3a:	2b64      	cmp	r3, #100	@ 0x64
 8001e3c:	d901      	bls.n	8001e42 <HAL_RCC_OscConfig+0x11e>
 8001e3e:	2303      	movs	r3, #3
 8001e40:	e1ec      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 8001e42:	4b53      	ldr	r3, [pc, #332]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001e44:	681b      	ldr	r3, [r3, #0]
 8001e46:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001e4a:	2b00      	cmp	r3, #0
 8001e4c:	d1f0      	bne.n	8001e30 <HAL_RCC_OscConfig+0x10c>
 8001e4e:	e000      	b.n	8001e52 <HAL_RCC_OscConfig+0x12e>
 8001e50:	bf00      	nop
 8001e52:	687b      	ldr	r3, [r7, #4]
 8001e54:	681b      	ldr	r3, [r3, #0]
 8001e56:	f003 0302 	and.w	r3, r3, #2
 8001e5a:	2b00      	cmp	r3, #0
 8001e5c:	d063      	beq.n	8001f26 <HAL_RCC_OscConfig+0x202>
 8001e5e:	4b4c      	ldr	r3, [pc, #304]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001e60:	685b      	ldr	r3, [r3, #4]
 8001e62:	f003 030c 	and.w	r3, r3, #12
 8001e66:	2b00      	cmp	r3, #0
 8001e68:	d00b      	beq.n	8001e82 <HAL_RCC_OscConfig+0x15e>
 8001e6a:	4b49      	ldr	r3, [pc, #292]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001e6c:	685b      	ldr	r3, [r3, #4]
 8001e6e:	f003 030c 	and.w	r3, r3, #12
 8001e72:	2b08      	cmp	r3, #8
 8001e74:	d11c      	bne.n	8001eb0 <HAL_RCC_OscConfig+0x18c>
 8001e76:	4b46      	ldr	r3, [pc, #280]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001e78:	685b      	ldr	r3, [r3, #4]
 8001e7a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001e7e:	2b00      	cmp	r3, #0
 8001e80:	d116      	bne.n	8001eb0 <HAL_RCC_OscConfig+0x18c>
 8001e82:	4b43      	ldr	r3, [pc, #268]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001e84:	681b      	ldr	r3, [r3, #0]
 8001e86:	f003 0302 	and.w	r3, r3, #2
 8001e8a:	2b00      	cmp	r3, #0
 8001e8c:	d005      	beq.n	8001e9a <HAL_RCC_OscConfig+0x176>
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	691b      	ldr	r3, [r3, #16]
 8001e92:	2b01      	cmp	r3, #1
 8001e94:	d001      	beq.n	8001e9a <HAL_RCC_OscConfig+0x176>
 8001e96:	2301      	movs	r3, #1
 8001e98:	e1c0      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 8001e9a:	4b3d      	ldr	r3, [pc, #244]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001e9c:	681b      	ldr	r3, [r3, #0]
 8001e9e:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001ea2:	687b      	ldr	r3, [r7, #4]
 8001ea4:	695b      	ldr	r3, [r3, #20]
 8001ea6:	00db      	lsls	r3, r3, #3
 8001ea8:	4939      	ldr	r1, [pc, #228]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001eaa:	4313      	orrs	r3, r2
 8001eac:	600b      	str	r3, [r1, #0]
 8001eae:	e03a      	b.n	8001f26 <HAL_RCC_OscConfig+0x202>
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	691b      	ldr	r3, [r3, #16]
 8001eb4:	2b00      	cmp	r3, #0
 8001eb6:	d020      	beq.n	8001efa <HAL_RCC_OscConfig+0x1d6>
 8001eb8:	4b36      	ldr	r3, [pc, #216]	@ (8001f94 <HAL_RCC_OscConfig+0x270>)
 8001eba:	2201      	movs	r2, #1
 8001ebc:	601a      	str	r2, [r3, #0]
 8001ebe:	f7ff fa6b 	bl	8001398 <HAL_GetTick>
 8001ec2:	6138      	str	r0, [r7, #16]
 8001ec4:	e008      	b.n	8001ed8 <HAL_RCC_OscConfig+0x1b4>
 8001ec6:	f7ff fa67 	bl	8001398 <HAL_GetTick>
 8001eca:	4602      	mov	r2, r0
 8001ecc:	693b      	ldr	r3, [r7, #16]
 8001ece:	1ad3      	subs	r3, r2, r3
 8001ed0:	2b02      	cmp	r3, #2
 8001ed2:	d901      	bls.n	8001ed8 <HAL_RCC_OscConfig+0x1b4>
 8001ed4:	2303      	movs	r3, #3
 8001ed6:	e1a1      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 8001ed8:	4b2d      	ldr	r3, [pc, #180]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001eda:	681b      	ldr	r3, [r3, #0]
 8001edc:	f003 0302 	and.w	r3, r3, #2
 8001ee0:	2b00      	cmp	r3, #0
 8001ee2:	d0f0      	beq.n	8001ec6 <HAL_RCC_OscConfig+0x1a2>
 8001ee4:	4b2a      	ldr	r3, [pc, #168]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001ee6:	681b      	ldr	r3, [r3, #0]
 8001ee8:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	695b      	ldr	r3, [r3, #20]
 8001ef0:	00db      	lsls	r3, r3, #3
 8001ef2:	4927      	ldr	r1, [pc, #156]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001ef4:	4313      	orrs	r3, r2
 8001ef6:	600b      	str	r3, [r1, #0]
 8001ef8:	e015      	b.n	8001f26 <HAL_RCC_OscConfig+0x202>
 8001efa:	4b26      	ldr	r3, [pc, #152]	@ (8001f94 <HAL_RCC_OscConfig+0x270>)
 8001efc:	2200      	movs	r2, #0
 8001efe:	601a      	str	r2, [r3, #0]
 8001f00:	f7ff fa4a 	bl	8001398 <HAL_GetTick>
 8001f04:	6138      	str	r0, [r7, #16]
 8001f06:	e008      	b.n	8001f1a <HAL_RCC_OscConfig+0x1f6>
 8001f08:	f7ff fa46 	bl	8001398 <HAL_GetTick>
 8001f0c:	4602      	mov	r2, r0
 8001f0e:	693b      	ldr	r3, [r7, #16]
 8001f10:	1ad3      	subs	r3, r2, r3
 8001f12:	2b02      	cmp	r3, #2
 8001f14:	d901      	bls.n	8001f1a <HAL_RCC_OscConfig+0x1f6>
 8001f16:	2303      	movs	r3, #3
 8001f18:	e180      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 8001f1a:	4b1d      	ldr	r3, [pc, #116]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001f1c:	681b      	ldr	r3, [r3, #0]
 8001f1e:	f003 0302 	and.w	r3, r3, #2
 8001f22:	2b00      	cmp	r3, #0
 8001f24:	d1f0      	bne.n	8001f08 <HAL_RCC_OscConfig+0x1e4>
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	681b      	ldr	r3, [r3, #0]
 8001f2a:	f003 0308 	and.w	r3, r3, #8
 8001f2e:	2b00      	cmp	r3, #0
 8001f30:	d03a      	beq.n	8001fa8 <HAL_RCC_OscConfig+0x284>
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	699b      	ldr	r3, [r3, #24]
 8001f36:	2b00      	cmp	r3, #0
 8001f38:	d019      	beq.n	8001f6e <HAL_RCC_OscConfig+0x24a>
 8001f3a:	4b17      	ldr	r3, [pc, #92]	@ (8001f98 <HAL_RCC_OscConfig+0x274>)
 8001f3c:	2201      	movs	r2, #1
 8001f3e:	601a      	str	r2, [r3, #0]
 8001f40:	f7ff fa2a 	bl	8001398 <HAL_GetTick>
 8001f44:	6138      	str	r0, [r7, #16]
 8001f46:	e008      	b.n	8001f5a <HAL_RCC_OscConfig+0x236>
 8001f48:	f7ff fa26 	bl	8001398 <HAL_GetTick>
 8001f4c:	4602      	mov	r2, r0
 8001f4e:	693b      	ldr	r3, [r7, #16]
 8001f50:	1ad3      	subs	r3, r2, r3
 8001f52:	2b02      	cmp	r3, #2
 8001f54:	d901      	bls.n	8001f5a <HAL_RCC_OscConfig+0x236>
 8001f56:	2303      	movs	r3, #3
 8001f58:	e160      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 8001f5a:	4b0d      	ldr	r3, [pc, #52]	@ (8001f90 <HAL_RCC_OscConfig+0x26c>)
 8001f5c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001f5e:	f003 0302 	and.w	r3, r3, #2
 8001f62:	2b00      	cmp	r3, #0
 8001f64:	d0f0      	beq.n	8001f48 <HAL_RCC_OscConfig+0x224>
 8001f66:	2001      	movs	r0, #1
 8001f68:	f000 fa9c 	bl	80024a4 <RCC_Delay>
 8001f6c:	e01c      	b.n	8001fa8 <HAL_RCC_OscConfig+0x284>
 8001f6e:	4b0a      	ldr	r3, [pc, #40]	@ (8001f98 <HAL_RCC_OscConfig+0x274>)
 8001f70:	2200      	movs	r2, #0
 8001f72:	601a      	str	r2, [r3, #0]
 8001f74:	f7ff fa10 	bl	8001398 <HAL_GetTick>
 8001f78:	6138      	str	r0, [r7, #16]
 8001f7a:	e00f      	b.n	8001f9c <HAL_RCC_OscConfig+0x278>
 8001f7c:	f7ff fa0c 	bl	8001398 <HAL_GetTick>
 8001f80:	4602      	mov	r2, r0
 8001f82:	693b      	ldr	r3, [r7, #16]
 8001f84:	1ad3      	subs	r3, r2, r3
 8001f86:	2b02      	cmp	r3, #2
 8001f88:	d908      	bls.n	8001f9c <HAL_RCC_OscConfig+0x278>
 8001f8a:	2303      	movs	r3, #3
 8001f8c:	e146      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 8001f8e:	bf00      	nop
 8001f90:	40021000 	.word	0x40021000
 8001f94:	42420000 	.word	0x42420000
 8001f98:	42420480 	.word	0x42420480
 8001f9c:	4b92      	ldr	r3, [pc, #584]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8001f9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001fa0:	f003 0302 	and.w	r3, r3, #2
 8001fa4:	2b00      	cmp	r3, #0
 8001fa6:	d1e9      	bne.n	8001f7c <HAL_RCC_OscConfig+0x258>
 8001fa8:	687b      	ldr	r3, [r7, #4]
 8001faa:	681b      	ldr	r3, [r3, #0]
 8001fac:	f003 0304 	and.w	r3, r3, #4
 8001fb0:	2b00      	cmp	r3, #0
 8001fb2:	f000 80a6 	beq.w	8002102 <HAL_RCC_OscConfig+0x3de>
 8001fb6:	2300      	movs	r3, #0
 8001fb8:	75fb      	strb	r3, [r7, #23]
 8001fba:	4b8b      	ldr	r3, [pc, #556]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8001fbc:	69db      	ldr	r3, [r3, #28]
 8001fbe:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001fc2:	2b00      	cmp	r3, #0
 8001fc4:	d10d      	bne.n	8001fe2 <HAL_RCC_OscConfig+0x2be>
 8001fc6:	4b88      	ldr	r3, [pc, #544]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8001fc8:	69db      	ldr	r3, [r3, #28]
 8001fca:	4a87      	ldr	r2, [pc, #540]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8001fcc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001fd0:	61d3      	str	r3, [r2, #28]
 8001fd2:	4b85      	ldr	r3, [pc, #532]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8001fd4:	69db      	ldr	r3, [r3, #28]
 8001fd6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001fda:	60bb      	str	r3, [r7, #8]
 8001fdc:	68bb      	ldr	r3, [r7, #8]
 8001fde:	2301      	movs	r3, #1
 8001fe0:	75fb      	strb	r3, [r7, #23]
 8001fe2:	4b82      	ldr	r3, [pc, #520]	@ (80021ec <HAL_RCC_OscConfig+0x4c8>)
 8001fe4:	681b      	ldr	r3, [r3, #0]
 8001fe6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001fea:	2b00      	cmp	r3, #0
 8001fec:	d118      	bne.n	8002020 <HAL_RCC_OscConfig+0x2fc>
 8001fee:	4b7f      	ldr	r3, [pc, #508]	@ (80021ec <HAL_RCC_OscConfig+0x4c8>)
 8001ff0:	681b      	ldr	r3, [r3, #0]
 8001ff2:	4a7e      	ldr	r2, [pc, #504]	@ (80021ec <HAL_RCC_OscConfig+0x4c8>)
 8001ff4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001ff8:	6013      	str	r3, [r2, #0]
 8001ffa:	f7ff f9cd 	bl	8001398 <HAL_GetTick>
 8001ffe:	6138      	str	r0, [r7, #16]
 8002000:	e008      	b.n	8002014 <HAL_RCC_OscConfig+0x2f0>
 8002002:	f7ff f9c9 	bl	8001398 <HAL_GetTick>
 8002006:	4602      	mov	r2, r0
 8002008:	693b      	ldr	r3, [r7, #16]
 800200a:	1ad3      	subs	r3, r2, r3
 800200c:	2b64      	cmp	r3, #100	@ 0x64
 800200e:	d901      	bls.n	8002014 <HAL_RCC_OscConfig+0x2f0>
 8002010:	2303      	movs	r3, #3
 8002012:	e103      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 8002014:	4b75      	ldr	r3, [pc, #468]	@ (80021ec <HAL_RCC_OscConfig+0x4c8>)
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800201c:	2b00      	cmp	r3, #0
 800201e:	d0f0      	beq.n	8002002 <HAL_RCC_OscConfig+0x2de>
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	68db      	ldr	r3, [r3, #12]
 8002024:	2b01      	cmp	r3, #1
 8002026:	d106      	bne.n	8002036 <HAL_RCC_OscConfig+0x312>
 8002028:	4b6f      	ldr	r3, [pc, #444]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 800202a:	6a1b      	ldr	r3, [r3, #32]
 800202c:	4a6e      	ldr	r2, [pc, #440]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 800202e:	f043 0301 	orr.w	r3, r3, #1
 8002032:	6213      	str	r3, [r2, #32]
 8002034:	e02d      	b.n	8002092 <HAL_RCC_OscConfig+0x36e>
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	68db      	ldr	r3, [r3, #12]
 800203a:	2b00      	cmp	r3, #0
 800203c:	d10c      	bne.n	8002058 <HAL_RCC_OscConfig+0x334>
 800203e:	4b6a      	ldr	r3, [pc, #424]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8002040:	6a1b      	ldr	r3, [r3, #32]
 8002042:	4a69      	ldr	r2, [pc, #420]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8002044:	f023 0301 	bic.w	r3, r3, #1
 8002048:	6213      	str	r3, [r2, #32]
 800204a:	4b67      	ldr	r3, [pc, #412]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 800204c:	6a1b      	ldr	r3, [r3, #32]
 800204e:	4a66      	ldr	r2, [pc, #408]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8002050:	f023 0304 	bic.w	r3, r3, #4
 8002054:	6213      	str	r3, [r2, #32]
 8002056:	e01c      	b.n	8002092 <HAL_RCC_OscConfig+0x36e>
 8002058:	687b      	ldr	r3, [r7, #4]
 800205a:	68db      	ldr	r3, [r3, #12]
 800205c:	2b05      	cmp	r3, #5
 800205e:	d10c      	bne.n	800207a <HAL_RCC_OscConfig+0x356>
 8002060:	4b61      	ldr	r3, [pc, #388]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8002062:	6a1b      	ldr	r3, [r3, #32]
 8002064:	4a60      	ldr	r2, [pc, #384]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8002066:	f043 0304 	orr.w	r3, r3, #4
 800206a:	6213      	str	r3, [r2, #32]
 800206c:	4b5e      	ldr	r3, [pc, #376]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 800206e:	6a1b      	ldr	r3, [r3, #32]
 8002070:	4a5d      	ldr	r2, [pc, #372]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8002072:	f043 0301 	orr.w	r3, r3, #1
 8002076:	6213      	str	r3, [r2, #32]
 8002078:	e00b      	b.n	8002092 <HAL_RCC_OscConfig+0x36e>
 800207a:	4b5b      	ldr	r3, [pc, #364]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 800207c:	6a1b      	ldr	r3, [r3, #32]
 800207e:	4a5a      	ldr	r2, [pc, #360]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8002080:	f023 0301 	bic.w	r3, r3, #1
 8002084:	6213      	str	r3, [r2, #32]
 8002086:	4b58      	ldr	r3, [pc, #352]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8002088:	6a1b      	ldr	r3, [r3, #32]
 800208a:	4a57      	ldr	r2, [pc, #348]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 800208c:	f023 0304 	bic.w	r3, r3, #4
 8002090:	6213      	str	r3, [r2, #32]
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	68db      	ldr	r3, [r3, #12]
 8002096:	2b00      	cmp	r3, #0
 8002098:	d015      	beq.n	80020c6 <HAL_RCC_OscConfig+0x3a2>
 800209a:	f7ff f97d 	bl	8001398 <HAL_GetTick>
 800209e:	6138      	str	r0, [r7, #16]
 80020a0:	e00a      	b.n	80020b8 <HAL_RCC_OscConfig+0x394>
 80020a2:	f7ff f979 	bl	8001398 <HAL_GetTick>
 80020a6:	4602      	mov	r2, r0
 80020a8:	693b      	ldr	r3, [r7, #16]
 80020aa:	1ad3      	subs	r3, r2, r3
 80020ac:	f241 3288 	movw	r2, #5000	@ 0x1388
 80020b0:	4293      	cmp	r3, r2
 80020b2:	d901      	bls.n	80020b8 <HAL_RCC_OscConfig+0x394>
 80020b4:	2303      	movs	r3, #3
 80020b6:	e0b1      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 80020b8:	4b4b      	ldr	r3, [pc, #300]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 80020ba:	6a1b      	ldr	r3, [r3, #32]
 80020bc:	f003 0302 	and.w	r3, r3, #2
 80020c0:	2b00      	cmp	r3, #0
 80020c2:	d0ee      	beq.n	80020a2 <HAL_RCC_OscConfig+0x37e>
 80020c4:	e014      	b.n	80020f0 <HAL_RCC_OscConfig+0x3cc>
 80020c6:	f7ff f967 	bl	8001398 <HAL_GetTick>
 80020ca:	6138      	str	r0, [r7, #16]
 80020cc:	e00a      	b.n	80020e4 <HAL_RCC_OscConfig+0x3c0>
 80020ce:	f7ff f963 	bl	8001398 <HAL_GetTick>
 80020d2:	4602      	mov	r2, r0
 80020d4:	693b      	ldr	r3, [r7, #16]
 80020d6:	1ad3      	subs	r3, r2, r3
 80020d8:	f241 3288 	movw	r2, #5000	@ 0x1388
 80020dc:	4293      	cmp	r3, r2
 80020de:	d901      	bls.n	80020e4 <HAL_RCC_OscConfig+0x3c0>
 80020e0:	2303      	movs	r3, #3
 80020e2:	e09b      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 80020e4:	4b40      	ldr	r3, [pc, #256]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 80020e6:	6a1b      	ldr	r3, [r3, #32]
 80020e8:	f003 0302 	and.w	r3, r3, #2
 80020ec:	2b00      	cmp	r3, #0
 80020ee:	d1ee      	bne.n	80020ce <HAL_RCC_OscConfig+0x3aa>
 80020f0:	7dfb      	ldrb	r3, [r7, #23]
 80020f2:	2b01      	cmp	r3, #1
 80020f4:	d105      	bne.n	8002102 <HAL_RCC_OscConfig+0x3de>
 80020f6:	4b3c      	ldr	r3, [pc, #240]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 80020f8:	69db      	ldr	r3, [r3, #28]
 80020fa:	4a3b      	ldr	r2, [pc, #236]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 80020fc:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002100:	61d3      	str	r3, [r2, #28]
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	69db      	ldr	r3, [r3, #28]
 8002106:	2b00      	cmp	r3, #0
 8002108:	f000 8087 	beq.w	800221a <HAL_RCC_OscConfig+0x4f6>
 800210c:	4b36      	ldr	r3, [pc, #216]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 800210e:	685b      	ldr	r3, [r3, #4]
 8002110:	f003 030c 	and.w	r3, r3, #12
 8002114:	2b08      	cmp	r3, #8
 8002116:	d061      	beq.n	80021dc <HAL_RCC_OscConfig+0x4b8>
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	69db      	ldr	r3, [r3, #28]
 800211c:	2b02      	cmp	r3, #2
 800211e:	d146      	bne.n	80021ae <HAL_RCC_OscConfig+0x48a>
 8002120:	4b33      	ldr	r3, [pc, #204]	@ (80021f0 <HAL_RCC_OscConfig+0x4cc>)
 8002122:	2200      	movs	r2, #0
 8002124:	601a      	str	r2, [r3, #0]
 8002126:	f7ff f937 	bl	8001398 <HAL_GetTick>
 800212a:	6138      	str	r0, [r7, #16]
 800212c:	e008      	b.n	8002140 <HAL_RCC_OscConfig+0x41c>
 800212e:	f7ff f933 	bl	8001398 <HAL_GetTick>
 8002132:	4602      	mov	r2, r0
 8002134:	693b      	ldr	r3, [r7, #16]
 8002136:	1ad3      	subs	r3, r2, r3
 8002138:	2b02      	cmp	r3, #2
 800213a:	d901      	bls.n	8002140 <HAL_RCC_OscConfig+0x41c>
 800213c:	2303      	movs	r3, #3
 800213e:	e06d      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 8002140:	4b29      	ldr	r3, [pc, #164]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8002142:	681b      	ldr	r3, [r3, #0]
 8002144:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002148:	2b00      	cmp	r3, #0
 800214a:	d1f0      	bne.n	800212e <HAL_RCC_OscConfig+0x40a>
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	6a1b      	ldr	r3, [r3, #32]
 8002150:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002154:	d108      	bne.n	8002168 <HAL_RCC_OscConfig+0x444>
 8002156:	4b24      	ldr	r3, [pc, #144]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8002158:	685b      	ldr	r3, [r3, #4]
 800215a:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	689b      	ldr	r3, [r3, #8]
 8002162:	4921      	ldr	r1, [pc, #132]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 8002164:	4313      	orrs	r3, r2
 8002166:	604b      	str	r3, [r1, #4]
 8002168:	4b1f      	ldr	r3, [pc, #124]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 800216a:	685b      	ldr	r3, [r3, #4]
 800216c:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	6a19      	ldr	r1, [r3, #32]
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002178:	430b      	orrs	r3, r1
 800217a:	491b      	ldr	r1, [pc, #108]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 800217c:	4313      	orrs	r3, r2
 800217e:	604b      	str	r3, [r1, #4]
 8002180:	4b1b      	ldr	r3, [pc, #108]	@ (80021f0 <HAL_RCC_OscConfig+0x4cc>)
 8002182:	2201      	movs	r2, #1
 8002184:	601a      	str	r2, [r3, #0]
 8002186:	f7ff f907 	bl	8001398 <HAL_GetTick>
 800218a:	6138      	str	r0, [r7, #16]
 800218c:	e008      	b.n	80021a0 <HAL_RCC_OscConfig+0x47c>
 800218e:	f7ff f903 	bl	8001398 <HAL_GetTick>
 8002192:	4602      	mov	r2, r0
 8002194:	693b      	ldr	r3, [r7, #16]
 8002196:	1ad3      	subs	r3, r2, r3
 8002198:	2b02      	cmp	r3, #2
 800219a:	d901      	bls.n	80021a0 <HAL_RCC_OscConfig+0x47c>
 800219c:	2303      	movs	r3, #3
 800219e:	e03d      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 80021a0:	4b11      	ldr	r3, [pc, #68]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 80021a2:	681b      	ldr	r3, [r3, #0]
 80021a4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80021a8:	2b00      	cmp	r3, #0
 80021aa:	d0f0      	beq.n	800218e <HAL_RCC_OscConfig+0x46a>
 80021ac:	e035      	b.n	800221a <HAL_RCC_OscConfig+0x4f6>
 80021ae:	4b10      	ldr	r3, [pc, #64]	@ (80021f0 <HAL_RCC_OscConfig+0x4cc>)
 80021b0:	2200      	movs	r2, #0
 80021b2:	601a      	str	r2, [r3, #0]
 80021b4:	f7ff f8f0 	bl	8001398 <HAL_GetTick>
 80021b8:	6138      	str	r0, [r7, #16]
 80021ba:	e008      	b.n	80021ce <HAL_RCC_OscConfig+0x4aa>
 80021bc:	f7ff f8ec 	bl	8001398 <HAL_GetTick>
 80021c0:	4602      	mov	r2, r0
 80021c2:	693b      	ldr	r3, [r7, #16]
 80021c4:	1ad3      	subs	r3, r2, r3
 80021c6:	2b02      	cmp	r3, #2
 80021c8:	d901      	bls.n	80021ce <HAL_RCC_OscConfig+0x4aa>
 80021ca:	2303      	movs	r3, #3
 80021cc:	e026      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 80021ce:	4b06      	ldr	r3, [pc, #24]	@ (80021e8 <HAL_RCC_OscConfig+0x4c4>)
 80021d0:	681b      	ldr	r3, [r3, #0]
 80021d2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80021d6:	2b00      	cmp	r3, #0
 80021d8:	d1f0      	bne.n	80021bc <HAL_RCC_OscConfig+0x498>
 80021da:	e01e      	b.n	800221a <HAL_RCC_OscConfig+0x4f6>
 80021dc:	687b      	ldr	r3, [r7, #4]
 80021de:	69db      	ldr	r3, [r3, #28]
 80021e0:	2b01      	cmp	r3, #1
 80021e2:	d107      	bne.n	80021f4 <HAL_RCC_OscConfig+0x4d0>
 80021e4:	2301      	movs	r3, #1
 80021e6:	e019      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 80021e8:	40021000 	.word	0x40021000
 80021ec:	40007000 	.word	0x40007000
 80021f0:	42420060 	.word	0x42420060
 80021f4:	4b0b      	ldr	r3, [pc, #44]	@ (8002224 <HAL_RCC_OscConfig+0x500>)
 80021f6:	685b      	ldr	r3, [r3, #4]
 80021f8:	60fb      	str	r3, [r7, #12]
 80021fa:	68fb      	ldr	r3, [r7, #12]
 80021fc:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	6a1b      	ldr	r3, [r3, #32]
 8002204:	429a      	cmp	r2, r3
 8002206:	d106      	bne.n	8002216 <HAL_RCC_OscConfig+0x4f2>
 8002208:	68fb      	ldr	r3, [r7, #12]
 800220a:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 800220e:	687b      	ldr	r3, [r7, #4]
 8002210:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002212:	429a      	cmp	r2, r3
 8002214:	d001      	beq.n	800221a <HAL_RCC_OscConfig+0x4f6>
 8002216:	2301      	movs	r3, #1
 8002218:	e000      	b.n	800221c <HAL_RCC_OscConfig+0x4f8>
 800221a:	2300      	movs	r3, #0
 800221c:	4618      	mov	r0, r3
 800221e:	3718      	adds	r7, #24
 8002220:	46bd      	mov	sp, r7
 8002222:	bd80      	pop	{r7, pc}
 8002224:	40021000 	.word	0x40021000

08002228 <HAL_RCC_ClockConfig>:
 8002228:	b580      	push	{r7, lr}
 800222a:	b084      	sub	sp, #16
 800222c:	af00      	add	r7, sp, #0
 800222e:	6078      	str	r0, [r7, #4]
 8002230:	6039      	str	r1, [r7, #0]
 8002232:	687b      	ldr	r3, [r7, #4]
 8002234:	2b00      	cmp	r3, #0
 8002236:	d101      	bne.n	800223c <HAL_RCC_ClockConfig+0x14>
 8002238:	2301      	movs	r3, #1
 800223a:	e0d0      	b.n	80023de <HAL_RCC_ClockConfig+0x1b6>
 800223c:	4b6a      	ldr	r3, [pc, #424]	@ (80023e8 <HAL_RCC_ClockConfig+0x1c0>)
 800223e:	681b      	ldr	r3, [r3, #0]
 8002240:	f003 0307 	and.w	r3, r3, #7
 8002244:	683a      	ldr	r2, [r7, #0]
 8002246:	429a      	cmp	r2, r3
 8002248:	d910      	bls.n	800226c <HAL_RCC_ClockConfig+0x44>
 800224a:	4b67      	ldr	r3, [pc, #412]	@ (80023e8 <HAL_RCC_ClockConfig+0x1c0>)
 800224c:	681b      	ldr	r3, [r3, #0]
 800224e:	f023 0207 	bic.w	r2, r3, #7
 8002252:	4965      	ldr	r1, [pc, #404]	@ (80023e8 <HAL_RCC_ClockConfig+0x1c0>)
 8002254:	683b      	ldr	r3, [r7, #0]
 8002256:	4313      	orrs	r3, r2
 8002258:	600b      	str	r3, [r1, #0]
 800225a:	4b63      	ldr	r3, [pc, #396]	@ (80023e8 <HAL_RCC_ClockConfig+0x1c0>)
 800225c:	681b      	ldr	r3, [r3, #0]
 800225e:	f003 0307 	and.w	r3, r3, #7
 8002262:	683a      	ldr	r2, [r7, #0]
 8002264:	429a      	cmp	r2, r3
 8002266:	d001      	beq.n	800226c <HAL_RCC_ClockConfig+0x44>
 8002268:	2301      	movs	r3, #1
 800226a:	e0b8      	b.n	80023de <HAL_RCC_ClockConfig+0x1b6>
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	681b      	ldr	r3, [r3, #0]
 8002270:	f003 0302 	and.w	r3, r3, #2
 8002274:	2b00      	cmp	r3, #0
 8002276:	d020      	beq.n	80022ba <HAL_RCC_ClockConfig+0x92>
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	681b      	ldr	r3, [r3, #0]
 800227c:	f003 0304 	and.w	r3, r3, #4
 8002280:	2b00      	cmp	r3, #0
 8002282:	d005      	beq.n	8002290 <HAL_RCC_ClockConfig+0x68>
 8002284:	4b59      	ldr	r3, [pc, #356]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 8002286:	685b      	ldr	r3, [r3, #4]
 8002288:	4a58      	ldr	r2, [pc, #352]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 800228a:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 800228e:	6053      	str	r3, [r2, #4]
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	681b      	ldr	r3, [r3, #0]
 8002294:	f003 0308 	and.w	r3, r3, #8
 8002298:	2b00      	cmp	r3, #0
 800229a:	d005      	beq.n	80022a8 <HAL_RCC_ClockConfig+0x80>
 800229c:	4b53      	ldr	r3, [pc, #332]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 800229e:	685b      	ldr	r3, [r3, #4]
 80022a0:	4a52      	ldr	r2, [pc, #328]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 80022a2:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 80022a6:	6053      	str	r3, [r2, #4]
 80022a8:	4b50      	ldr	r3, [pc, #320]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 80022aa:	685b      	ldr	r3, [r3, #4]
 80022ac:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80022b0:	687b      	ldr	r3, [r7, #4]
 80022b2:	689b      	ldr	r3, [r3, #8]
 80022b4:	494d      	ldr	r1, [pc, #308]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 80022b6:	4313      	orrs	r3, r2
 80022b8:	604b      	str	r3, [r1, #4]
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	681b      	ldr	r3, [r3, #0]
 80022be:	f003 0301 	and.w	r3, r3, #1
 80022c2:	2b00      	cmp	r3, #0
 80022c4:	d040      	beq.n	8002348 <HAL_RCC_ClockConfig+0x120>
 80022c6:	687b      	ldr	r3, [r7, #4]
 80022c8:	685b      	ldr	r3, [r3, #4]
 80022ca:	2b01      	cmp	r3, #1
 80022cc:	d107      	bne.n	80022de <HAL_RCC_ClockConfig+0xb6>
 80022ce:	4b47      	ldr	r3, [pc, #284]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 80022d0:	681b      	ldr	r3, [r3, #0]
 80022d2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80022d6:	2b00      	cmp	r3, #0
 80022d8:	d115      	bne.n	8002306 <HAL_RCC_ClockConfig+0xde>
 80022da:	2301      	movs	r3, #1
 80022dc:	e07f      	b.n	80023de <HAL_RCC_ClockConfig+0x1b6>
 80022de:	687b      	ldr	r3, [r7, #4]
 80022e0:	685b      	ldr	r3, [r3, #4]
 80022e2:	2b02      	cmp	r3, #2
 80022e4:	d107      	bne.n	80022f6 <HAL_RCC_ClockConfig+0xce>
 80022e6:	4b41      	ldr	r3, [pc, #260]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 80022e8:	681b      	ldr	r3, [r3, #0]
 80022ea:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80022ee:	2b00      	cmp	r3, #0
 80022f0:	d109      	bne.n	8002306 <HAL_RCC_ClockConfig+0xde>
 80022f2:	2301      	movs	r3, #1
 80022f4:	e073      	b.n	80023de <HAL_RCC_ClockConfig+0x1b6>
 80022f6:	4b3d      	ldr	r3, [pc, #244]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 80022f8:	681b      	ldr	r3, [r3, #0]
 80022fa:	f003 0302 	and.w	r3, r3, #2
 80022fe:	2b00      	cmp	r3, #0
 8002300:	d101      	bne.n	8002306 <HAL_RCC_ClockConfig+0xde>
 8002302:	2301      	movs	r3, #1
 8002304:	e06b      	b.n	80023de <HAL_RCC_ClockConfig+0x1b6>
 8002306:	4b39      	ldr	r3, [pc, #228]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 8002308:	685b      	ldr	r3, [r3, #4]
 800230a:	f023 0203 	bic.w	r2, r3, #3
 800230e:	687b      	ldr	r3, [r7, #4]
 8002310:	685b      	ldr	r3, [r3, #4]
 8002312:	4936      	ldr	r1, [pc, #216]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 8002314:	4313      	orrs	r3, r2
 8002316:	604b      	str	r3, [r1, #4]
 8002318:	f7ff f83e 	bl	8001398 <HAL_GetTick>
 800231c:	60f8      	str	r0, [r7, #12]
 800231e:	e00a      	b.n	8002336 <HAL_RCC_ClockConfig+0x10e>
 8002320:	f7ff f83a 	bl	8001398 <HAL_GetTick>
 8002324:	4602      	mov	r2, r0
 8002326:	68fb      	ldr	r3, [r7, #12]
 8002328:	1ad3      	subs	r3, r2, r3
 800232a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800232e:	4293      	cmp	r3, r2
 8002330:	d901      	bls.n	8002336 <HAL_RCC_ClockConfig+0x10e>
 8002332:	2303      	movs	r3, #3
 8002334:	e053      	b.n	80023de <HAL_RCC_ClockConfig+0x1b6>
 8002336:	4b2d      	ldr	r3, [pc, #180]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 8002338:	685b      	ldr	r3, [r3, #4]
 800233a:	f003 020c 	and.w	r2, r3, #12
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	685b      	ldr	r3, [r3, #4]
 8002342:	009b      	lsls	r3, r3, #2
 8002344:	429a      	cmp	r2, r3
 8002346:	d1eb      	bne.n	8002320 <HAL_RCC_ClockConfig+0xf8>
 8002348:	4b27      	ldr	r3, [pc, #156]	@ (80023e8 <HAL_RCC_ClockConfig+0x1c0>)
 800234a:	681b      	ldr	r3, [r3, #0]
 800234c:	f003 0307 	and.w	r3, r3, #7
 8002350:	683a      	ldr	r2, [r7, #0]
 8002352:	429a      	cmp	r2, r3
 8002354:	d210      	bcs.n	8002378 <HAL_RCC_ClockConfig+0x150>
 8002356:	4b24      	ldr	r3, [pc, #144]	@ (80023e8 <HAL_RCC_ClockConfig+0x1c0>)
 8002358:	681b      	ldr	r3, [r3, #0]
 800235a:	f023 0207 	bic.w	r2, r3, #7
 800235e:	4922      	ldr	r1, [pc, #136]	@ (80023e8 <HAL_RCC_ClockConfig+0x1c0>)
 8002360:	683b      	ldr	r3, [r7, #0]
 8002362:	4313      	orrs	r3, r2
 8002364:	600b      	str	r3, [r1, #0]
 8002366:	4b20      	ldr	r3, [pc, #128]	@ (80023e8 <HAL_RCC_ClockConfig+0x1c0>)
 8002368:	681b      	ldr	r3, [r3, #0]
 800236a:	f003 0307 	and.w	r3, r3, #7
 800236e:	683a      	ldr	r2, [r7, #0]
 8002370:	429a      	cmp	r2, r3
 8002372:	d001      	beq.n	8002378 <HAL_RCC_ClockConfig+0x150>
 8002374:	2301      	movs	r3, #1
 8002376:	e032      	b.n	80023de <HAL_RCC_ClockConfig+0x1b6>
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	681b      	ldr	r3, [r3, #0]
 800237c:	f003 0304 	and.w	r3, r3, #4
 8002380:	2b00      	cmp	r3, #0
 8002382:	d008      	beq.n	8002396 <HAL_RCC_ClockConfig+0x16e>
 8002384:	4b19      	ldr	r3, [pc, #100]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 8002386:	685b      	ldr	r3, [r3, #4]
 8002388:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	68db      	ldr	r3, [r3, #12]
 8002390:	4916      	ldr	r1, [pc, #88]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 8002392:	4313      	orrs	r3, r2
 8002394:	604b      	str	r3, [r1, #4]
 8002396:	687b      	ldr	r3, [r7, #4]
 8002398:	681b      	ldr	r3, [r3, #0]
 800239a:	f003 0308 	and.w	r3, r3, #8
 800239e:	2b00      	cmp	r3, #0
 80023a0:	d009      	beq.n	80023b6 <HAL_RCC_ClockConfig+0x18e>
 80023a2:	4b12      	ldr	r3, [pc, #72]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 80023a4:	685b      	ldr	r3, [r3, #4]
 80023a6:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 80023aa:	687b      	ldr	r3, [r7, #4]
 80023ac:	691b      	ldr	r3, [r3, #16]
 80023ae:	00db      	lsls	r3, r3, #3
 80023b0:	490e      	ldr	r1, [pc, #56]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 80023b2:	4313      	orrs	r3, r2
 80023b4:	604b      	str	r3, [r1, #4]
 80023b6:	f000 f821 	bl	80023fc <HAL_RCC_GetSysClockFreq>
 80023ba:	4602      	mov	r2, r0
 80023bc:	4b0b      	ldr	r3, [pc, #44]	@ (80023ec <HAL_RCC_ClockConfig+0x1c4>)
 80023be:	685b      	ldr	r3, [r3, #4]
 80023c0:	091b      	lsrs	r3, r3, #4
 80023c2:	f003 030f 	and.w	r3, r3, #15
 80023c6:	490a      	ldr	r1, [pc, #40]	@ (80023f0 <HAL_RCC_ClockConfig+0x1c8>)
 80023c8:	5ccb      	ldrb	r3, [r1, r3]
 80023ca:	fa22 f303 	lsr.w	r3, r2, r3
 80023ce:	4a09      	ldr	r2, [pc, #36]	@ (80023f4 <HAL_RCC_ClockConfig+0x1cc>)
 80023d0:	6013      	str	r3, [r2, #0]
 80023d2:	4b09      	ldr	r3, [pc, #36]	@ (80023f8 <HAL_RCC_ClockConfig+0x1d0>)
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	4618      	mov	r0, r3
 80023d8:	f7fe ff9c 	bl	8001314 <HAL_InitTick>
 80023dc:	2300      	movs	r3, #0
 80023de:	4618      	mov	r0, r3
 80023e0:	3710      	adds	r7, #16
 80023e2:	46bd      	mov	sp, r7
 80023e4:	bd80      	pop	{r7, pc}
 80023e6:	bf00      	nop
 80023e8:	40022000 	.word	0x40022000
 80023ec:	40021000 	.word	0x40021000
 80023f0:	08002ce0 	.word	0x08002ce0
 80023f4:	2000000c 	.word	0x2000000c
 80023f8:	20000010 	.word	0x20000010

080023fc <HAL_RCC_GetSysClockFreq>:
 80023fc:	b480      	push	{r7}
 80023fe:	b087      	sub	sp, #28
 8002400:	af00      	add	r7, sp, #0
 8002402:	2300      	movs	r3, #0
 8002404:	60fb      	str	r3, [r7, #12]
 8002406:	2300      	movs	r3, #0
 8002408:	60bb      	str	r3, [r7, #8]
 800240a:	2300      	movs	r3, #0
 800240c:	617b      	str	r3, [r7, #20]
 800240e:	2300      	movs	r3, #0
 8002410:	607b      	str	r3, [r7, #4]
 8002412:	2300      	movs	r3, #0
 8002414:	613b      	str	r3, [r7, #16]
 8002416:	4b1e      	ldr	r3, [pc, #120]	@ (8002490 <HAL_RCC_GetSysClockFreq+0x94>)
 8002418:	685b      	ldr	r3, [r3, #4]
 800241a:	60fb      	str	r3, [r7, #12]
 800241c:	68fb      	ldr	r3, [r7, #12]
 800241e:	f003 030c 	and.w	r3, r3, #12
 8002422:	2b04      	cmp	r3, #4
 8002424:	d002      	beq.n	800242c <HAL_RCC_GetSysClockFreq+0x30>
 8002426:	2b08      	cmp	r3, #8
 8002428:	d003      	beq.n	8002432 <HAL_RCC_GetSysClockFreq+0x36>
 800242a:	e027      	b.n	800247c <HAL_RCC_GetSysClockFreq+0x80>
 800242c:	4b19      	ldr	r3, [pc, #100]	@ (8002494 <HAL_RCC_GetSysClockFreq+0x98>)
 800242e:	613b      	str	r3, [r7, #16]
 8002430:	e027      	b.n	8002482 <HAL_RCC_GetSysClockFreq+0x86>
 8002432:	68fb      	ldr	r3, [r7, #12]
 8002434:	0c9b      	lsrs	r3, r3, #18
 8002436:	f003 030f 	and.w	r3, r3, #15
 800243a:	4a17      	ldr	r2, [pc, #92]	@ (8002498 <HAL_RCC_GetSysClockFreq+0x9c>)
 800243c:	5cd3      	ldrb	r3, [r2, r3]
 800243e:	607b      	str	r3, [r7, #4]
 8002440:	68fb      	ldr	r3, [r7, #12]
 8002442:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002446:	2b00      	cmp	r3, #0
 8002448:	d010      	beq.n	800246c <HAL_RCC_GetSysClockFreq+0x70>
 800244a:	4b11      	ldr	r3, [pc, #68]	@ (8002490 <HAL_RCC_GetSysClockFreq+0x94>)
 800244c:	685b      	ldr	r3, [r3, #4]
 800244e:	0c5b      	lsrs	r3, r3, #17
 8002450:	f003 0301 	and.w	r3, r3, #1
 8002454:	4a11      	ldr	r2, [pc, #68]	@ (800249c <HAL_RCC_GetSysClockFreq+0xa0>)
 8002456:	5cd3      	ldrb	r3, [r2, r3]
 8002458:	60bb      	str	r3, [r7, #8]
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	4a0d      	ldr	r2, [pc, #52]	@ (8002494 <HAL_RCC_GetSysClockFreq+0x98>)
 800245e:	fb03 f202 	mul.w	r2, r3, r2
 8002462:	68bb      	ldr	r3, [r7, #8]
 8002464:	fbb2 f3f3 	udiv	r3, r2, r3
 8002468:	617b      	str	r3, [r7, #20]
 800246a:	e004      	b.n	8002476 <HAL_RCC_GetSysClockFreq+0x7a>
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	4a0c      	ldr	r2, [pc, #48]	@ (80024a0 <HAL_RCC_GetSysClockFreq+0xa4>)
 8002470:	fb02 f303 	mul.w	r3, r2, r3
 8002474:	617b      	str	r3, [r7, #20]
 8002476:	697b      	ldr	r3, [r7, #20]
 8002478:	613b      	str	r3, [r7, #16]
 800247a:	e002      	b.n	8002482 <HAL_RCC_GetSysClockFreq+0x86>
 800247c:	4b05      	ldr	r3, [pc, #20]	@ (8002494 <HAL_RCC_GetSysClockFreq+0x98>)
 800247e:	613b      	str	r3, [r7, #16]
 8002480:	bf00      	nop
 8002482:	693b      	ldr	r3, [r7, #16]
 8002484:	4618      	mov	r0, r3
 8002486:	371c      	adds	r7, #28
 8002488:	46bd      	mov	sp, r7
 800248a:	bc80      	pop	{r7}
 800248c:	4770      	bx	lr
 800248e:	bf00      	nop
 8002490:	40021000 	.word	0x40021000
 8002494:	007a1200 	.word	0x007a1200
 8002498:	08002cf0 	.word	0x08002cf0
 800249c:	08002d00 	.word	0x08002d00
 80024a0:	003d0900 	.word	0x003d0900

080024a4 <RCC_Delay>:
 80024a4:	b480      	push	{r7}
 80024a6:	b085      	sub	sp, #20
 80024a8:	af00      	add	r7, sp, #0
 80024aa:	6078      	str	r0, [r7, #4]
 80024ac:	4b0a      	ldr	r3, [pc, #40]	@ (80024d8 <RCC_Delay+0x34>)
 80024ae:	681b      	ldr	r3, [r3, #0]
 80024b0:	4a0a      	ldr	r2, [pc, #40]	@ (80024dc <RCC_Delay+0x38>)
 80024b2:	fba2 2303 	umull	r2, r3, r2, r3
 80024b6:	0a5b      	lsrs	r3, r3, #9
 80024b8:	687a      	ldr	r2, [r7, #4]
 80024ba:	fb02 f303 	mul.w	r3, r2, r3
 80024be:	60fb      	str	r3, [r7, #12]
 80024c0:	bf00      	nop
 80024c2:	68fb      	ldr	r3, [r7, #12]
 80024c4:	1e5a      	subs	r2, r3, #1
 80024c6:	60fa      	str	r2, [r7, #12]
 80024c8:	2b00      	cmp	r3, #0
 80024ca:	d1f9      	bne.n	80024c0 <RCC_Delay+0x1c>
 80024cc:	bf00      	nop
 80024ce:	bf00      	nop
 80024d0:	3714      	adds	r7, #20
 80024d2:	46bd      	mov	sp, r7
 80024d4:	bc80      	pop	{r7}
 80024d6:	4770      	bx	lr
 80024d8:	2000000c 	.word	0x2000000c
 80024dc:	10624dd3 	.word	0x10624dd3

080024e0 <HAL_TIM_Base_Init>:
 80024e0:	b580      	push	{r7, lr}
 80024e2:	b082      	sub	sp, #8
 80024e4:	af00      	add	r7, sp, #0
 80024e6:	6078      	str	r0, [r7, #4]
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	2b00      	cmp	r3, #0
 80024ec:	d101      	bne.n	80024f2 <HAL_TIM_Base_Init+0x12>
 80024ee:	2301      	movs	r3, #1
 80024f0:	e041      	b.n	8002576 <HAL_TIM_Base_Init+0x96>
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80024f8:	b2db      	uxtb	r3, r3
 80024fa:	2b00      	cmp	r3, #0
 80024fc:	d106      	bne.n	800250c <HAL_TIM_Base_Init+0x2c>
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	2200      	movs	r2, #0
 8002502:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002506:	6878      	ldr	r0, [r7, #4]
 8002508:	f7fe fe7a 	bl	8001200 <HAL_TIM_Base_MspInit>
 800250c:	687b      	ldr	r3, [r7, #4]
 800250e:	2202      	movs	r2, #2
 8002510:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	681a      	ldr	r2, [r3, #0]
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	3304      	adds	r3, #4
 800251c:	4619      	mov	r1, r3
 800251e:	4610      	mov	r0, r2
 8002520:	f000 f936 	bl	8002790 <TIM_Base_SetConfig>
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	2201      	movs	r2, #1
 8002528:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800252c:	687b      	ldr	r3, [r7, #4]
 800252e:	2201      	movs	r2, #1
 8002530:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	2201      	movs	r2, #1
 8002538:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	2201      	movs	r2, #1
 8002540:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	2201      	movs	r2, #1
 8002548:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	2201      	movs	r2, #1
 8002550:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	2201      	movs	r2, #1
 8002558:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	2201      	movs	r2, #1
 8002560:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	2201      	movs	r2, #1
 8002568:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800256c:	687b      	ldr	r3, [r7, #4]
 800256e:	2201      	movs	r2, #1
 8002570:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002574:	2300      	movs	r3, #0
 8002576:	4618      	mov	r0, r3
 8002578:	3708      	adds	r7, #8
 800257a:	46bd      	mov	sp, r7
 800257c:	bd80      	pop	{r7, pc}

0800257e <HAL_TIM_ConfigClockSource>:
 800257e:	b580      	push	{r7, lr}
 8002580:	b084      	sub	sp, #16
 8002582:	af00      	add	r7, sp, #0
 8002584:	6078      	str	r0, [r7, #4]
 8002586:	6039      	str	r1, [r7, #0]
 8002588:	2300      	movs	r3, #0
 800258a:	73fb      	strb	r3, [r7, #15]
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002592:	2b01      	cmp	r3, #1
 8002594:	d101      	bne.n	800259a <HAL_TIM_ConfigClockSource+0x1c>
 8002596:	2302      	movs	r3, #2
 8002598:	e0b4      	b.n	8002704 <HAL_TIM_ConfigClockSource+0x186>
 800259a:	687b      	ldr	r3, [r7, #4]
 800259c:	2201      	movs	r2, #1
 800259e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80025a2:	687b      	ldr	r3, [r7, #4]
 80025a4:	2202      	movs	r2, #2
 80025a6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	681b      	ldr	r3, [r3, #0]
 80025ae:	689b      	ldr	r3, [r3, #8]
 80025b0:	60bb      	str	r3, [r7, #8]
 80025b2:	68bb      	ldr	r3, [r7, #8]
 80025b4:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 80025b8:	60bb      	str	r3, [r7, #8]
 80025ba:	68bb      	ldr	r3, [r7, #8]
 80025bc:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80025c0:	60bb      	str	r3, [r7, #8]
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	68ba      	ldr	r2, [r7, #8]
 80025c8:	609a      	str	r2, [r3, #8]
 80025ca:	683b      	ldr	r3, [r7, #0]
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80025d2:	d03e      	beq.n	8002652 <HAL_TIM_ConfigClockSource+0xd4>
 80025d4:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80025d8:	f200 8087 	bhi.w	80026ea <HAL_TIM_ConfigClockSource+0x16c>
 80025dc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80025e0:	f000 8086 	beq.w	80026f0 <HAL_TIM_ConfigClockSource+0x172>
 80025e4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80025e8:	d87f      	bhi.n	80026ea <HAL_TIM_ConfigClockSource+0x16c>
 80025ea:	2b70      	cmp	r3, #112	@ 0x70
 80025ec:	d01a      	beq.n	8002624 <HAL_TIM_ConfigClockSource+0xa6>
 80025ee:	2b70      	cmp	r3, #112	@ 0x70
 80025f0:	d87b      	bhi.n	80026ea <HAL_TIM_ConfigClockSource+0x16c>
 80025f2:	2b60      	cmp	r3, #96	@ 0x60
 80025f4:	d050      	beq.n	8002698 <HAL_TIM_ConfigClockSource+0x11a>
 80025f6:	2b60      	cmp	r3, #96	@ 0x60
 80025f8:	d877      	bhi.n	80026ea <HAL_TIM_ConfigClockSource+0x16c>
 80025fa:	2b50      	cmp	r3, #80	@ 0x50
 80025fc:	d03c      	beq.n	8002678 <HAL_TIM_ConfigClockSource+0xfa>
 80025fe:	2b50      	cmp	r3, #80	@ 0x50
 8002600:	d873      	bhi.n	80026ea <HAL_TIM_ConfigClockSource+0x16c>
 8002602:	2b40      	cmp	r3, #64	@ 0x40
 8002604:	d058      	beq.n	80026b8 <HAL_TIM_ConfigClockSource+0x13a>
 8002606:	2b40      	cmp	r3, #64	@ 0x40
 8002608:	d86f      	bhi.n	80026ea <HAL_TIM_ConfigClockSource+0x16c>
 800260a:	2b30      	cmp	r3, #48	@ 0x30
 800260c:	d064      	beq.n	80026d8 <HAL_TIM_ConfigClockSource+0x15a>
 800260e:	2b30      	cmp	r3, #48	@ 0x30
 8002610:	d86b      	bhi.n	80026ea <HAL_TIM_ConfigClockSource+0x16c>
 8002612:	2b20      	cmp	r3, #32
 8002614:	d060      	beq.n	80026d8 <HAL_TIM_ConfigClockSource+0x15a>
 8002616:	2b20      	cmp	r3, #32
 8002618:	d867      	bhi.n	80026ea <HAL_TIM_ConfigClockSource+0x16c>
 800261a:	2b00      	cmp	r3, #0
 800261c:	d05c      	beq.n	80026d8 <HAL_TIM_ConfigClockSource+0x15a>
 800261e:	2b10      	cmp	r3, #16
 8002620:	d05a      	beq.n	80026d8 <HAL_TIM_ConfigClockSource+0x15a>
 8002622:	e062      	b.n	80026ea <HAL_TIM_ConfigClockSource+0x16c>
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	6818      	ldr	r0, [r3, #0]
 8002628:	683b      	ldr	r3, [r7, #0]
 800262a:	6899      	ldr	r1, [r3, #8]
 800262c:	683b      	ldr	r3, [r7, #0]
 800262e:	685a      	ldr	r2, [r3, #4]
 8002630:	683b      	ldr	r3, [r7, #0]
 8002632:	68db      	ldr	r3, [r3, #12]
 8002634:	f000 fa22 	bl	8002a7c <TIM_ETR_SetConfig>
 8002638:	687b      	ldr	r3, [r7, #4]
 800263a:	681b      	ldr	r3, [r3, #0]
 800263c:	689b      	ldr	r3, [r3, #8]
 800263e:	60bb      	str	r3, [r7, #8]
 8002640:	68bb      	ldr	r3, [r7, #8]
 8002642:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8002646:	60bb      	str	r3, [r7, #8]
 8002648:	687b      	ldr	r3, [r7, #4]
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	68ba      	ldr	r2, [r7, #8]
 800264e:	609a      	str	r2, [r3, #8]
 8002650:	e04f      	b.n	80026f2 <HAL_TIM_ConfigClockSource+0x174>
 8002652:	687b      	ldr	r3, [r7, #4]
 8002654:	6818      	ldr	r0, [r3, #0]
 8002656:	683b      	ldr	r3, [r7, #0]
 8002658:	6899      	ldr	r1, [r3, #8]
 800265a:	683b      	ldr	r3, [r7, #0]
 800265c:	685a      	ldr	r2, [r3, #4]
 800265e:	683b      	ldr	r3, [r7, #0]
 8002660:	68db      	ldr	r3, [r3, #12]
 8002662:	f000 fa0b 	bl	8002a7c <TIM_ETR_SetConfig>
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	681b      	ldr	r3, [r3, #0]
 800266a:	689a      	ldr	r2, [r3, #8]
 800266c:	687b      	ldr	r3, [r7, #4]
 800266e:	681b      	ldr	r3, [r3, #0]
 8002670:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8002674:	609a      	str	r2, [r3, #8]
 8002676:	e03c      	b.n	80026f2 <HAL_TIM_ConfigClockSource+0x174>
 8002678:	687b      	ldr	r3, [r7, #4]
 800267a:	6818      	ldr	r0, [r3, #0]
 800267c:	683b      	ldr	r3, [r7, #0]
 800267e:	6859      	ldr	r1, [r3, #4]
 8002680:	683b      	ldr	r3, [r7, #0]
 8002682:	68db      	ldr	r3, [r3, #12]
 8002684:	461a      	mov	r2, r3
 8002686:	f000 f982 	bl	800298e <TIM_TI1_ConfigInputStage>
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	681b      	ldr	r3, [r3, #0]
 800268e:	2150      	movs	r1, #80	@ 0x50
 8002690:	4618      	mov	r0, r3
 8002692:	f000 f9d9 	bl	8002a48 <TIM_ITRx_SetConfig>
 8002696:	e02c      	b.n	80026f2 <HAL_TIM_ConfigClockSource+0x174>
 8002698:	687b      	ldr	r3, [r7, #4]
 800269a:	6818      	ldr	r0, [r3, #0]
 800269c:	683b      	ldr	r3, [r7, #0]
 800269e:	6859      	ldr	r1, [r3, #4]
 80026a0:	683b      	ldr	r3, [r7, #0]
 80026a2:	68db      	ldr	r3, [r3, #12]
 80026a4:	461a      	mov	r2, r3
 80026a6:	f000 f9a0 	bl	80029ea <TIM_TI2_ConfigInputStage>
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	681b      	ldr	r3, [r3, #0]
 80026ae:	2160      	movs	r1, #96	@ 0x60
 80026b0:	4618      	mov	r0, r3
 80026b2:	f000 f9c9 	bl	8002a48 <TIM_ITRx_SetConfig>
 80026b6:	e01c      	b.n	80026f2 <HAL_TIM_ConfigClockSource+0x174>
 80026b8:	687b      	ldr	r3, [r7, #4]
 80026ba:	6818      	ldr	r0, [r3, #0]
 80026bc:	683b      	ldr	r3, [r7, #0]
 80026be:	6859      	ldr	r1, [r3, #4]
 80026c0:	683b      	ldr	r3, [r7, #0]
 80026c2:	68db      	ldr	r3, [r3, #12]
 80026c4:	461a      	mov	r2, r3
 80026c6:	f000 f962 	bl	800298e <TIM_TI1_ConfigInputStage>
 80026ca:	687b      	ldr	r3, [r7, #4]
 80026cc:	681b      	ldr	r3, [r3, #0]
 80026ce:	2140      	movs	r1, #64	@ 0x40
 80026d0:	4618      	mov	r0, r3
 80026d2:	f000 f9b9 	bl	8002a48 <TIM_ITRx_SetConfig>
 80026d6:	e00c      	b.n	80026f2 <HAL_TIM_ConfigClockSource+0x174>
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	681a      	ldr	r2, [r3, #0]
 80026dc:	683b      	ldr	r3, [r7, #0]
 80026de:	681b      	ldr	r3, [r3, #0]
 80026e0:	4619      	mov	r1, r3
 80026e2:	4610      	mov	r0, r2
 80026e4:	f000 f9b0 	bl	8002a48 <TIM_ITRx_SetConfig>
 80026e8:	e003      	b.n	80026f2 <HAL_TIM_ConfigClockSource+0x174>
 80026ea:	2301      	movs	r3, #1
 80026ec:	73fb      	strb	r3, [r7, #15]
 80026ee:	e000      	b.n	80026f2 <HAL_TIM_ConfigClockSource+0x174>
 80026f0:	bf00      	nop
 80026f2:	687b      	ldr	r3, [r7, #4]
 80026f4:	2201      	movs	r2, #1
 80026f6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80026fa:	687b      	ldr	r3, [r7, #4]
 80026fc:	2200      	movs	r2, #0
 80026fe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002702:	7bfb      	ldrb	r3, [r7, #15]
 8002704:	4618      	mov	r0, r3
 8002706:	3710      	adds	r7, #16
 8002708:	46bd      	mov	sp, r7
 800270a:	bd80      	pop	{r7, pc}

0800270c <HAL_TIM_SlaveConfigSynchro>:
 800270c:	b580      	push	{r7, lr}
 800270e:	b082      	sub	sp, #8
 8002710:	af00      	add	r7, sp, #0
 8002712:	6078      	str	r0, [r7, #4]
 8002714:	6039      	str	r1, [r7, #0]
 8002716:	687b      	ldr	r3, [r7, #4]
 8002718:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800271c:	2b01      	cmp	r3, #1
 800271e:	d101      	bne.n	8002724 <HAL_TIM_SlaveConfigSynchro+0x18>
 8002720:	2302      	movs	r3, #2
 8002722:	e031      	b.n	8002788 <HAL_TIM_SlaveConfigSynchro+0x7c>
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	2201      	movs	r2, #1
 8002728:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	2202      	movs	r2, #2
 8002730:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002734:	6839      	ldr	r1, [r7, #0]
 8002736:	6878      	ldr	r0, [r7, #4]
 8002738:	f000 f898 	bl	800286c <TIM_SlaveTimer_SetConfig>
 800273c:	4603      	mov	r3, r0
 800273e:	2b00      	cmp	r3, #0
 8002740:	d009      	beq.n	8002756 <HAL_TIM_SlaveConfigSynchro+0x4a>
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	2201      	movs	r2, #1
 8002746:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800274a:	687b      	ldr	r3, [r7, #4]
 800274c:	2200      	movs	r2, #0
 800274e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002752:	2301      	movs	r3, #1
 8002754:	e018      	b.n	8002788 <HAL_TIM_SlaveConfigSynchro+0x7c>
 8002756:	687b      	ldr	r3, [r7, #4]
 8002758:	681b      	ldr	r3, [r3, #0]
 800275a:	68da      	ldr	r2, [r3, #12]
 800275c:	687b      	ldr	r3, [r7, #4]
 800275e:	681b      	ldr	r3, [r3, #0]
 8002760:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002764:	60da      	str	r2, [r3, #12]
 8002766:	687b      	ldr	r3, [r7, #4]
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	68da      	ldr	r2, [r3, #12]
 800276c:	687b      	ldr	r3, [r7, #4]
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8002774:	60da      	str	r2, [r3, #12]
 8002776:	687b      	ldr	r3, [r7, #4]
 8002778:	2201      	movs	r2, #1
 800277a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800277e:	687b      	ldr	r3, [r7, #4]
 8002780:	2200      	movs	r2, #0
 8002782:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002786:	2300      	movs	r3, #0
 8002788:	4618      	mov	r0, r3
 800278a:	3708      	adds	r7, #8
 800278c:	46bd      	mov	sp, r7
 800278e:	bd80      	pop	{r7, pc}

08002790 <TIM_Base_SetConfig>:
 8002790:	b480      	push	{r7}
 8002792:	b085      	sub	sp, #20
 8002794:	af00      	add	r7, sp, #0
 8002796:	6078      	str	r0, [r7, #4]
 8002798:	6039      	str	r1, [r7, #0]
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	681b      	ldr	r3, [r3, #0]
 800279e:	60fb      	str	r3, [r7, #12]
 80027a0:	687b      	ldr	r3, [r7, #4]
 80027a2:	4a2f      	ldr	r2, [pc, #188]	@ (8002860 <TIM_Base_SetConfig+0xd0>)
 80027a4:	4293      	cmp	r3, r2
 80027a6:	d00b      	beq.n	80027c0 <TIM_Base_SetConfig+0x30>
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80027ae:	d007      	beq.n	80027c0 <TIM_Base_SetConfig+0x30>
 80027b0:	687b      	ldr	r3, [r7, #4]
 80027b2:	4a2c      	ldr	r2, [pc, #176]	@ (8002864 <TIM_Base_SetConfig+0xd4>)
 80027b4:	4293      	cmp	r3, r2
 80027b6:	d003      	beq.n	80027c0 <TIM_Base_SetConfig+0x30>
 80027b8:	687b      	ldr	r3, [r7, #4]
 80027ba:	4a2b      	ldr	r2, [pc, #172]	@ (8002868 <TIM_Base_SetConfig+0xd8>)
 80027bc:	4293      	cmp	r3, r2
 80027be:	d108      	bne.n	80027d2 <TIM_Base_SetConfig+0x42>
 80027c0:	68fb      	ldr	r3, [r7, #12]
 80027c2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80027c6:	60fb      	str	r3, [r7, #12]
 80027c8:	683b      	ldr	r3, [r7, #0]
 80027ca:	685b      	ldr	r3, [r3, #4]
 80027cc:	68fa      	ldr	r2, [r7, #12]
 80027ce:	4313      	orrs	r3, r2
 80027d0:	60fb      	str	r3, [r7, #12]
 80027d2:	687b      	ldr	r3, [r7, #4]
 80027d4:	4a22      	ldr	r2, [pc, #136]	@ (8002860 <TIM_Base_SetConfig+0xd0>)
 80027d6:	4293      	cmp	r3, r2
 80027d8:	d00b      	beq.n	80027f2 <TIM_Base_SetConfig+0x62>
 80027da:	687b      	ldr	r3, [r7, #4]
 80027dc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80027e0:	d007      	beq.n	80027f2 <TIM_Base_SetConfig+0x62>
 80027e2:	687b      	ldr	r3, [r7, #4]
 80027e4:	4a1f      	ldr	r2, [pc, #124]	@ (8002864 <TIM_Base_SetConfig+0xd4>)
 80027e6:	4293      	cmp	r3, r2
 80027e8:	d003      	beq.n	80027f2 <TIM_Base_SetConfig+0x62>
 80027ea:	687b      	ldr	r3, [r7, #4]
 80027ec:	4a1e      	ldr	r2, [pc, #120]	@ (8002868 <TIM_Base_SetConfig+0xd8>)
 80027ee:	4293      	cmp	r3, r2
 80027f0:	d108      	bne.n	8002804 <TIM_Base_SetConfig+0x74>
 80027f2:	68fb      	ldr	r3, [r7, #12]
 80027f4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80027f8:	60fb      	str	r3, [r7, #12]
 80027fa:	683b      	ldr	r3, [r7, #0]
 80027fc:	68db      	ldr	r3, [r3, #12]
 80027fe:	68fa      	ldr	r2, [r7, #12]
 8002800:	4313      	orrs	r3, r2
 8002802:	60fb      	str	r3, [r7, #12]
 8002804:	68fb      	ldr	r3, [r7, #12]
 8002806:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800280a:	683b      	ldr	r3, [r7, #0]
 800280c:	695b      	ldr	r3, [r3, #20]
 800280e:	4313      	orrs	r3, r2
 8002810:	60fb      	str	r3, [r7, #12]
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	68fa      	ldr	r2, [r7, #12]
 8002816:	601a      	str	r2, [r3, #0]
 8002818:	683b      	ldr	r3, [r7, #0]
 800281a:	689a      	ldr	r2, [r3, #8]
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002820:	683b      	ldr	r3, [r7, #0]
 8002822:	681a      	ldr	r2, [r3, #0]
 8002824:	687b      	ldr	r3, [r7, #4]
 8002826:	629a      	str	r2, [r3, #40]	@ 0x28
 8002828:	687b      	ldr	r3, [r7, #4]
 800282a:	4a0d      	ldr	r2, [pc, #52]	@ (8002860 <TIM_Base_SetConfig+0xd0>)
 800282c:	4293      	cmp	r3, r2
 800282e:	d103      	bne.n	8002838 <TIM_Base_SetConfig+0xa8>
 8002830:	683b      	ldr	r3, [r7, #0]
 8002832:	691a      	ldr	r2, [r3, #16]
 8002834:	687b      	ldr	r3, [r7, #4]
 8002836:	631a      	str	r2, [r3, #48]	@ 0x30
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	2201      	movs	r2, #1
 800283c:	615a      	str	r2, [r3, #20]
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	691b      	ldr	r3, [r3, #16]
 8002842:	f003 0301 	and.w	r3, r3, #1
 8002846:	2b00      	cmp	r3, #0
 8002848:	d005      	beq.n	8002856 <TIM_Base_SetConfig+0xc6>
 800284a:	687b      	ldr	r3, [r7, #4]
 800284c:	691b      	ldr	r3, [r3, #16]
 800284e:	f023 0201 	bic.w	r2, r3, #1
 8002852:	687b      	ldr	r3, [r7, #4]
 8002854:	611a      	str	r2, [r3, #16]
 8002856:	bf00      	nop
 8002858:	3714      	adds	r7, #20
 800285a:	46bd      	mov	sp, r7
 800285c:	bc80      	pop	{r7}
 800285e:	4770      	bx	lr
 8002860:	40012c00 	.word	0x40012c00
 8002864:	40000400 	.word	0x40000400
 8002868:	40000800 	.word	0x40000800

0800286c <TIM_SlaveTimer_SetConfig>:
 800286c:	b580      	push	{r7, lr}
 800286e:	b086      	sub	sp, #24
 8002870:	af00      	add	r7, sp, #0
 8002872:	6078      	str	r0, [r7, #4]
 8002874:	6039      	str	r1, [r7, #0]
 8002876:	2300      	movs	r3, #0
 8002878:	75fb      	strb	r3, [r7, #23]
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	681b      	ldr	r3, [r3, #0]
 800287e:	689b      	ldr	r3, [r3, #8]
 8002880:	613b      	str	r3, [r7, #16]
 8002882:	693b      	ldr	r3, [r7, #16]
 8002884:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002888:	613b      	str	r3, [r7, #16]
 800288a:	683b      	ldr	r3, [r7, #0]
 800288c:	685b      	ldr	r3, [r3, #4]
 800288e:	693a      	ldr	r2, [r7, #16]
 8002890:	4313      	orrs	r3, r2
 8002892:	613b      	str	r3, [r7, #16]
 8002894:	693b      	ldr	r3, [r7, #16]
 8002896:	f023 0307 	bic.w	r3, r3, #7
 800289a:	613b      	str	r3, [r7, #16]
 800289c:	683b      	ldr	r3, [r7, #0]
 800289e:	681b      	ldr	r3, [r3, #0]
 80028a0:	693a      	ldr	r2, [r7, #16]
 80028a2:	4313      	orrs	r3, r2
 80028a4:	613b      	str	r3, [r7, #16]
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	681b      	ldr	r3, [r3, #0]
 80028aa:	693a      	ldr	r2, [r7, #16]
 80028ac:	609a      	str	r2, [r3, #8]
 80028ae:	683b      	ldr	r3, [r7, #0]
 80028b0:	685b      	ldr	r3, [r3, #4]
 80028b2:	2b70      	cmp	r3, #112	@ 0x70
 80028b4:	d01a      	beq.n	80028ec <TIM_SlaveTimer_SetConfig+0x80>
 80028b6:	2b70      	cmp	r3, #112	@ 0x70
 80028b8:	d860      	bhi.n	800297c <TIM_SlaveTimer_SetConfig+0x110>
 80028ba:	2b60      	cmp	r3, #96	@ 0x60
 80028bc:	d054      	beq.n	8002968 <TIM_SlaveTimer_SetConfig+0xfc>
 80028be:	2b60      	cmp	r3, #96	@ 0x60
 80028c0:	d85c      	bhi.n	800297c <TIM_SlaveTimer_SetConfig+0x110>
 80028c2:	2b50      	cmp	r3, #80	@ 0x50
 80028c4:	d046      	beq.n	8002954 <TIM_SlaveTimer_SetConfig+0xe8>
 80028c6:	2b50      	cmp	r3, #80	@ 0x50
 80028c8:	d858      	bhi.n	800297c <TIM_SlaveTimer_SetConfig+0x110>
 80028ca:	2b40      	cmp	r3, #64	@ 0x40
 80028cc:	d019      	beq.n	8002902 <TIM_SlaveTimer_SetConfig+0x96>
 80028ce:	2b40      	cmp	r3, #64	@ 0x40
 80028d0:	d854      	bhi.n	800297c <TIM_SlaveTimer_SetConfig+0x110>
 80028d2:	2b30      	cmp	r3, #48	@ 0x30
 80028d4:	d055      	beq.n	8002982 <TIM_SlaveTimer_SetConfig+0x116>
 80028d6:	2b30      	cmp	r3, #48	@ 0x30
 80028d8:	d850      	bhi.n	800297c <TIM_SlaveTimer_SetConfig+0x110>
 80028da:	2b20      	cmp	r3, #32
 80028dc:	d051      	beq.n	8002982 <TIM_SlaveTimer_SetConfig+0x116>
 80028de:	2b20      	cmp	r3, #32
 80028e0:	d84c      	bhi.n	800297c <TIM_SlaveTimer_SetConfig+0x110>
 80028e2:	2b00      	cmp	r3, #0
 80028e4:	d04d      	beq.n	8002982 <TIM_SlaveTimer_SetConfig+0x116>
 80028e6:	2b10      	cmp	r3, #16
 80028e8:	d04b      	beq.n	8002982 <TIM_SlaveTimer_SetConfig+0x116>
 80028ea:	e047      	b.n	800297c <TIM_SlaveTimer_SetConfig+0x110>
 80028ec:	687b      	ldr	r3, [r7, #4]
 80028ee:	6818      	ldr	r0, [r3, #0]
 80028f0:	683b      	ldr	r3, [r7, #0]
 80028f2:	68d9      	ldr	r1, [r3, #12]
 80028f4:	683b      	ldr	r3, [r7, #0]
 80028f6:	689a      	ldr	r2, [r3, #8]
 80028f8:	683b      	ldr	r3, [r7, #0]
 80028fa:	691b      	ldr	r3, [r3, #16]
 80028fc:	f000 f8be 	bl	8002a7c <TIM_ETR_SetConfig>
 8002900:	e040      	b.n	8002984 <TIM_SlaveTimer_SetConfig+0x118>
 8002902:	683b      	ldr	r3, [r7, #0]
 8002904:	681b      	ldr	r3, [r3, #0]
 8002906:	2b05      	cmp	r3, #5
 8002908:	d101      	bne.n	800290e <TIM_SlaveTimer_SetConfig+0xa2>
 800290a:	2301      	movs	r3, #1
 800290c:	e03b      	b.n	8002986 <TIM_SlaveTimer_SetConfig+0x11a>
 800290e:	687b      	ldr	r3, [r7, #4]
 8002910:	681b      	ldr	r3, [r3, #0]
 8002912:	6a1b      	ldr	r3, [r3, #32]
 8002914:	60fb      	str	r3, [r7, #12]
 8002916:	687b      	ldr	r3, [r7, #4]
 8002918:	681b      	ldr	r3, [r3, #0]
 800291a:	6a1a      	ldr	r2, [r3, #32]
 800291c:	687b      	ldr	r3, [r7, #4]
 800291e:	681b      	ldr	r3, [r3, #0]
 8002920:	f022 0201 	bic.w	r2, r2, #1
 8002924:	621a      	str	r2, [r3, #32]
 8002926:	687b      	ldr	r3, [r7, #4]
 8002928:	681b      	ldr	r3, [r3, #0]
 800292a:	699b      	ldr	r3, [r3, #24]
 800292c:	60bb      	str	r3, [r7, #8]
 800292e:	68bb      	ldr	r3, [r7, #8]
 8002930:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8002934:	60bb      	str	r3, [r7, #8]
 8002936:	683b      	ldr	r3, [r7, #0]
 8002938:	691b      	ldr	r3, [r3, #16]
 800293a:	011b      	lsls	r3, r3, #4
 800293c:	68ba      	ldr	r2, [r7, #8]
 800293e:	4313      	orrs	r3, r2
 8002940:	60bb      	str	r3, [r7, #8]
 8002942:	687b      	ldr	r3, [r7, #4]
 8002944:	681b      	ldr	r3, [r3, #0]
 8002946:	68ba      	ldr	r2, [r7, #8]
 8002948:	619a      	str	r2, [r3, #24]
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	681b      	ldr	r3, [r3, #0]
 800294e:	68fa      	ldr	r2, [r7, #12]
 8002950:	621a      	str	r2, [r3, #32]
 8002952:	e017      	b.n	8002984 <TIM_SlaveTimer_SetConfig+0x118>
 8002954:	687b      	ldr	r3, [r7, #4]
 8002956:	6818      	ldr	r0, [r3, #0]
 8002958:	683b      	ldr	r3, [r7, #0]
 800295a:	6899      	ldr	r1, [r3, #8]
 800295c:	683b      	ldr	r3, [r7, #0]
 800295e:	691b      	ldr	r3, [r3, #16]
 8002960:	461a      	mov	r2, r3
 8002962:	f000 f814 	bl	800298e <TIM_TI1_ConfigInputStage>
 8002966:	e00d      	b.n	8002984 <TIM_SlaveTimer_SetConfig+0x118>
 8002968:	687b      	ldr	r3, [r7, #4]
 800296a:	6818      	ldr	r0, [r3, #0]
 800296c:	683b      	ldr	r3, [r7, #0]
 800296e:	6899      	ldr	r1, [r3, #8]
 8002970:	683b      	ldr	r3, [r7, #0]
 8002972:	691b      	ldr	r3, [r3, #16]
 8002974:	461a      	mov	r2, r3
 8002976:	f000 f838 	bl	80029ea <TIM_TI2_ConfigInputStage>
 800297a:	e003      	b.n	8002984 <TIM_SlaveTimer_SetConfig+0x118>
 800297c:	2301      	movs	r3, #1
 800297e:	75fb      	strb	r3, [r7, #23]
 8002980:	e000      	b.n	8002984 <TIM_SlaveTimer_SetConfig+0x118>
 8002982:	bf00      	nop
 8002984:	7dfb      	ldrb	r3, [r7, #23]
 8002986:	4618      	mov	r0, r3
 8002988:	3718      	adds	r7, #24
 800298a:	46bd      	mov	sp, r7
 800298c:	bd80      	pop	{r7, pc}

0800298e <TIM_TI1_ConfigInputStage>:
 800298e:	b480      	push	{r7}
 8002990:	b087      	sub	sp, #28
 8002992:	af00      	add	r7, sp, #0
 8002994:	60f8      	str	r0, [r7, #12]
 8002996:	60b9      	str	r1, [r7, #8]
 8002998:	607a      	str	r2, [r7, #4]
 800299a:	68fb      	ldr	r3, [r7, #12]
 800299c:	6a1b      	ldr	r3, [r3, #32]
 800299e:	617b      	str	r3, [r7, #20]
 80029a0:	68fb      	ldr	r3, [r7, #12]
 80029a2:	6a1b      	ldr	r3, [r3, #32]
 80029a4:	f023 0201 	bic.w	r2, r3, #1
 80029a8:	68fb      	ldr	r3, [r7, #12]
 80029aa:	621a      	str	r2, [r3, #32]
 80029ac:	68fb      	ldr	r3, [r7, #12]
 80029ae:	699b      	ldr	r3, [r3, #24]
 80029b0:	613b      	str	r3, [r7, #16]
 80029b2:	693b      	ldr	r3, [r7, #16]
 80029b4:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80029b8:	613b      	str	r3, [r7, #16]
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	011b      	lsls	r3, r3, #4
 80029be:	693a      	ldr	r2, [r7, #16]
 80029c0:	4313      	orrs	r3, r2
 80029c2:	613b      	str	r3, [r7, #16]
 80029c4:	697b      	ldr	r3, [r7, #20]
 80029c6:	f023 030a 	bic.w	r3, r3, #10
 80029ca:	617b      	str	r3, [r7, #20]
 80029cc:	697a      	ldr	r2, [r7, #20]
 80029ce:	68bb      	ldr	r3, [r7, #8]
 80029d0:	4313      	orrs	r3, r2
 80029d2:	617b      	str	r3, [r7, #20]
 80029d4:	68fb      	ldr	r3, [r7, #12]
 80029d6:	693a      	ldr	r2, [r7, #16]
 80029d8:	619a      	str	r2, [r3, #24]
 80029da:	68fb      	ldr	r3, [r7, #12]
 80029dc:	697a      	ldr	r2, [r7, #20]
 80029de:	621a      	str	r2, [r3, #32]
 80029e0:	bf00      	nop
 80029e2:	371c      	adds	r7, #28
 80029e4:	46bd      	mov	sp, r7
 80029e6:	bc80      	pop	{r7}
 80029e8:	4770      	bx	lr

080029ea <TIM_TI2_ConfigInputStage>:
 80029ea:	b480      	push	{r7}
 80029ec:	b087      	sub	sp, #28
 80029ee:	af00      	add	r7, sp, #0
 80029f0:	60f8      	str	r0, [r7, #12]
 80029f2:	60b9      	str	r1, [r7, #8]
 80029f4:	607a      	str	r2, [r7, #4]
 80029f6:	68fb      	ldr	r3, [r7, #12]
 80029f8:	6a1b      	ldr	r3, [r3, #32]
 80029fa:	617b      	str	r3, [r7, #20]
 80029fc:	68fb      	ldr	r3, [r7, #12]
 80029fe:	6a1b      	ldr	r3, [r3, #32]
 8002a00:	f023 0210 	bic.w	r2, r3, #16
 8002a04:	68fb      	ldr	r3, [r7, #12]
 8002a06:	621a      	str	r2, [r3, #32]
 8002a08:	68fb      	ldr	r3, [r7, #12]
 8002a0a:	699b      	ldr	r3, [r3, #24]
 8002a0c:	613b      	str	r3, [r7, #16]
 8002a0e:	693b      	ldr	r3, [r7, #16]
 8002a10:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8002a14:	613b      	str	r3, [r7, #16]
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	031b      	lsls	r3, r3, #12
 8002a1a:	693a      	ldr	r2, [r7, #16]
 8002a1c:	4313      	orrs	r3, r2
 8002a1e:	613b      	str	r3, [r7, #16]
 8002a20:	697b      	ldr	r3, [r7, #20]
 8002a22:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8002a26:	617b      	str	r3, [r7, #20]
 8002a28:	68bb      	ldr	r3, [r7, #8]
 8002a2a:	011b      	lsls	r3, r3, #4
 8002a2c:	697a      	ldr	r2, [r7, #20]
 8002a2e:	4313      	orrs	r3, r2
 8002a30:	617b      	str	r3, [r7, #20]
 8002a32:	68fb      	ldr	r3, [r7, #12]
 8002a34:	693a      	ldr	r2, [r7, #16]
 8002a36:	619a      	str	r2, [r3, #24]
 8002a38:	68fb      	ldr	r3, [r7, #12]
 8002a3a:	697a      	ldr	r2, [r7, #20]
 8002a3c:	621a      	str	r2, [r3, #32]
 8002a3e:	bf00      	nop
 8002a40:	371c      	adds	r7, #28
 8002a42:	46bd      	mov	sp, r7
 8002a44:	bc80      	pop	{r7}
 8002a46:	4770      	bx	lr

08002a48 <TIM_ITRx_SetConfig>:
 8002a48:	b480      	push	{r7}
 8002a4a:	b085      	sub	sp, #20
 8002a4c:	af00      	add	r7, sp, #0
 8002a4e:	6078      	str	r0, [r7, #4]
 8002a50:	6039      	str	r1, [r7, #0]
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	689b      	ldr	r3, [r3, #8]
 8002a56:	60fb      	str	r3, [r7, #12]
 8002a58:	68fb      	ldr	r3, [r7, #12]
 8002a5a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002a5e:	60fb      	str	r3, [r7, #12]
 8002a60:	683a      	ldr	r2, [r7, #0]
 8002a62:	68fb      	ldr	r3, [r7, #12]
 8002a64:	4313      	orrs	r3, r2
 8002a66:	f043 0307 	orr.w	r3, r3, #7
 8002a6a:	60fb      	str	r3, [r7, #12]
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	68fa      	ldr	r2, [r7, #12]
 8002a70:	609a      	str	r2, [r3, #8]
 8002a72:	bf00      	nop
 8002a74:	3714      	adds	r7, #20
 8002a76:	46bd      	mov	sp, r7
 8002a78:	bc80      	pop	{r7}
 8002a7a:	4770      	bx	lr

08002a7c <TIM_ETR_SetConfig>:
 8002a7c:	b480      	push	{r7}
 8002a7e:	b087      	sub	sp, #28
 8002a80:	af00      	add	r7, sp, #0
 8002a82:	60f8      	str	r0, [r7, #12]
 8002a84:	60b9      	str	r1, [r7, #8]
 8002a86:	607a      	str	r2, [r7, #4]
 8002a88:	603b      	str	r3, [r7, #0]
 8002a8a:	68fb      	ldr	r3, [r7, #12]
 8002a8c:	689b      	ldr	r3, [r3, #8]
 8002a8e:	617b      	str	r3, [r7, #20]
 8002a90:	697b      	ldr	r3, [r7, #20]
 8002a92:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8002a96:	617b      	str	r3, [r7, #20]
 8002a98:	683b      	ldr	r3, [r7, #0]
 8002a9a:	021a      	lsls	r2, r3, #8
 8002a9c:	687b      	ldr	r3, [r7, #4]
 8002a9e:	431a      	orrs	r2, r3
 8002aa0:	68bb      	ldr	r3, [r7, #8]
 8002aa2:	4313      	orrs	r3, r2
 8002aa4:	697a      	ldr	r2, [r7, #20]
 8002aa6:	4313      	orrs	r3, r2
 8002aa8:	617b      	str	r3, [r7, #20]
 8002aaa:	68fb      	ldr	r3, [r7, #12]
 8002aac:	697a      	ldr	r2, [r7, #20]
 8002aae:	609a      	str	r2, [r3, #8]
 8002ab0:	bf00      	nop
 8002ab2:	371c      	adds	r7, #28
 8002ab4:	46bd      	mov	sp, r7
 8002ab6:	bc80      	pop	{r7}
 8002ab8:	4770      	bx	lr
	...

08002abc <HAL_TIMEx_MasterConfigSynchronization>:
 8002abc:	b480      	push	{r7}
 8002abe:	b085      	sub	sp, #20
 8002ac0:	af00      	add	r7, sp, #0
 8002ac2:	6078      	str	r0, [r7, #4]
 8002ac4:	6039      	str	r1, [r7, #0]
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002acc:	2b01      	cmp	r3, #1
 8002ace:	d101      	bne.n	8002ad4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002ad0:	2302      	movs	r3, #2
 8002ad2:	e046      	b.n	8002b62 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8002ad4:	687b      	ldr	r3, [r7, #4]
 8002ad6:	2201      	movs	r2, #1
 8002ad8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002adc:	687b      	ldr	r3, [r7, #4]
 8002ade:	2202      	movs	r2, #2
 8002ae0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002ae4:	687b      	ldr	r3, [r7, #4]
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	685b      	ldr	r3, [r3, #4]
 8002aea:	60fb      	str	r3, [r7, #12]
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	681b      	ldr	r3, [r3, #0]
 8002af0:	689b      	ldr	r3, [r3, #8]
 8002af2:	60bb      	str	r3, [r7, #8]
 8002af4:	68fb      	ldr	r3, [r7, #12]
 8002af6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002afa:	60fb      	str	r3, [r7, #12]
 8002afc:	683b      	ldr	r3, [r7, #0]
 8002afe:	681b      	ldr	r3, [r3, #0]
 8002b00:	68fa      	ldr	r2, [r7, #12]
 8002b02:	4313      	orrs	r3, r2
 8002b04:	60fb      	str	r3, [r7, #12]
 8002b06:	687b      	ldr	r3, [r7, #4]
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	68fa      	ldr	r2, [r7, #12]
 8002b0c:	605a      	str	r2, [r3, #4]
 8002b0e:	687b      	ldr	r3, [r7, #4]
 8002b10:	681b      	ldr	r3, [r3, #0]
 8002b12:	4a16      	ldr	r2, [pc, #88]	@ (8002b6c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8002b14:	4293      	cmp	r3, r2
 8002b16:	d00e      	beq.n	8002b36 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	681b      	ldr	r3, [r3, #0]
 8002b1c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002b20:	d009      	beq.n	8002b36 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002b22:	687b      	ldr	r3, [r7, #4]
 8002b24:	681b      	ldr	r3, [r3, #0]
 8002b26:	4a12      	ldr	r2, [pc, #72]	@ (8002b70 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8002b28:	4293      	cmp	r3, r2
 8002b2a:	d004      	beq.n	8002b36 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	681b      	ldr	r3, [r3, #0]
 8002b30:	4a10      	ldr	r2, [pc, #64]	@ (8002b74 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8002b32:	4293      	cmp	r3, r2
 8002b34:	d10c      	bne.n	8002b50 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8002b36:	68bb      	ldr	r3, [r7, #8]
 8002b38:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002b3c:	60bb      	str	r3, [r7, #8]
 8002b3e:	683b      	ldr	r3, [r7, #0]
 8002b40:	685b      	ldr	r3, [r3, #4]
 8002b42:	68ba      	ldr	r2, [r7, #8]
 8002b44:	4313      	orrs	r3, r2
 8002b46:	60bb      	str	r3, [r7, #8]
 8002b48:	687b      	ldr	r3, [r7, #4]
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	68ba      	ldr	r2, [r7, #8]
 8002b4e:	609a      	str	r2, [r3, #8]
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	2201      	movs	r2, #1
 8002b54:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	2200      	movs	r2, #0
 8002b5c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b60:	2300      	movs	r3, #0
 8002b62:	4618      	mov	r0, r3
 8002b64:	3714      	adds	r7, #20
 8002b66:	46bd      	mov	sp, r7
 8002b68:	bc80      	pop	{r7}
 8002b6a:	4770      	bx	lr
 8002b6c:	40012c00 	.word	0x40012c00
 8002b70:	40000400 	.word	0x40000400
 8002b74:	40000800 	.word	0x40000800

08002b78 <memset>:
 8002b78:	4603      	mov	r3, r0
 8002b7a:	4402      	add	r2, r0
 8002b7c:	4293      	cmp	r3, r2
 8002b7e:	d100      	bne.n	8002b82 <memset+0xa>
 8002b80:	4770      	bx	lr
 8002b82:	f803 1b01 	strb.w	r1, [r3], #1
 8002b86:	e7f9      	b.n	8002b7c <memset+0x4>

08002b88 <__libc_init_array>:
 8002b88:	b570      	push	{r4, r5, r6, lr}
 8002b8a:	2600      	movs	r6, #0
 8002b8c:	4d0c      	ldr	r5, [pc, #48]	@ (8002bc0 <__libc_init_array+0x38>)
 8002b8e:	4c0d      	ldr	r4, [pc, #52]	@ (8002bc4 <__libc_init_array+0x3c>)
 8002b90:	1b64      	subs	r4, r4, r5
 8002b92:	10a4      	asrs	r4, r4, #2
 8002b94:	42a6      	cmp	r6, r4
 8002b96:	d109      	bne.n	8002bac <__libc_init_array+0x24>
 8002b98:	f000 f81a 	bl	8002bd0 <_init>
 8002b9c:	2600      	movs	r6, #0
 8002b9e:	4d0a      	ldr	r5, [pc, #40]	@ (8002bc8 <__libc_init_array+0x40>)
 8002ba0:	4c0a      	ldr	r4, [pc, #40]	@ (8002bcc <__libc_init_array+0x44>)
 8002ba2:	1b64      	subs	r4, r4, r5
 8002ba4:	10a4      	asrs	r4, r4, #2
 8002ba6:	42a6      	cmp	r6, r4
 8002ba8:	d105      	bne.n	8002bb6 <__libc_init_array+0x2e>
 8002baa:	bd70      	pop	{r4, r5, r6, pc}
 8002bac:	f855 3b04 	ldr.w	r3, [r5], #4
 8002bb0:	4798      	blx	r3
 8002bb2:	3601      	adds	r6, #1
 8002bb4:	e7ee      	b.n	8002b94 <__libc_init_array+0xc>
 8002bb6:	f855 3b04 	ldr.w	r3, [r5], #4
 8002bba:	4798      	blx	r3
 8002bbc:	3601      	adds	r6, #1
 8002bbe:	e7f2      	b.n	8002ba6 <__libc_init_array+0x1e>
 8002bc0:	08002d04 	.word	0x08002d04
 8002bc4:	08002d04 	.word	0x08002d04
 8002bc8:	08002d04 	.word	0x08002d04
 8002bcc:	08002d08 	.word	0x08002d08

08002bd0 <_init>:
 8002bd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bd2:	bf00      	nop
 8002bd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002bd6:	bc08      	pop	{r3}
 8002bd8:	469e      	mov	lr, r3
 8002bda:	4770      	bx	lr

08002bdc <_fini>:
 8002bdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bde:	bf00      	nop
 8002be0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002be2:	bc08      	pop	{r3}
 8002be4:	469e      	mov	lr, r3
 8002be6:	4770      	bx	lr
