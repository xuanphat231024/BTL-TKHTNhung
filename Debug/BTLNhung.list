
BTLNhung.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000024f0  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000010c  080025fc  080025fc  000035fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002708  08002708  00004018  2**0
                  CONTENTS
  4 .ARM          00000000  08002708  08002708  00004018  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002708  08002708  00004018  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002708  08002708  00003708  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800270c  0800270c  0000370c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000018  20000000  08002710  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000007c  20000018  08002728  00004018  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08002728  00004094  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00004018  2**0
                  CONTENTS, READONLY
 12 .debug_info   00007965  00000000  00000000  00004041  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001675  00000000  00000000  0000b9a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000009d0  00000000  00000000  0000d020  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000078d  00000000  00000000  0000d9f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001732c  00000000  00000000  0000e17d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000a896  00000000  00000000  000254a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00087ae0  00000000  00000000  0002fd3f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b781f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002800  00000000  00000000  000b7864  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000035  00000000  00000000  000ba064  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000018 	.word	0x20000018
 8000128:	00000000 	.word	0x00000000
 800012c:	080025e4 	.word	0x080025e4

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	2000001c 	.word	0x2000001c
 8000148:	080025e4 	.word	0x080025e4

0800014c <LCD_SendHalf>:
#include "LCD.h"
#include <stdio.h>  // Để sử dụng sprintf cho việc chuyển đổi số thành chuỗi
// Gửi nửa byte (4-bit) đến LCD
void LCD_SendHalf(uint8_t data) {
 800014c:	b580      	push	{r7, lr}
 800014e:	b082      	sub	sp, #8
 8000150:	af00      	add	r7, sp, #0
 8000152:	4603      	mov	r3, r0
 8000154:	71fb      	strb	r3, [r7, #7]
    HAL_GPIO_WritePin(LCD_PORT, D4_PIN, (data >> 0) & 0x01);
 8000156:	79fb      	ldrb	r3, [r7, #7]
 8000158:	f003 0301 	and.w	r3, r3, #1
 800015c:	b2db      	uxtb	r3, r3
 800015e:	461a      	mov	r2, r3
 8000160:	2110      	movs	r1, #16
 8000162:	4814      	ldr	r0, [pc, #80]	@ (80001b4 <LCD_SendHalf+0x68>)
 8000164:	f001 facf 	bl	8001706 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_PORT, D5_PIN, (data >> 1) & 0x01);
 8000168:	79fb      	ldrb	r3, [r7, #7]
 800016a:	085b      	lsrs	r3, r3, #1
 800016c:	b2db      	uxtb	r3, r3
 800016e:	f003 0301 	and.w	r3, r3, #1
 8000172:	b2db      	uxtb	r3, r3
 8000174:	461a      	mov	r2, r3
 8000176:	2120      	movs	r1, #32
 8000178:	480e      	ldr	r0, [pc, #56]	@ (80001b4 <LCD_SendHalf+0x68>)
 800017a:	f001 fac4 	bl	8001706 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_PORT, D6_PIN, (data >> 2) & 0x01);
 800017e:	79fb      	ldrb	r3, [r7, #7]
 8000180:	089b      	lsrs	r3, r3, #2
 8000182:	b2db      	uxtb	r3, r3
 8000184:	f003 0301 	and.w	r3, r3, #1
 8000188:	b2db      	uxtb	r3, r3
 800018a:	461a      	mov	r2, r3
 800018c:	2140      	movs	r1, #64	@ 0x40
 800018e:	4809      	ldr	r0, [pc, #36]	@ (80001b4 <LCD_SendHalf+0x68>)
 8000190:	f001 fab9 	bl	8001706 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_PORT, D7_PIN, (data >> 3) & 0x01);
 8000194:	79fb      	ldrb	r3, [r7, #7]
 8000196:	08db      	lsrs	r3, r3, #3
 8000198:	b2db      	uxtb	r3, r3
 800019a:	f003 0301 	and.w	r3, r3, #1
 800019e:	b2db      	uxtb	r3, r3
 80001a0:	461a      	mov	r2, r3
 80001a2:	2180      	movs	r1, #128	@ 0x80
 80001a4:	4803      	ldr	r0, [pc, #12]	@ (80001b4 <LCD_SendHalf+0x68>)
 80001a6:	f001 faae 	bl	8001706 <HAL_GPIO_WritePin>
}
 80001aa:	bf00      	nop
 80001ac:	3708      	adds	r7, #8
 80001ae:	46bd      	mov	sp, r7
 80001b0:	bd80      	pop	{r7, pc}
 80001b2:	bf00      	nop
 80001b4:	40010800 	.word	0x40010800

080001b8 <LCD_Enable>:

// Kích hoạt xung EN
void LCD_Enable(void) {
 80001b8:	b580      	push	{r7, lr}
 80001ba:	af00      	add	r7, sp, #0
    HAL_GPIO_WritePin(LCD_PORT, EN_PIN, GPIO_PIN_SET);   // Set EN
 80001bc:	2201      	movs	r2, #1
 80001be:	2102      	movs	r1, #2
 80001c0:	4807      	ldr	r0, [pc, #28]	@ (80001e0 <LCD_Enable+0x28>)
 80001c2:	f001 faa0 	bl	8001706 <HAL_GPIO_WritePin>
    HAL_Delay(5);                                        // Delay nhỏ
 80001c6:	2005      	movs	r0, #5
 80001c8:	f000 fffa 	bl	80011c0 <HAL_Delay>
    HAL_GPIO_WritePin(LCD_PORT, EN_PIN, GPIO_PIN_RESET); // Reset EN
 80001cc:	2200      	movs	r2, #0
 80001ce:	2102      	movs	r1, #2
 80001d0:	4803      	ldr	r0, [pc, #12]	@ (80001e0 <LCD_Enable+0x28>)
 80001d2:	f001 fa98 	bl	8001706 <HAL_GPIO_WritePin>
    HAL_Delay(5);
 80001d6:	2005      	movs	r0, #5
 80001d8:	f000 fff2 	bl	80011c0 <HAL_Delay>
}
 80001dc:	bf00      	nop
 80001de:	bd80      	pop	{r7, pc}
 80001e0:	40010800 	.word	0x40010800

080001e4 <LCD_SendCmd>:

// Gửi lệnh đến LCD
void LCD_SendCmd(uint8_t cmd) {
 80001e4:	b580      	push	{r7, lr}
 80001e6:	b082      	sub	sp, #8
 80001e8:	af00      	add	r7, sp, #0
 80001ea:	4603      	mov	r3, r0
 80001ec:	71fb      	strb	r3, [r7, #7]
    HAL_GPIO_WritePin(LCD_PORT, RS_PIN, GPIO_PIN_RESET);  // Chọn chế độ lệnh
 80001ee:	2200      	movs	r2, #0
 80001f0:	2101      	movs	r1, #1
 80001f2:	480c      	ldr	r0, [pc, #48]	@ (8000224 <LCD_SendCmd+0x40>)
 80001f4:	f001 fa87 	bl	8001706 <HAL_GPIO_WritePin>
    LCD_SendHalf(cmd >> 4);                               // Gửi 4 bit cao
 80001f8:	79fb      	ldrb	r3, [r7, #7]
 80001fa:	091b      	lsrs	r3, r3, #4
 80001fc:	b2db      	uxtb	r3, r3
 80001fe:	4618      	mov	r0, r3
 8000200:	f7ff ffa4 	bl	800014c <LCD_SendHalf>
    LCD_Enable();
 8000204:	f7ff ffd8 	bl	80001b8 <LCD_Enable>
    LCD_SendHalf(cmd & 0x0F);                             // Gửi 4 bit thấp
 8000208:	79fb      	ldrb	r3, [r7, #7]
 800020a:	f003 030f 	and.w	r3, r3, #15
 800020e:	b2db      	uxtb	r3, r3
 8000210:	4618      	mov	r0, r3
 8000212:	f7ff ff9b 	bl	800014c <LCD_SendHalf>
    LCD_Enable();
 8000216:	f7ff ffcf 	bl	80001b8 <LCD_Enable>
}
 800021a:	bf00      	nop
 800021c:	3708      	adds	r7, #8
 800021e:	46bd      	mov	sp, r7
 8000220:	bd80      	pop	{r7, pc}
 8000222:	bf00      	nop
 8000224:	40010800 	.word	0x40010800

08000228 <LCD_SendData>:

// Gửi dữ liệu đến LCD
void LCD_SendData(uint8_t data) {
 8000228:	b580      	push	{r7, lr}
 800022a:	b082      	sub	sp, #8
 800022c:	af00      	add	r7, sp, #0
 800022e:	4603      	mov	r3, r0
 8000230:	71fb      	strb	r3, [r7, #7]
    HAL_GPIO_WritePin(LCD_PORT, RS_PIN, GPIO_PIN_SET);    // Chọn chế độ dữ liệu
 8000232:	2201      	movs	r2, #1
 8000234:	2101      	movs	r1, #1
 8000236:	480c      	ldr	r0, [pc, #48]	@ (8000268 <LCD_SendData+0x40>)
 8000238:	f001 fa65 	bl	8001706 <HAL_GPIO_WritePin>
    LCD_SendHalf(data >> 4);                              // Gửi 4 bit cao
 800023c:	79fb      	ldrb	r3, [r7, #7]
 800023e:	091b      	lsrs	r3, r3, #4
 8000240:	b2db      	uxtb	r3, r3
 8000242:	4618      	mov	r0, r3
 8000244:	f7ff ff82 	bl	800014c <LCD_SendHalf>
    LCD_Enable();
 8000248:	f7ff ffb6 	bl	80001b8 <LCD_Enable>
    LCD_SendHalf(data & 0x0F);                            // Gửi 4 bit thấp
 800024c:	79fb      	ldrb	r3, [r7, #7]
 800024e:	f003 030f 	and.w	r3, r3, #15
 8000252:	b2db      	uxtb	r3, r3
 8000254:	4618      	mov	r0, r3
 8000256:	f7ff ff79 	bl	800014c <LCD_SendHalf>
    LCD_Enable();
 800025a:	f7ff ffad 	bl	80001b8 <LCD_Enable>
}
 800025e:	bf00      	nop
 8000260:	3708      	adds	r7, #8
 8000262:	46bd      	mov	sp, r7
 8000264:	bd80      	pop	{r7, pc}
 8000266:	bf00      	nop
 8000268:	40010800 	.word	0x40010800

0800026c <LCD_Init>:

// Khởi tạo LCD
void LCD_Init(void) {
 800026c:	b580      	push	{r7, lr}
 800026e:	af00      	add	r7, sp, #0
    HAL_Delay(100);  // Chờ LCD khởi động
 8000270:	2064      	movs	r0, #100	@ 0x64
 8000272:	f000 ffa5 	bl	80011c0 <HAL_Delay>

    // Gửi chuỗi khởi tạo LCD
    LCD_SendCmd(0x02);  // Chế độ 4-bit
 8000276:	2002      	movs	r0, #2
 8000278:	f7ff ffb4 	bl	80001e4 <LCD_SendCmd>
    LCD_SendCmd(0x28);  // Giao diện 2 dòng, 5x7 matrix
 800027c:	2028      	movs	r0, #40	@ 0x28
 800027e:	f7ff ffb1 	bl	80001e4 <LCD_SendCmd>
    LCD_SendCmd(0x0C);  // Bật màn hình, tắt con trỏ
 8000282:	200c      	movs	r0, #12
 8000284:	f7ff ffae 	bl	80001e4 <LCD_SendCmd>
    LCD_SendCmd(0x06);  // Tăng địa chỉ con trỏ sau khi ghi
 8000288:	2006      	movs	r0, #6
 800028a:	f7ff ffab 	bl	80001e4 <LCD_SendCmd>
    LCD_SendCmd(0x01);  // Xóa màn hình
 800028e:	2001      	movs	r0, #1
 8000290:	f7ff ffa8 	bl	80001e4 <LCD_SendCmd>
    HAL_Delay(10);
 8000294:	200a      	movs	r0, #10
 8000296:	f000 ff93 	bl	80011c0 <HAL_Delay>
}
 800029a:	bf00      	nop
 800029c:	bd80      	pop	{r7, pc}

0800029e <LCD_Print>:

// Hiển thị chuỗi ký tự trên LCD
void LCD_Print(char *str) {
 800029e:	b580      	push	{r7, lr}
 80002a0:	b082      	sub	sp, #8
 80002a2:	af00      	add	r7, sp, #0
 80002a4:	6078      	str	r0, [r7, #4]
    while (*str) {
 80002a6:	e006      	b.n	80002b6 <LCD_Print+0x18>
        LCD_SendData(*str++);
 80002a8:	687b      	ldr	r3, [r7, #4]
 80002aa:	1c5a      	adds	r2, r3, #1
 80002ac:	607a      	str	r2, [r7, #4]
 80002ae:	781b      	ldrb	r3, [r3, #0]
 80002b0:	4618      	mov	r0, r3
 80002b2:	f7ff ffb9 	bl	8000228 <LCD_SendData>
    while (*str) {
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	781b      	ldrb	r3, [r3, #0]
 80002ba:	2b00      	cmp	r3, #0
 80002bc:	d1f4      	bne.n	80002a8 <LCD_Print+0xa>
    }
}
 80002be:	bf00      	nop
 80002c0:	bf00      	nop
 80002c2:	3708      	adds	r7, #8
 80002c4:	46bd      	mov	sp, r7
 80002c6:	bd80      	pop	{r7, pc}

080002c8 <LCD_Clear>:

// Xóa màn hình LCD
void LCD_Clear(void) {
 80002c8:	b580      	push	{r7, lr}
 80002ca:	af00      	add	r7, sp, #0
    LCD_SendCmd(0x01);  // Lệnh xóa màn hình
 80002cc:	2001      	movs	r0, #1
 80002ce:	f7ff ff89 	bl	80001e4 <LCD_SendCmd>
    HAL_Delay(10);       // Đợi cho lệnh hoàn tất
 80002d2:	200a      	movs	r0, #10
 80002d4:	f000 ff74 	bl	80011c0 <HAL_Delay>
}
 80002d8:	bf00      	nop
 80002da:	bd80      	pop	{r7, pc}

080002dc <LCD_SetCursor>:
void LCD_SetCursor(uint8_t row, uint8_t col) {
 80002dc:	b580      	push	{r7, lr}
 80002de:	b084      	sub	sp, #16
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	4603      	mov	r3, r0
 80002e4:	460a      	mov	r2, r1
 80002e6:	71fb      	strb	r3, [r7, #7]
 80002e8:	4613      	mov	r3, r2
 80002ea:	71bb      	strb	r3, [r7, #6]
    uint8_t address;

    // Tính toán địa chỉ dựa trên hàng và cột
    if (row == 0) {
 80002ec:	79fb      	ldrb	r3, [r7, #7]
 80002ee:	2b00      	cmp	r3, #0
 80002f0:	d102      	bne.n	80002f8 <LCD_SetCursor+0x1c>
        address = col;          // Hàng 1, bắt đầu từ địa chỉ 0x00
 80002f2:	79bb      	ldrb	r3, [r7, #6]
 80002f4:	73fb      	strb	r3, [r7, #15]
 80002f6:	e002      	b.n	80002fe <LCD_SetCursor+0x22>
    } else {
        address = 0x40 + col;   // Hàng 2, bắt đầu từ địa chỉ 0x40
 80002f8:	79bb      	ldrb	r3, [r7, #6]
 80002fa:	3340      	adds	r3, #64	@ 0x40
 80002fc:	73fb      	strb	r3, [r7, #15]
    }

    // Gửi lệnh di chuyển con trỏ
    LCD_SendCmd(0x80 | address);
 80002fe:	7bfb      	ldrb	r3, [r7, #15]
 8000300:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8000304:	b2db      	uxtb	r3, r3
 8000306:	4618      	mov	r0, r3
 8000308:	f7ff ff6c 	bl	80001e4 <LCD_SendCmd>
}
 800030c:	bf00      	nop
 800030e:	3710      	adds	r7, #16
 8000310:	46bd      	mov	sp, r7
 8000312:	bd80      	pop	{r7, pc}

08000314 <LCD_CursorBlink>:
// Gửi lệnh để bật con trỏ và làm nó nhấp nháy
void LCD_CursorBlink(void) {
 8000314:	b580      	push	{r7, lr}
 8000316:	af00      	add	r7, sp, #0
    LCD_SendCmd(0x0F); // Lệnh để bật màn hình, con trỏ và nhấp nháy
 8000318:	200f      	movs	r0, #15
 800031a:	f7ff ff63 	bl	80001e4 <LCD_SendCmd>
}
 800031e:	bf00      	nop
 8000320:	bd80      	pop	{r7, pc}

08000322 <LCD_DisableCursorBlink>:

// Gửi lệnh để tắt con trỏ nhấp nháy
void LCD_DisableCursorBlink(void) {
 8000322:	b580      	push	{r7, lr}
 8000324:	af00      	add	r7, sp, #0
    LCD_SendCmd(0x0C); // Lệnh để tắt con trỏ và nhấp nháy
 8000326:	200c      	movs	r0, #12
 8000328:	f7ff ff5c 	bl	80001e4 <LCD_SendCmd>
}
 800032c:	bf00      	nop
 800032e:	bd80      	pop	{r7, pc}

08000330 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000330:	b580      	push	{r7, lr}
 8000332:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000334:	f000 fee2 	bl	80010fc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000338:	f000 f809 	bl	800034e <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800033c:	f000 f8b0 	bl	80004a0 <MX_GPIO_Init>
  MX_TIM2_Init();
 8000340:	f000 f84a 	bl	80003d8 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */




	  Reset_LCD();
 8000344:	f000 f91a 	bl	800057c <Reset_LCD>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
   KeyPad();
 8000348:	f000 fb5a 	bl	8000a00 <KeyPad>
 800034c:	e7fc      	b.n	8000348 <main+0x18>

0800034e <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800034e:	b580      	push	{r7, lr}
 8000350:	b090      	sub	sp, #64	@ 0x40
 8000352:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000354:	f107 0318 	add.w	r3, r7, #24
 8000358:	2228      	movs	r2, #40	@ 0x28
 800035a:	2100      	movs	r1, #0
 800035c:	4618      	mov	r0, r3
 800035e:	f002 f915 	bl	800258c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000362:	1d3b      	adds	r3, r7, #4
 8000364:	2200      	movs	r2, #0
 8000366:	601a      	str	r2, [r3, #0]
 8000368:	605a      	str	r2, [r3, #4]
 800036a:	609a      	str	r2, [r3, #8]
 800036c:	60da      	str	r2, [r3, #12]
 800036e:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000370:	2301      	movs	r3, #1
 8000372:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000374:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000378:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 800037a:	2300      	movs	r3, #0
 800037c:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800037e:	2301      	movs	r3, #1
 8000380:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000382:	2302      	movs	r3, #2
 8000384:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000386:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800038a:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 800038c:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 8000390:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000392:	f107 0318 	add.w	r3, r7, #24
 8000396:	4618      	mov	r0, r3
 8000398:	f001 f9ce 	bl	8001738 <HAL_RCC_OscConfig>
 800039c:	4603      	mov	r3, r0
 800039e:	2b00      	cmp	r3, #0
 80003a0:	d001      	beq.n	80003a6 <SystemClock_Config+0x58>
  {
    Error_Handler();
 80003a2:	f000 fdff 	bl	8000fa4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80003a6:	230f      	movs	r3, #15
 80003a8:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80003aa:	2302      	movs	r3, #2
 80003ac:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80003ae:	2300      	movs	r3, #0
 80003b0:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80003b2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80003b6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80003b8:	2300      	movs	r3, #0
 80003ba:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80003bc:	1d3b      	adds	r3, r7, #4
 80003be:	2102      	movs	r1, #2
 80003c0:	4618      	mov	r0, r3
 80003c2:	f001 fc3b 	bl	8001c3c <HAL_RCC_ClockConfig>
 80003c6:	4603      	mov	r3, r0
 80003c8:	2b00      	cmp	r3, #0
 80003ca:	d001      	beq.n	80003d0 <SystemClock_Config+0x82>
  {
    Error_Handler();
 80003cc:	f000 fdea 	bl	8000fa4 <Error_Handler>
  }
}
 80003d0:	bf00      	nop
 80003d2:	3740      	adds	r7, #64	@ 0x40
 80003d4:	46bd      	mov	sp, r7
 80003d6:	bd80      	pop	{r7, pc}

080003d8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80003d8:	b580      	push	{r7, lr}
 80003da:	b08c      	sub	sp, #48	@ 0x30
 80003dc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80003de:	f107 0320 	add.w	r3, r7, #32
 80003e2:	2200      	movs	r2, #0
 80003e4:	601a      	str	r2, [r3, #0]
 80003e6:	605a      	str	r2, [r3, #4]
 80003e8:	609a      	str	r2, [r3, #8]
 80003ea:	60da      	str	r2, [r3, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 80003ec:	f107 030c 	add.w	r3, r7, #12
 80003f0:	2200      	movs	r2, #0
 80003f2:	601a      	str	r2, [r3, #0]
 80003f4:	605a      	str	r2, [r3, #4]
 80003f6:	609a      	str	r2, [r3, #8]
 80003f8:	60da      	str	r2, [r3, #12]
 80003fa:	611a      	str	r2, [r3, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80003fc:	1d3b      	adds	r3, r7, #4
 80003fe:	2200      	movs	r2, #0
 8000400:	601a      	str	r2, [r3, #0]
 8000402:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000404:	4b25      	ldr	r3, [pc, #148]	@ (800049c <MX_TIM2_Init+0xc4>)
 8000406:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800040a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 800040c:	4b23      	ldr	r3, [pc, #140]	@ (800049c <MX_TIM2_Init+0xc4>)
 800040e:	2200      	movs	r2, #0
 8000410:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000412:	4b22      	ldr	r3, [pc, #136]	@ (800049c <MX_TIM2_Init+0xc4>)
 8000414:	2200      	movs	r2, #0
 8000416:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 65535;
 8000418:	4b20      	ldr	r3, [pc, #128]	@ (800049c <MX_TIM2_Init+0xc4>)
 800041a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800041e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000420:	4b1e      	ldr	r3, [pc, #120]	@ (800049c <MX_TIM2_Init+0xc4>)
 8000422:	2200      	movs	r2, #0
 8000424:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000426:	4b1d      	ldr	r3, [pc, #116]	@ (800049c <MX_TIM2_Init+0xc4>)
 8000428:	2200      	movs	r2, #0
 800042a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800042c:	481b      	ldr	r0, [pc, #108]	@ (800049c <MX_TIM2_Init+0xc4>)
 800042e:	f001 fd61 	bl	8001ef4 <HAL_TIM_Base_Init>
 8000432:	4603      	mov	r3, r0
 8000434:	2b00      	cmp	r3, #0
 8000436:	d001      	beq.n	800043c <MX_TIM2_Init+0x64>
  {
    Error_Handler();
 8000438:	f000 fdb4 	bl	8000fa4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800043c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000440:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000442:	f107 0320 	add.w	r3, r7, #32
 8000446:	4619      	mov	r1, r3
 8000448:	4814      	ldr	r0, [pc, #80]	@ (800049c <MX_TIM2_Init+0xc4>)
 800044a:	f001 fda2 	bl	8001f92 <HAL_TIM_ConfigClockSource>
 800044e:	4603      	mov	r3, r0
 8000450:	2b00      	cmp	r3, #0
 8000452:	d001      	beq.n	8000458 <MX_TIM2_Init+0x80>
  {
    Error_Handler();
 8000454:	f000 fda6 	bl	8000fa4 <Error_Handler>
  }
  sSlaveConfig.SlaveMode = TIM_SLAVEMODE_DISABLE;
 8000458:	2300      	movs	r3, #0
 800045a:	60fb      	str	r3, [r7, #12]
  sSlaveConfig.InputTrigger = TIM_TS_ITR2;
 800045c:	2320      	movs	r3, #32
 800045e:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_SlaveConfigSynchro(&htim2, &sSlaveConfig) != HAL_OK)
 8000460:	f107 030c 	add.w	r3, r7, #12
 8000464:	4619      	mov	r1, r3
 8000466:	480d      	ldr	r0, [pc, #52]	@ (800049c <MX_TIM2_Init+0xc4>)
 8000468:	f001 fe5a 	bl	8002120 <HAL_TIM_SlaveConfigSynchro>
 800046c:	4603      	mov	r3, r0
 800046e:	2b00      	cmp	r3, #0
 8000470:	d001      	beq.n	8000476 <MX_TIM2_Init+0x9e>
  {
    Error_Handler();
 8000472:	f000 fd97 	bl	8000fa4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000476:	2300      	movs	r3, #0
 8000478:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800047a:	2300      	movs	r3, #0
 800047c:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800047e:	1d3b      	adds	r3, r7, #4
 8000480:	4619      	mov	r1, r3
 8000482:	4806      	ldr	r0, [pc, #24]	@ (800049c <MX_TIM2_Init+0xc4>)
 8000484:	f002 f824 	bl	80024d0 <HAL_TIMEx_MasterConfigSynchronization>
 8000488:	4603      	mov	r3, r0
 800048a:	2b00      	cmp	r3, #0
 800048c:	d001      	beq.n	8000492 <MX_TIM2_Init+0xba>
  {
    Error_Handler();
 800048e:	f000 fd89 	bl	8000fa4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000492:	bf00      	nop
 8000494:	3730      	adds	r7, #48	@ 0x30
 8000496:	46bd      	mov	sp, r7
 8000498:	bd80      	pop	{r7, pc}
 800049a:	bf00      	nop
 800049c:	20000048 	.word	0x20000048

080004a0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80004a0:	b580      	push	{r7, lr}
 80004a2:	b088      	sub	sp, #32
 80004a4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80004a6:	f107 0310 	add.w	r3, r7, #16
 80004aa:	2200      	movs	r2, #0
 80004ac:	601a      	str	r2, [r3, #0]
 80004ae:	605a      	str	r2, [r3, #4]
 80004b0:	609a      	str	r2, [r3, #8]
 80004b2:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80004b4:	4b2e      	ldr	r3, [pc, #184]	@ (8000570 <MX_GPIO_Init+0xd0>)
 80004b6:	699b      	ldr	r3, [r3, #24]
 80004b8:	4a2d      	ldr	r2, [pc, #180]	@ (8000570 <MX_GPIO_Init+0xd0>)
 80004ba:	f043 0320 	orr.w	r3, r3, #32
 80004be:	6193      	str	r3, [r2, #24]
 80004c0:	4b2b      	ldr	r3, [pc, #172]	@ (8000570 <MX_GPIO_Init+0xd0>)
 80004c2:	699b      	ldr	r3, [r3, #24]
 80004c4:	f003 0320 	and.w	r3, r3, #32
 80004c8:	60fb      	str	r3, [r7, #12]
 80004ca:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80004cc:	4b28      	ldr	r3, [pc, #160]	@ (8000570 <MX_GPIO_Init+0xd0>)
 80004ce:	699b      	ldr	r3, [r3, #24]
 80004d0:	4a27      	ldr	r2, [pc, #156]	@ (8000570 <MX_GPIO_Init+0xd0>)
 80004d2:	f043 0304 	orr.w	r3, r3, #4
 80004d6:	6193      	str	r3, [r2, #24]
 80004d8:	4b25      	ldr	r3, [pc, #148]	@ (8000570 <MX_GPIO_Init+0xd0>)
 80004da:	699b      	ldr	r3, [r3, #24]
 80004dc:	f003 0304 	and.w	r3, r3, #4
 80004e0:	60bb      	str	r3, [r7, #8]
 80004e2:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80004e4:	4b22      	ldr	r3, [pc, #136]	@ (8000570 <MX_GPIO_Init+0xd0>)
 80004e6:	699b      	ldr	r3, [r3, #24]
 80004e8:	4a21      	ldr	r2, [pc, #132]	@ (8000570 <MX_GPIO_Init+0xd0>)
 80004ea:	f043 0308 	orr.w	r3, r3, #8
 80004ee:	6193      	str	r3, [r2, #24]
 80004f0:	4b1f      	ldr	r3, [pc, #124]	@ (8000570 <MX_GPIO_Init+0xd0>)
 80004f2:	699b      	ldr	r3, [r3, #24]
 80004f4:	f003 0308 	and.w	r3, r3, #8
 80004f8:	607b      	str	r3, [r7, #4]
 80004fa:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80004fc:	2200      	movs	r2, #0
 80004fe:	f248 01ff 	movw	r1, #33023	@ 0x80ff
 8000502:	481c      	ldr	r0, [pc, #112]	@ (8000574 <MX_GPIO_Init+0xd4>)
 8000504:	f001 f8ff 	bl	8001706 <HAL_GPIO_WritePin>
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7
                          |GPIO_PIN_15, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10
 8000508:	2200      	movs	r2, #0
 800050a:	f640 710f 	movw	r1, #3855	@ 0xf0f
 800050e:	481a      	ldr	r0, [pc, #104]	@ (8000578 <MX_GPIO_Init+0xd8>)
 8000510:	f001 f8f9 	bl	8001706 <HAL_GPIO_WritePin>
                          |GPIO_PIN_11|GPIO_PIN_3|GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);

  /*Configure GPIO pins : PA0 PA1 PA2 PA3
                           PA4 PA5 PA6 PA7
                           PA15 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8000514:	f248 03ff 	movw	r3, #33023	@ 0x80ff
 8000518:	613b      	str	r3, [r7, #16]
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7
                          |GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800051a:	2301      	movs	r3, #1
 800051c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800051e:	2300      	movs	r3, #0
 8000520:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000522:	2302      	movs	r3, #2
 8000524:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000526:	f107 0310 	add.w	r3, r7, #16
 800052a:	4619      	mov	r1, r3
 800052c:	4811      	ldr	r0, [pc, #68]	@ (8000574 <MX_GPIO_Init+0xd4>)
 800052e:	f000 ff4f 	bl	80013d0 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB0 PB1 PB2 PB10
                           PB11 PB3 PB8 PB9 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10
 8000532:	f640 730f 	movw	r3, #3855	@ 0xf0f
 8000536:	613b      	str	r3, [r7, #16]
                          |GPIO_PIN_11|GPIO_PIN_3|GPIO_PIN_8|GPIO_PIN_9;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000538:	2301      	movs	r3, #1
 800053a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800053c:	2300      	movs	r3, #0
 800053e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000540:	2302      	movs	r3, #2
 8000542:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000544:	f107 0310 	add.w	r3, r7, #16
 8000548:	4619      	mov	r1, r3
 800054a:	480b      	ldr	r0, [pc, #44]	@ (8000578 <MX_GPIO_Init+0xd8>)
 800054c:	f000 ff40 	bl	80013d0 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB4 PB5 PB6 PB7 */
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8000550:	23f0      	movs	r3, #240	@ 0xf0
 8000552:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000554:	2300      	movs	r3, #0
 8000556:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000558:	2301      	movs	r3, #1
 800055a:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800055c:	f107 0310 	add.w	r3, r7, #16
 8000560:	4619      	mov	r1, r3
 8000562:	4805      	ldr	r0, [pc, #20]	@ (8000578 <MX_GPIO_Init+0xd8>)
 8000564:	f000 ff34 	bl	80013d0 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000568:	bf00      	nop
 800056a:	3720      	adds	r7, #32
 800056c:	46bd      	mov	sp, r7
 800056e:	bd80      	pop	{r7, pc}
 8000570:	40021000 	.word	0x40021000
 8000574:	40010800 	.word	0x40010800
 8000578:	40010c00 	.word	0x40010c00

0800057c <Reset_LCD>:

/* USER CODE BEGIN 4 */
//------------------------------------------------
// RESTART WITH LCD.
     void Reset_LCD(){   //DEFAULT SCREEN.
 800057c:	b580      	push	{r7, lr}
 800057e:	af00      	add	r7, sp, #0
       x = 1 ;
 8000580:	4b16      	ldr	r3, [pc, #88]	@ (80005dc <Reset_LCD+0x60>)
 8000582:	2201      	movs	r2, #1
 8000584:	701a      	strb	r2, [r3, #0]
       y = 9 ;
 8000586:	4b16      	ldr	r3, [pc, #88]	@ (80005e0 <Reset_LCD+0x64>)
 8000588:	2209      	movs	r2, #9
 800058a:	701a      	strb	r2, [r3, #0]
       LCD_Init();
 800058c:	f7ff fe6e 	bl	800026c <LCD_Init>
       LCD_SetCursor(0,4);
 8000590:	2104      	movs	r1, #4
 8000592:	2000      	movs	r0, #0
 8000594:	f7ff fea2 	bl	80002dc <LCD_SetCursor>
	   LCD_Print("WELLCOME!");
 8000598:	4812      	ldr	r0, [pc, #72]	@ (80005e4 <Reset_LCD+0x68>)
 800059a:	f7ff fe80 	bl	800029e <LCD_Print>
	   HAL_Delay(50);
 800059e:	2032      	movs	r0, #50	@ 0x32
 80005a0:	f000 fe0e 	bl	80011c0 <HAL_Delay>
	   LCD_SetCursor(1,0);
 80005a4:	2100      	movs	r1, #0
 80005a6:	2001      	movs	r0, #1
 80005a8:	f7ff fe98 	bl	80002dc <LCD_SetCursor>
	   LCD_Print("PASSCODE:");
 80005ac:	480e      	ldr	r0, [pc, #56]	@ (80005e8 <Reset_LCD+0x6c>)
 80005ae:	f7ff fe76 	bl	800029e <LCD_Print>
	   LCD_SetCursor(1,9);
 80005b2:	2109      	movs	r1, #9
 80005b4:	2001      	movs	r0, #1
 80005b6:	f7ff fe91 	bl	80002dc <LCD_SetCursor>
	   LCD_CursorBlink();
 80005ba:	f7ff feab 	bl	8000314 <LCD_CursorBlink>
	   count = 0;
 80005be:	4b0b      	ldr	r3, [pc, #44]	@ (80005ec <Reset_LCD+0x70>)
 80005c0:	2200      	movs	r2, #0
 80005c2:	701a      	strb	r2, [r3, #0]
    	x = 1 ;
 80005c4:	4b05      	ldr	r3, [pc, #20]	@ (80005dc <Reset_LCD+0x60>)
 80005c6:	2201      	movs	r2, #1
 80005c8:	701a      	strb	r2, [r3, #0]
        y = 9 ;
 80005ca:	4b05      	ldr	r3, [pc, #20]	@ (80005e0 <Reset_LCD+0x64>)
 80005cc:	2209      	movs	r2, #9
 80005ce:	701a      	strb	r2, [r3, #0]
        Check_Mode = 0;
 80005d0:	4b07      	ldr	r3, [pc, #28]	@ (80005f0 <Reset_LCD+0x74>)
 80005d2:	2200      	movs	r2, #0
 80005d4:	701a      	strb	r2, [r3, #0]
     }
 80005d6:	bf00      	nop
 80005d8:	bd80      	pop	{r7, pc}
 80005da:	bf00      	nop
 80005dc:	20000006 	.word	0x20000006
 80005e0:	20000007 	.word	0x20000007
 80005e4:	080025fc 	.word	0x080025fc
 80005e8:	08002608 	.word	0x08002608
 80005ec:	2000003a 	.word	0x2000003a
 80005f0:	2000003e 	.word	0x2000003e

080005f4 <Read_Keypad>:
     // WRITE DATA TO ARRAY.
     	  void Read_Keypad(int key){
 80005f4:	b480      	push	{r7}
 80005f6:	b083      	sub	sp, #12
 80005f8:	af00      	add	r7, sp, #0
 80005fa:	6078      	str	r0, [r7, #4]
     	  	if(count < 6){
 80005fc:	4b15      	ldr	r3, [pc, #84]	@ (8000654 <Read_Keypad+0x60>)
 80005fe:	781b      	ldrb	r3, [r3, #0]
 8000600:	2b05      	cmp	r3, #5
 8000602:	d821      	bhi.n	8000648 <Read_Keypad+0x54>
     	  	    enter_passcode[count] = key;
 8000604:	4b13      	ldr	r3, [pc, #76]	@ (8000654 <Read_Keypad+0x60>)
 8000606:	781b      	ldrb	r3, [r3, #0]
 8000608:	461a      	mov	r2, r3
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	b2d9      	uxtb	r1, r3
 800060e:	4b12      	ldr	r3, [pc, #72]	@ (8000658 <Read_Keypad+0x64>)
 8000610:	5499      	strb	r1, [r3, r2]
     	  	    if(flag_new_pass)
 8000612:	4b12      	ldr	r3, [pc, #72]	@ (800065c <Read_Keypad+0x68>)
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	2b00      	cmp	r3, #0
 8000618:	d010      	beq.n	800063c <Read_Keypad+0x48>
     	  	    {
     	  	    	passcode[count]=key;
 800061a:	4b0e      	ldr	r3, [pc, #56]	@ (8000654 <Read_Keypad+0x60>)
 800061c:	781b      	ldrb	r3, [r3, #0]
 800061e:	461a      	mov	r2, r3
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	b2d9      	uxtb	r1, r3
 8000624:	4b0e      	ldr	r3, [pc, #56]	@ (8000660 <Read_Keypad+0x6c>)
 8000626:	5499      	strb	r1, [r3, r2]
     	  	    	if(count==5)
 8000628:	4b0a      	ldr	r3, [pc, #40]	@ (8000654 <Read_Keypad+0x60>)
 800062a:	781b      	ldrb	r3, [r3, #0]
 800062c:	2b05      	cmp	r3, #5
 800062e:	d102      	bne.n	8000636 <Read_Keypad+0x42>
     	  	    		flag_new_pass=0;
 8000630:	4b0a      	ldr	r3, [pc, #40]	@ (800065c <Read_Keypad+0x68>)
 8000632:	2200      	movs	r2, #0
 8000634:	601a      	str	r2, [r3, #0]
     	  	    	    flag_announce_success = 1;
 8000636:	4b0b      	ldr	r3, [pc, #44]	@ (8000664 <Read_Keypad+0x70>)
 8000638:	2201      	movs	r2, #1
 800063a:	601a      	str	r2, [r3, #0]

     	  	    }
     	  	    count++;
 800063c:	4b05      	ldr	r3, [pc, #20]	@ (8000654 <Read_Keypad+0x60>)
 800063e:	781b      	ldrb	r3, [r3, #0]
 8000640:	3301      	adds	r3, #1
 8000642:	b2da      	uxtb	r2, r3
 8000644:	4b03      	ldr	r3, [pc, #12]	@ (8000654 <Read_Keypad+0x60>)
 8000646:	701a      	strb	r2, [r3, #0]
     	  	 }
     	  }
 8000648:	bf00      	nop
 800064a:	370c      	adds	r7, #12
 800064c:	46bd      	mov	sp, r7
 800064e:	bc80      	pop	{r7}
 8000650:	4770      	bx	lr
 8000652:	bf00      	nop
 8000654:	2000003a 	.word	0x2000003a
 8000658:	20000034 	.word	0x20000034
 800065c:	20000040 	.word	0x20000040
 8000660:	20000000 	.word	0x20000000
 8000664:	20000044 	.word	0x20000044

08000668 <Default_Change_Screen>:
     	 //--------------------------------------------
     	 	  // Change passcode if need.
     	 	  void Default_Change_Screen(){
 8000668:	b580      	push	{r7, lr}
 800066a:	af00      	add	r7, sp, #0
     	 		  //Initial.
     	 		  Check_Mode = 1;
 800066c:	4b12      	ldr	r3, [pc, #72]	@ (80006b8 <Default_Change_Screen+0x50>)
 800066e:	2201      	movs	r2, #1
 8000670:	701a      	strb	r2, [r3, #0]
     	 		  count = 0;
 8000672:	4b12      	ldr	r3, [pc, #72]	@ (80006bc <Default_Change_Screen+0x54>)
 8000674:	2200      	movs	r2, #0
 8000676:	701a      	strb	r2, [r3, #0]
     	 		  LCD_Clear();
 8000678:	f7ff fe26 	bl	80002c8 <LCD_Clear>
     	 		  LCD_Print("Waiting...");
 800067c:	4810      	ldr	r0, [pc, #64]	@ (80006c0 <Default_Change_Screen+0x58>)
 800067e:	f7ff fe0e 	bl	800029e <LCD_Print>
     	 		  LCD_DisableCursorBlink();
 8000682:	f7ff fe4e 	bl	8000322 <LCD_DisableCursorBlink>
     	 		  HAL_Delay(1000);
 8000686:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800068a:	f000 fd99 	bl	80011c0 <HAL_Delay>
     	 		  LCD_Clear();
 800068e:	f7ff fe1b 	bl	80002c8 <LCD_Clear>
     	 		  LCD_SetCursor(0,0);
 8000692:	2100      	movs	r1, #0
 8000694:	2000      	movs	r0, #0
 8000696:	f7ff fe21 	bl	80002dc <LCD_SetCursor>
     	 		  LCD_Print("Enter Old Pass");
 800069a:	480a      	ldr	r0, [pc, #40]	@ (80006c4 <Default_Change_Screen+0x5c>)
 800069c:	f7ff fdff 	bl	800029e <LCD_Print>
     	 		  LCD_SetCursor(1,1);
 80006a0:	2101      	movs	r1, #1
 80006a2:	2001      	movs	r0, #1
 80006a4:	f7ff fe1a 	bl	80002dc <LCD_SetCursor>
     	 		  LCD_Print("=>");
 80006a8:	4807      	ldr	r0, [pc, #28]	@ (80006c8 <Default_Change_Screen+0x60>)
 80006aa:	f7ff fdf8 	bl	800029e <LCD_Print>
     	 		  LCD_CursorBlink();
 80006ae:	f7ff fe31 	bl	8000314 <LCD_CursorBlink>
     	 	  }
 80006b2:	bf00      	nop
 80006b4:	bd80      	pop	{r7, pc}
 80006b6:	bf00      	nop
 80006b8:	2000003e 	.word	0x2000003e
 80006bc:	2000003a 	.word	0x2000003a
 80006c0:	08002614 	.word	0x08002614
 80006c4:	08002620 	.word	0x08002620
 80006c8:	08002630 	.word	0x08002630

080006cc <Change_Passcode>:
     	 	  void Change_Passcode(){
 80006cc:	b580      	push	{r7, lr}
 80006ce:	af00      	add	r7, sp, #0
     	 		  Default_Change_Screen();
 80006d0:	f7ff ffca 	bl	8000668 <Default_Change_Screen>
                  x = 1;
 80006d4:	4b03      	ldr	r3, [pc, #12]	@ (80006e4 <Change_Passcode+0x18>)
 80006d6:	2201      	movs	r2, #1
 80006d8:	701a      	strb	r2, [r3, #0]
                  y = 3;
 80006da:	4b03      	ldr	r3, [pc, #12]	@ (80006e8 <Change_Passcode+0x1c>)
 80006dc:	2203      	movs	r2, #3
 80006de:	701a      	strb	r2, [r3, #0]
     	 	  }
 80006e0:	bf00      	nop
 80006e2:	bd80      	pop	{r7, pc}
 80006e4:	20000006 	.word	0x20000006
 80006e8:	20000007 	.word	0x20000007

080006ec <Check_Old_Passcode>:
     	 	  //--------------------------------------------
     	 	  // CHECK OLD PASSCODE.
     	 	  void Check_Old_Passcode(){
 80006ec:	b580      	push	{r7, lr}
 80006ee:	b082      	sub	sp, #8
 80006f0:	af00      	add	r7, sp, #0
     	 		  check_old = 1;
 80006f2:	4b31      	ldr	r3, [pc, #196]	@ (80007b8 <Check_Old_Passcode+0xcc>)
 80006f4:	2201      	movs	r2, #1
 80006f6:	701a      	strb	r2, [r3, #0]
     	 		  for(int i = 0; i < 6; i++){
 80006f8:	2300      	movs	r3, #0
 80006fa:	607b      	str	r3, [r7, #4]
 80006fc:	e01f      	b.n	800073e <Check_Old_Passcode+0x52>
     	 		  	 if(passcode[i] != enter_passcode[i]){
 80006fe:	4a2f      	ldr	r2, [pc, #188]	@ (80007bc <Check_Old_Passcode+0xd0>)
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	4413      	add	r3, r2
 8000704:	781a      	ldrb	r2, [r3, #0]
 8000706:	492e      	ldr	r1, [pc, #184]	@ (80007c0 <Check_Old_Passcode+0xd4>)
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	440b      	add	r3, r1
 800070c:	781b      	ldrb	r3, [r3, #0]
 800070e:	429a      	cmp	r2, r3
 8000710:	d003      	beq.n	800071a <Check_Old_Passcode+0x2e>
     	 		  	    check_old  =  0;
 8000712:	4b29      	ldr	r3, [pc, #164]	@ (80007b8 <Check_Old_Passcode+0xcc>)
 8000714:	2200      	movs	r2, #0
 8000716:	701a      	strb	r2, [r3, #0]
     	 		  	  	break;
 8000718:	e014      	b.n	8000744 <Check_Old_Passcode+0x58>
     	 		  	 }else if(count < 5 || count > 6){
 800071a:	4b2a      	ldr	r3, [pc, #168]	@ (80007c4 <Check_Old_Passcode+0xd8>)
 800071c:	781b      	ldrb	r3, [r3, #0]
 800071e:	2b04      	cmp	r3, #4
 8000720:	d903      	bls.n	800072a <Check_Old_Passcode+0x3e>
 8000722:	4b28      	ldr	r3, [pc, #160]	@ (80007c4 <Check_Old_Passcode+0xd8>)
 8000724:	781b      	ldrb	r3, [r3, #0]
 8000726:	2b06      	cmp	r3, #6
 8000728:	d903      	bls.n	8000732 <Check_Old_Passcode+0x46>
     	 		  	  	   check_old = 0;
 800072a:	4b23      	ldr	r3, [pc, #140]	@ (80007b8 <Check_Old_Passcode+0xcc>)
 800072c:	2200      	movs	r2, #0
 800072e:	701a      	strb	r2, [r3, #0]
     	 		  	  	   break;
 8000730:	e008      	b.n	8000744 <Check_Old_Passcode+0x58>
     	 		      }else {
     	 		    	   check_old = 1;
 8000732:	4b21      	ldr	r3, [pc, #132]	@ (80007b8 <Check_Old_Passcode+0xcc>)
 8000734:	2201      	movs	r2, #1
 8000736:	701a      	strb	r2, [r3, #0]
     	 		  for(int i = 0; i < 6; i++){
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	3301      	adds	r3, #1
 800073c:	607b      	str	r3, [r7, #4]
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	2b05      	cmp	r3, #5
 8000742:	dddc      	ble.n	80006fe <Check_Old_Passcode+0x12>
     	 		      }
     	 		  }
     	 		  if(check_old != 1){
 8000744:	4b1c      	ldr	r3, [pc, #112]	@ (80007b8 <Check_Old_Passcode+0xcc>)
 8000746:	781b      	ldrb	r3, [r3, #0]
 8000748:	2b01      	cmp	r3, #1
 800074a:	d018      	beq.n	800077e <Check_Old_Passcode+0x92>
     	 			LCD_Clear();
 800074c:	f7ff fdbc 	bl	80002c8 <LCD_Clear>
     	 			LCD_SetCursor(0,1);
 8000750:	2101      	movs	r1, #1
 8000752:	2000      	movs	r0, #0
 8000754:	f7ff fdc2 	bl	80002dc <LCD_SetCursor>
     	 			LCD_Print("FALSE,");
 8000758:	481b      	ldr	r0, [pc, #108]	@ (80007c8 <Check_Old_Passcode+0xdc>)
 800075a:	f7ff fda0 	bl	800029e <LCD_Print>
     	 			LCD_SetCursor(1,1);
 800075e:	2101      	movs	r1, #1
 8000760:	2001      	movs	r0, #1
 8000762:	f7ff fdbb 	bl	80002dc <LCD_SetCursor>
     	 			LCD_Print("PLEASE AGAIN !");
 8000766:	4819      	ldr	r0, [pc, #100]	@ (80007cc <Check_Old_Passcode+0xe0>)
 8000768:	f7ff fd99 	bl	800029e <LCD_Print>
     	 			LCD_DisableCursorBlink();
 800076c:	f7ff fdd9 	bl	8000322 <LCD_DisableCursorBlink>
     	 			HAL_Delay(1500);
 8000770:	f240 50dc 	movw	r0, #1500	@ 0x5dc
 8000774:	f000 fd24 	bl	80011c0 <HAL_Delay>
     	 			Change_Passcode();
 8000778:	f7ff ffa8 	bl	80006cc <Change_Passcode>
     	 			  LCD_SetCursor(1,1);
     	 			  LCD_Print("=>");
     	 			  x = 1; y = 3;
     	 			  flag_new_pass=1;
     	 		   }
     	 	  }
 800077c:	e018      	b.n	80007b0 <Check_Old_Passcode+0xc4>
     	 			  LCD_Clear();
 800077e:	f7ff fda3 	bl	80002c8 <LCD_Clear>
     	 			  LCD_SetCursor(0,1);
 8000782:	2101      	movs	r1, #1
 8000784:	2000      	movs	r0, #0
 8000786:	f7ff fda9 	bl	80002dc <LCD_SetCursor>
     	 			  LCD_Print("Enter New Pass");
 800078a:	4811      	ldr	r0, [pc, #68]	@ (80007d0 <Check_Old_Passcode+0xe4>)
 800078c:	f7ff fd87 	bl	800029e <LCD_Print>
     	 			  LCD_SetCursor(1,1);
 8000790:	2101      	movs	r1, #1
 8000792:	2001      	movs	r0, #1
 8000794:	f7ff fda2 	bl	80002dc <LCD_SetCursor>
     	 			  LCD_Print("=>");
 8000798:	480e      	ldr	r0, [pc, #56]	@ (80007d4 <Check_Old_Passcode+0xe8>)
 800079a:	f7ff fd80 	bl	800029e <LCD_Print>
     	 			  x = 1; y = 3;
 800079e:	4b0e      	ldr	r3, [pc, #56]	@ (80007d8 <Check_Old_Passcode+0xec>)
 80007a0:	2201      	movs	r2, #1
 80007a2:	701a      	strb	r2, [r3, #0]
 80007a4:	4b0d      	ldr	r3, [pc, #52]	@ (80007dc <Check_Old_Passcode+0xf0>)
 80007a6:	2203      	movs	r2, #3
 80007a8:	701a      	strb	r2, [r3, #0]
     	 			  flag_new_pass=1;
 80007aa:	4b0d      	ldr	r3, [pc, #52]	@ (80007e0 <Check_Old_Passcode+0xf4>)
 80007ac:	2201      	movs	r2, #1
 80007ae:	601a      	str	r2, [r3, #0]
     	 	  }
 80007b0:	bf00      	nop
 80007b2:	3708      	adds	r7, #8
 80007b4:	46bd      	mov	sp, r7
 80007b6:	bd80      	pop	{r7, pc}
 80007b8:	2000003d 	.word	0x2000003d
 80007bc:	20000000 	.word	0x20000000
 80007c0:	20000034 	.word	0x20000034
 80007c4:	2000003a 	.word	0x2000003a
 80007c8:	08002634 	.word	0x08002634
 80007cc:	0800263c 	.word	0x0800263c
 80007d0:	0800264c 	.word	0x0800264c
 80007d4:	08002630 	.word	0x08002630
 80007d8:	20000006 	.word	0x20000006
 80007dc:	20000007 	.word	0x20000007
 80007e0:	20000040 	.word	0x20000040

080007e4 <Screen_Success>:
              void Screen_Success(){
 80007e4:	b580      	push	{r7, lr}
 80007e6:	af00      	add	r7, sp, #0
            	  LCD_Clear();
 80007e8:	f7ff fd6e 	bl	80002c8 <LCD_Clear>
            	  LCD_SetCursor(0,1);
 80007ec:	2101      	movs	r1, #1
 80007ee:	2000      	movs	r0, #0
 80007f0:	f7ff fd74 	bl	80002dc <LCD_SetCursor>
            	  LCD_Print("Waiting...");
 80007f4:	480b      	ldr	r0, [pc, #44]	@ (8000824 <Screen_Success+0x40>)
 80007f6:	f7ff fd52 	bl	800029e <LCD_Print>
            	  HAL_Delay(300);
 80007fa:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 80007fe:	f000 fcdf 	bl	80011c0 <HAL_Delay>
            	  LCD_Clear();
 8000802:	f7ff fd61 	bl	80002c8 <LCD_Clear>
            	  LCD_SetCursor(0,1);
 8000806:	2101      	movs	r1, #1
 8000808:	2000      	movs	r0, #0
 800080a:	f7ff fd67 	bl	80002dc <LCD_SetCursor>
            	  LCD_Print("SUCESSFUL !!");
 800080e:	4806      	ldr	r0, [pc, #24]	@ (8000828 <Screen_Success+0x44>)
 8000810:	f7ff fd45 	bl	800029e <LCD_Print>
            	  HAL_Delay(300);
 8000814:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000818:	f000 fcd2 	bl	80011c0 <HAL_Delay>
            	  Reset_LCD();
 800081c:	f7ff feae 	bl	800057c <Reset_LCD>
              }
 8000820:	bf00      	nop
 8000822:	bd80      	pop	{r7, pc}
 8000824:	08002614 	.word	0x08002614
 8000828:	0800265c 	.word	0x0800265c

0800082c <Xu_Ly_Mat_Khau>:
     	 	  //---------------------------------------------
     	 	  //CHECK PASSCODE to OPEN THE DOOR.
     	 	  void Xu_Ly_Mat_Khau(){
 800082c:	b580      	push	{r7, lr}
 800082e:	b082      	sub	sp, #8
 8000830:	af00      	add	r7, sp, #0
     	 		  check = 1;
 8000832:	4b67      	ldr	r3, [pc, #412]	@ (80009d0 <Xu_Ly_Mat_Khau+0x1a4>)
 8000834:	2201      	movs	r2, #1
 8000836:	701a      	strb	r2, [r3, #0]
     	 	  	for(int i = 0; i < 6; i++){
 8000838:	2300      	movs	r3, #0
 800083a:	607b      	str	r3, [r7, #4]
 800083c:	e01c      	b.n	8000878 <Xu_Ly_Mat_Khau+0x4c>
     	 	  	  if(passcode[i] != enter_passcode[i]){
 800083e:	4a65      	ldr	r2, [pc, #404]	@ (80009d4 <Xu_Ly_Mat_Khau+0x1a8>)
 8000840:	687b      	ldr	r3, [r7, #4]
 8000842:	4413      	add	r3, r2
 8000844:	781a      	ldrb	r2, [r3, #0]
 8000846:	4964      	ldr	r1, [pc, #400]	@ (80009d8 <Xu_Ly_Mat_Khau+0x1ac>)
 8000848:	687b      	ldr	r3, [r7, #4]
 800084a:	440b      	add	r3, r1
 800084c:	781b      	ldrb	r3, [r3, #0]
 800084e:	429a      	cmp	r2, r3
 8000850:	d003      	beq.n	800085a <Xu_Ly_Mat_Khau+0x2e>
     	 	  		check  =  0;
 8000852:	4b5f      	ldr	r3, [pc, #380]	@ (80009d0 <Xu_Ly_Mat_Khau+0x1a4>)
 8000854:	2200      	movs	r2, #0
 8000856:	701a      	strb	r2, [r3, #0]
     	 	  		break;
 8000858:	e011      	b.n	800087e <Xu_Ly_Mat_Khau+0x52>
     	 	  		}if(count < 5 || count > 6){
 800085a:	4b60      	ldr	r3, [pc, #384]	@ (80009dc <Xu_Ly_Mat_Khau+0x1b0>)
 800085c:	781b      	ldrb	r3, [r3, #0]
 800085e:	2b04      	cmp	r3, #4
 8000860:	d903      	bls.n	800086a <Xu_Ly_Mat_Khau+0x3e>
 8000862:	4b5e      	ldr	r3, [pc, #376]	@ (80009dc <Xu_Ly_Mat_Khau+0x1b0>)
 8000864:	781b      	ldrb	r3, [r3, #0]
 8000866:	2b06      	cmp	r3, #6
 8000868:	d903      	bls.n	8000872 <Xu_Ly_Mat_Khau+0x46>
     	 	  		   check = 0;
 800086a:	4b59      	ldr	r3, [pc, #356]	@ (80009d0 <Xu_Ly_Mat_Khau+0x1a4>)
 800086c:	2200      	movs	r2, #0
 800086e:	701a      	strb	r2, [r3, #0]
     	 	  		   break;
 8000870:	e005      	b.n	800087e <Xu_Ly_Mat_Khau+0x52>
     	 	  	for(int i = 0; i < 6; i++){
 8000872:	687b      	ldr	r3, [r7, #4]
 8000874:	3301      	adds	r3, #1
 8000876:	607b      	str	r3, [r7, #4]
 8000878:	687b      	ldr	r3, [r7, #4]
 800087a:	2b05      	cmp	r3, #5
 800087c:	dddf      	ble.n	800083e <Xu_Ly_Mat_Khau+0x12>
     	 	  		   }
     	 	  	}
     	 	  	//IF PASSCODE FALSE => ANNOUNCE AND CLOSE THE DOOR.
     	 	  	if(check != 1){
 800087e:	4b54      	ldr	r3, [pc, #336]	@ (80009d0 <Xu_Ly_Mat_Khau+0x1a4>)
 8000880:	781b      	ldrb	r3, [r3, #0]
 8000882:	2b01      	cmp	r3, #1
 8000884:	d045      	beq.n	8000912 <Xu_Ly_Mat_Khau+0xe6>
     	 	  		LCD_Clear();
 8000886:	f7ff fd1f 	bl	80002c8 <LCD_Clear>
     	 	  		GPIOB -> BSRR = (1 << 11);
 800088a:	4b55      	ldr	r3, [pc, #340]	@ (80009e0 <Xu_Ly_Mat_Khau+0x1b4>)
 800088c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8000890:	611a      	str	r2, [r3, #16]
     	 	  		GPIOA -> BSRR = (1 << 2);
 8000892:	4b54      	ldr	r3, [pc, #336]	@ (80009e4 <Xu_Ly_Mat_Khau+0x1b8>)
 8000894:	2204      	movs	r2, #4
 8000896:	611a      	str	r2, [r3, #16]
     	 	  	    HAL_Delay(500);
 8000898:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 800089c:	f000 fc90 	bl	80011c0 <HAL_Delay>
     	 	  		GPIOA -> BSRR = (1 << 18);
 80008a0:	4b50      	ldr	r3, [pc, #320]	@ (80009e4 <Xu_Ly_Mat_Khau+0x1b8>)
 80008a2:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 80008a6:	611a      	str	r2, [r3, #16]
     	 	  	    LCD_SetCursor(0, 5);
 80008a8:	2105      	movs	r1, #5
 80008aa:	2000      	movs	r0, #0
 80008ac:	f7ff fd16 	bl	80002dc <LCD_SetCursor>
     	 	  	    LCD_Print("FAIL,");
 80008b0:	484d      	ldr	r0, [pc, #308]	@ (80009e8 <Xu_Ly_Mat_Khau+0x1bc>)
 80008b2:	f7ff fcf4 	bl	800029e <LCD_Print>
     	 	  		LCD_SetCursor(1, 1);
 80008b6:	2101      	movs	r1, #1
 80008b8:	2001      	movs	r0, #1
 80008ba:	f7ff fd0f 	bl	80002dc <LCD_SetCursor>
     	 	  		LCD_Print("PLEASE AGAIN!");
 80008be:	484b      	ldr	r0, [pc, #300]	@ (80009ec <Xu_Ly_Mat_Khau+0x1c0>)
 80008c0:	f7ff fced 	bl	800029e <LCD_Print>
     	 	  		LCD_DisableCursorBlink();
 80008c4:	f7ff fd2d 	bl	8000322 <LCD_DisableCursorBlink>
     	 	  		HAL_Delay(1000);
 80008c8:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80008cc:	f000 fc78 	bl	80011c0 <HAL_Delay>
     	 	  		GPIOB -> BSRR = (1 << 27);
 80008d0:	4b43      	ldr	r3, [pc, #268]	@ (80009e0 <Xu_Ly_Mat_Khau+0x1b4>)
 80008d2:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80008d6:	611a      	str	r2, [r3, #16]
     	 	  		False_Passcode--;
 80008d8:	4b45      	ldr	r3, [pc, #276]	@ (80009f0 <Xu_Ly_Mat_Khau+0x1c4>)
 80008da:	781b      	ldrb	r3, [r3, #0]
 80008dc:	3b01      	subs	r3, #1
 80008de:	b2da      	uxtb	r2, r3
 80008e0:	4b43      	ldr	r3, [pc, #268]	@ (80009f0 <Xu_Ly_Mat_Khau+0x1c4>)
 80008e2:	701a      	strb	r2, [r3, #0]
     	 	  		if(False_Passcode == 0){
 80008e4:	4b42      	ldr	r3, [pc, #264]	@ (80009f0 <Xu_Ly_Mat_Khau+0x1c4>)
 80008e6:	781b      	ldrb	r3, [r3, #0]
 80008e8:	2b00      	cmp	r3, #0
 80008ea:	d10f      	bne.n	800090c <Xu_Ly_Mat_Khau+0xe0>
     	 	  			LCD_Clear();
 80008ec:	f7ff fcec 	bl	80002c8 <LCD_Clear>
     	 	  			LCD_SetCursor(0, 0);
 80008f0:	2100      	movs	r1, #0
 80008f2:	2000      	movs	r0, #0
 80008f4:	f7ff fcf2 	bl	80002dc <LCD_SetCursor>
     	 	  		    LCD_Print("WAITING FOR 30s");
 80008f8:	483e      	ldr	r0, [pc, #248]	@ (80009f4 <Xu_Ly_Mat_Khau+0x1c8>)
 80008fa:	f7ff fcd0 	bl	800029e <LCD_Print>
     	 	  		    HAL_Delay(30000);
 80008fe:	f247 5030 	movw	r0, #30000	@ 0x7530
 8000902:	f000 fc5d 	bl	80011c0 <HAL_Delay>
     	 	  		    False_Passcode = 3;
 8000906:	4b3a      	ldr	r3, [pc, #232]	@ (80009f0 <Xu_Ly_Mat_Khau+0x1c4>)
 8000908:	2203      	movs	r2, #3
 800090a:	701a      	strb	r2, [r3, #0]
     	 	  		}
     	 	   		Reset_LCD();
 800090c:	f7ff fe36 	bl	800057c <Reset_LCD>
     	 	  		GPIOA -> BSRR = (1 << 19);
     	 	  		GPIOB -> BSRR = (1 << 26);
     	 	  		False_Passcode = 3;
     	 	  		Reset_LCD();
     	 	  	}
     	 	  }
 8000910:	e05a      	b.n	80009c8 <Xu_Ly_Mat_Khau+0x19c>
     	 	  		GPIOB -> BSRR = (1 << 10);
 8000912:	4b33      	ldr	r3, [pc, #204]	@ (80009e0 <Xu_Ly_Mat_Khau+0x1b4>)
 8000914:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8000918:	611a      	str	r2, [r3, #16]
     	 	  		GPIOA -> BSRR = (1 << 2);
 800091a:	4b32      	ldr	r3, [pc, #200]	@ (80009e4 <Xu_Ly_Mat_Khau+0x1b8>)
 800091c:	2204      	movs	r2, #4
 800091e:	611a      	str	r2, [r3, #16]
     	 	  		HAL_Delay(100);
 8000920:	2064      	movs	r0, #100	@ 0x64
 8000922:	f000 fc4d 	bl	80011c0 <HAL_Delay>
     	 	  		GPIOA -> BSRR = (1 << 18);
 8000926:	4b2f      	ldr	r3, [pc, #188]	@ (80009e4 <Xu_Ly_Mat_Khau+0x1b8>)
 8000928:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 800092c:	611a      	str	r2, [r3, #16]
     	 	  		HAL_Delay(100);
 800092e:	2064      	movs	r0, #100	@ 0x64
 8000930:	f000 fc46 	bl	80011c0 <HAL_Delay>
     	 	  		GPIOA -> BSRR = (1 << 2);
 8000934:	4b2b      	ldr	r3, [pc, #172]	@ (80009e4 <Xu_Ly_Mat_Khau+0x1b8>)
 8000936:	2204      	movs	r2, #4
 8000938:	611a      	str	r2, [r3, #16]
     	 	  	    HAL_Delay(100);
 800093a:	2064      	movs	r0, #100	@ 0x64
 800093c:	f000 fc40 	bl	80011c0 <HAL_Delay>
     	 	  	    GPIOA -> BSRR = (1 << 18);
 8000940:	4b28      	ldr	r3, [pc, #160]	@ (80009e4 <Xu_Ly_Mat_Khau+0x1b8>)
 8000942:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 8000946:	611a      	str	r2, [r3, #16]
     	 	  	    HAL_Delay(100);
 8000948:	2064      	movs	r0, #100	@ 0x64
 800094a:	f000 fc39 	bl	80011c0 <HAL_Delay>
     	 	  	    GPIOA -> BSRR = (1 << 2);
 800094e:	4b25      	ldr	r3, [pc, #148]	@ (80009e4 <Xu_Ly_Mat_Khau+0x1b8>)
 8000950:	2204      	movs	r2, #4
 8000952:	611a      	str	r2, [r3, #16]
     	 	  	  	HAL_Delay(100);
 8000954:	2064      	movs	r0, #100	@ 0x64
 8000956:	f000 fc33 	bl	80011c0 <HAL_Delay>
     	 	  	  	GPIOA -> BSRR = (1 << 18);
 800095a:	4b22      	ldr	r3, [pc, #136]	@ (80009e4 <Xu_Ly_Mat_Khau+0x1b8>)
 800095c:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 8000960:	611a      	str	r2, [r3, #16]
     	 	  	    HAL_Delay(100);
 8000962:	2064      	movs	r0, #100	@ 0x64
 8000964:	f000 fc2c 	bl	80011c0 <HAL_Delay>
     	 	  	  	GPIOA -> BSRR = (1 << 2);
 8000968:	4b1e      	ldr	r3, [pc, #120]	@ (80009e4 <Xu_Ly_Mat_Khau+0x1b8>)
 800096a:	2204      	movs	r2, #4
 800096c:	611a      	str	r2, [r3, #16]
     	 	  	  	HAL_Delay(100);
 800096e:	2064      	movs	r0, #100	@ 0x64
 8000970:	f000 fc26 	bl	80011c0 <HAL_Delay>
     	 	  	  	GPIOA -> BSRR = (1 << 18);
 8000974:	4b1b      	ldr	r3, [pc, #108]	@ (80009e4 <Xu_Ly_Mat_Khau+0x1b8>)
 8000976:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 800097a:	611a      	str	r2, [r3, #16]
     	 	  		LCD_Clear();
 800097c:	f7ff fca4 	bl	80002c8 <LCD_Clear>
     	 	  		LCD_SetCursor(0, 2);
 8000980:	2102      	movs	r1, #2
 8000982:	2000      	movs	r0, #0
 8000984:	f7ff fcaa 	bl	80002dc <LCD_SetCursor>
     	 	  		LCD_Print("HiHi,SUCCESS!!");
 8000988:	481b      	ldr	r0, [pc, #108]	@ (80009f8 <Xu_Ly_Mat_Khau+0x1cc>)
 800098a:	f7ff fc88 	bl	800029e <LCD_Print>
     	 	  		LCD_SetCursor(1, 3);
 800098e:	2103      	movs	r1, #3
 8000990:	2001      	movs	r0, #1
 8000992:	f7ff fca3 	bl	80002dc <LCD_SetCursor>
     	 	  		LCD_Print("WELLCOME!!!");
 8000996:	4819      	ldr	r0, [pc, #100]	@ (80009fc <Xu_Ly_Mat_Khau+0x1d0>)
 8000998:	f7ff fc81 	bl	800029e <LCD_Print>
     	 	  		LCD_DisableCursorBlink();
 800099c:	f7ff fcc1 	bl	8000322 <LCD_DisableCursorBlink>
     	 	  		GPIOA -> BSRR = (1 << 3);
 80009a0:	4b10      	ldr	r3, [pc, #64]	@ (80009e4 <Xu_Ly_Mat_Khau+0x1b8>)
 80009a2:	2208      	movs	r2, #8
 80009a4:	611a      	str	r2, [r3, #16]
     	 	  		HAL_Delay(6000);
 80009a6:	f241 7070 	movw	r0, #6000	@ 0x1770
 80009aa:	f000 fc09 	bl	80011c0 <HAL_Delay>
     	 	  		GPIOA -> BSRR = (1 << 19);
 80009ae:	4b0d      	ldr	r3, [pc, #52]	@ (80009e4 <Xu_Ly_Mat_Khau+0x1b8>)
 80009b0:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
 80009b4:	611a      	str	r2, [r3, #16]
     	 	  		GPIOB -> BSRR = (1 << 26);
 80009b6:	4b0a      	ldr	r3, [pc, #40]	@ (80009e0 <Xu_Ly_Mat_Khau+0x1b4>)
 80009b8:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80009bc:	611a      	str	r2, [r3, #16]
     	 	  		False_Passcode = 3;
 80009be:	4b0c      	ldr	r3, [pc, #48]	@ (80009f0 <Xu_Ly_Mat_Khau+0x1c4>)
 80009c0:	2203      	movs	r2, #3
 80009c2:	701a      	strb	r2, [r3, #0]
     	 	  		Reset_LCD();
 80009c4:	f7ff fdda 	bl	800057c <Reset_LCD>
     	 	  }
 80009c8:	bf00      	nop
 80009ca:	3708      	adds	r7, #8
 80009cc:	46bd      	mov	sp, r7
 80009ce:	bd80      	pop	{r7, pc}
 80009d0:	2000003c 	.word	0x2000003c
 80009d4:	20000000 	.word	0x20000000
 80009d8:	20000034 	.word	0x20000034
 80009dc:	2000003a 	.word	0x2000003a
 80009e0:	40010c00 	.word	0x40010c00
 80009e4:	40010800 	.word	0x40010800
 80009e8:	0800266c 	.word	0x0800266c
 80009ec:	08002674 	.word	0x08002674
 80009f0:	20000008 	.word	0x20000008
 80009f4:	08002684 	.word	0x08002684
 80009f8:	08002694 	.word	0x08002694
 80009fc:	080026a4 	.word	0x080026a4

08000a00 <KeyPad>:
     	 	  //-----CHECK KEYPAD-----------------------------------------------
     	 	  int KeyPad(){
 8000a00:	b580      	push	{r7, lr}
 8000a02:	af00      	add	r7, sp, #0
     	 		  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_3|GPIO_PIN_8, 1);
 8000a04:	2201      	movs	r2, #1
 8000a06:	f240 110b 	movw	r1, #267	@ 0x10b
 8000a0a:	48b4      	ldr	r0, [pc, #720]	@ (8000cdc <KeyPad+0x2dc>)
 8000a0c:	f000 fe7b 	bl	8001706 <HAL_GPIO_WritePin>
     	 		  	  //SCAN COLUMN 1.
     	 		  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, 0);
 8000a10:	2200      	movs	r2, #0
 8000a12:	2102      	movs	r1, #2
 8000a14:	48b1      	ldr	r0, [pc, #708]	@ (8000cdc <KeyPad+0x2dc>)
 8000a16:	f000 fe76 	bl	8001706 <HAL_GPIO_WritePin>
     	 		  	  GPIOB -> BSRR = (1 << 16);
 8000a1a:	4bb0      	ldr	r3, [pc, #704]	@ (8000cdc <KeyPad+0x2dc>)
 8000a1c:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8000a20:	611a      	str	r2, [r3, #16]
     	 		  	  GPIOB -> BSRR = (1 << 1)|(1 << 2)|(1 << 3);
 8000a22:	4bae      	ldr	r3, [pc, #696]	@ (8000cdc <KeyPad+0x2dc>)
 8000a24:	220e      	movs	r2, #14
 8000a26:	611a      	str	r2, [r3, #16]
     	 		  	  // NUMBER 7 BUTTON.
     	 		        if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0){
 8000a28:	2110      	movs	r1, #16
 8000a2a:	48ac      	ldr	r0, [pc, #688]	@ (8000cdc <KeyPad+0x2dc>)
 8000a2c:	f000 fe54 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000a30:	4603      	mov	r3, r0
 8000a32:	2b00      	cmp	r3, #0
 8000a34:	d124      	bne.n	8000a80 <KeyPad+0x80>
     	 		      	  HAL_Delay(200);
 8000a36:	20c8      	movs	r0, #200	@ 0xc8
 8000a38:	f000 fbc2 	bl	80011c0 <HAL_Delay>
     	 		      	  if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0){
 8000a3c:	2110      	movs	r1, #16
 8000a3e:	48a7      	ldr	r0, [pc, #668]	@ (8000cdc <KeyPad+0x2dc>)
 8000a40:	f000 fe4a 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000a44:	4603      	mov	r3, r0
 8000a46:	2b00      	cmp	r3, #0
 8000a48:	d11a      	bne.n	8000a80 <KeyPad+0x80>
     	 		      	     LCD_SetCursor(x, y);
 8000a4a:	4ba5      	ldr	r3, [pc, #660]	@ (8000ce0 <KeyPad+0x2e0>)
 8000a4c:	781b      	ldrb	r3, [r3, #0]
 8000a4e:	4aa5      	ldr	r2, [pc, #660]	@ (8000ce4 <KeyPad+0x2e4>)
 8000a50:	7812      	ldrb	r2, [r2, #0]
 8000a52:	4611      	mov	r1, r2
 8000a54:	4618      	mov	r0, r3
 8000a56:	f7ff fc41 	bl	80002dc <LCD_SetCursor>
     	 		      	     LCD_CursorBlink();
 8000a5a:	f7ff fc5b 	bl	8000314 <LCD_CursorBlink>
     	 		      	     LCD_Print("7");
 8000a5e:	48a2      	ldr	r0, [pc, #648]	@ (8000ce8 <KeyPad+0x2e8>)
 8000a60:	f7ff fc1d 	bl	800029e <LCD_Print>
     	 		      	      key = 7;
 8000a64:	4ba1      	ldr	r3, [pc, #644]	@ (8000cec <KeyPad+0x2ec>)
 8000a66:	2207      	movs	r2, #7
 8000a68:	701a      	strb	r2, [r3, #0]
     	 		      	      Read_Keypad(key);
 8000a6a:	4ba0      	ldr	r3, [pc, #640]	@ (8000cec <KeyPad+0x2ec>)
 8000a6c:	781b      	ldrb	r3, [r3, #0]
 8000a6e:	4618      	mov	r0, r3
 8000a70:	f7ff fdc0 	bl	80005f4 <Read_Keypad>
     	 		      	     y = y + 1;
 8000a74:	4b9b      	ldr	r3, [pc, #620]	@ (8000ce4 <KeyPad+0x2e4>)
 8000a76:	781b      	ldrb	r3, [r3, #0]
 8000a78:	3301      	adds	r3, #1
 8000a7a:	b2da      	uxtb	r2, r3
 8000a7c:	4b99      	ldr	r3, [pc, #612]	@ (8000ce4 <KeyPad+0x2e4>)
 8000a7e:	701a      	strb	r2, [r3, #0]
     	 		      	     }
     	 		        }
     	 		        // NUMBER 4 BUTTON.
     	 		        if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0){
 8000a80:	2120      	movs	r1, #32
 8000a82:	4896      	ldr	r0, [pc, #600]	@ (8000cdc <KeyPad+0x2dc>)
 8000a84:	f000 fe28 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000a88:	4603      	mov	r3, r0
 8000a8a:	2b00      	cmp	r3, #0
 8000a8c:	d124      	bne.n	8000ad8 <KeyPad+0xd8>
     	 		      	  HAL_Delay(130);
 8000a8e:	2082      	movs	r0, #130	@ 0x82
 8000a90:	f000 fb96 	bl	80011c0 <HAL_Delay>
     	 		      	  if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0){
 8000a94:	2120      	movs	r1, #32
 8000a96:	4891      	ldr	r0, [pc, #580]	@ (8000cdc <KeyPad+0x2dc>)
 8000a98:	f000 fe1e 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000a9c:	4603      	mov	r3, r0
 8000a9e:	2b00      	cmp	r3, #0
 8000aa0:	d11a      	bne.n	8000ad8 <KeyPad+0xd8>
     	 		      	     LCD_SetCursor(x, y);
 8000aa2:	4b8f      	ldr	r3, [pc, #572]	@ (8000ce0 <KeyPad+0x2e0>)
 8000aa4:	781b      	ldrb	r3, [r3, #0]
 8000aa6:	4a8f      	ldr	r2, [pc, #572]	@ (8000ce4 <KeyPad+0x2e4>)
 8000aa8:	7812      	ldrb	r2, [r2, #0]
 8000aaa:	4611      	mov	r1, r2
 8000aac:	4618      	mov	r0, r3
 8000aae:	f7ff fc15 	bl	80002dc <LCD_SetCursor>
     	 		      	     LCD_CursorBlink();
 8000ab2:	f7ff fc2f 	bl	8000314 <LCD_CursorBlink>
     	 		      	     LCD_Print("4");
 8000ab6:	488e      	ldr	r0, [pc, #568]	@ (8000cf0 <KeyPad+0x2f0>)
 8000ab8:	f7ff fbf1 	bl	800029e <LCD_Print>
     	 		      	     key = 4;
 8000abc:	4b8b      	ldr	r3, [pc, #556]	@ (8000cec <KeyPad+0x2ec>)
 8000abe:	2204      	movs	r2, #4
 8000ac0:	701a      	strb	r2, [r3, #0]
     	 		      	     Read_Keypad(key);
 8000ac2:	4b8a      	ldr	r3, [pc, #552]	@ (8000cec <KeyPad+0x2ec>)
 8000ac4:	781b      	ldrb	r3, [r3, #0]
 8000ac6:	4618      	mov	r0, r3
 8000ac8:	f7ff fd94 	bl	80005f4 <Read_Keypad>
     	 		      	     y = y + 1;
 8000acc:	4b85      	ldr	r3, [pc, #532]	@ (8000ce4 <KeyPad+0x2e4>)
 8000ace:	781b      	ldrb	r3, [r3, #0]
 8000ad0:	3301      	adds	r3, #1
 8000ad2:	b2da      	uxtb	r2, r3
 8000ad4:	4b83      	ldr	r3, [pc, #524]	@ (8000ce4 <KeyPad+0x2e4>)
 8000ad6:	701a      	strb	r2, [r3, #0]
     	 		      	     }
     	 		        }
     	 		        // NUMBER 1 BUTTON.
     	 		        if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0){
 8000ad8:	2140      	movs	r1, #64	@ 0x40
 8000ada:	4880      	ldr	r0, [pc, #512]	@ (8000cdc <KeyPad+0x2dc>)
 8000adc:	f000 fdfc 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000ae0:	4603      	mov	r3, r0
 8000ae2:	2b00      	cmp	r3, #0
 8000ae4:	d124      	bne.n	8000b30 <KeyPad+0x130>
     	 		      	  HAL_Delay(130);
 8000ae6:	2082      	movs	r0, #130	@ 0x82
 8000ae8:	f000 fb6a 	bl	80011c0 <HAL_Delay>
     	 		      	  if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0){
 8000aec:	2140      	movs	r1, #64	@ 0x40
 8000aee:	487b      	ldr	r0, [pc, #492]	@ (8000cdc <KeyPad+0x2dc>)
 8000af0:	f000 fdf2 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000af4:	4603      	mov	r3, r0
 8000af6:	2b00      	cmp	r3, #0
 8000af8:	d11a      	bne.n	8000b30 <KeyPad+0x130>
     	 		      		 LCD_SetCursor(x, y);
 8000afa:	4b79      	ldr	r3, [pc, #484]	@ (8000ce0 <KeyPad+0x2e0>)
 8000afc:	781b      	ldrb	r3, [r3, #0]
 8000afe:	4a79      	ldr	r2, [pc, #484]	@ (8000ce4 <KeyPad+0x2e4>)
 8000b00:	7812      	ldrb	r2, [r2, #0]
 8000b02:	4611      	mov	r1, r2
 8000b04:	4618      	mov	r0, r3
 8000b06:	f7ff fbe9 	bl	80002dc <LCD_SetCursor>
     	 		      		 LCD_CursorBlink();
 8000b0a:	f7ff fc03 	bl	8000314 <LCD_CursorBlink>
     	 		      		 LCD_Print("1");
 8000b0e:	4879      	ldr	r0, [pc, #484]	@ (8000cf4 <KeyPad+0x2f4>)
 8000b10:	f7ff fbc5 	bl	800029e <LCD_Print>
     	 		      		  key = 1;
 8000b14:	4b75      	ldr	r3, [pc, #468]	@ (8000cec <KeyPad+0x2ec>)
 8000b16:	2201      	movs	r2, #1
 8000b18:	701a      	strb	r2, [r3, #0]
     	 		      		  Read_Keypad(key);
 8000b1a:	4b74      	ldr	r3, [pc, #464]	@ (8000cec <KeyPad+0x2ec>)
 8000b1c:	781b      	ldrb	r3, [r3, #0]
 8000b1e:	4618      	mov	r0, r3
 8000b20:	f7ff fd68 	bl	80005f4 <Read_Keypad>
     	 		      		 y = y + 1;
 8000b24:	4b6f      	ldr	r3, [pc, #444]	@ (8000ce4 <KeyPad+0x2e4>)
 8000b26:	781b      	ldrb	r3, [r3, #0]
 8000b28:	3301      	adds	r3, #1
 8000b2a:	b2da      	uxtb	r2, r3
 8000b2c:	4b6d      	ldr	r3, [pc, #436]	@ (8000ce4 <KeyPad+0x2e4>)
 8000b2e:	701a      	strb	r2, [r3, #0]
     	 		      		 }
     	 		        }
     	 		        // SYMBOL "*" BUTTON.
     	 		        if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0){
 8000b30:	2180      	movs	r1, #128	@ 0x80
 8000b32:	486a      	ldr	r0, [pc, #424]	@ (8000cdc <KeyPad+0x2dc>)
 8000b34:	f000 fdd0 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000b38:	4603      	mov	r3, r0
 8000b3a:	2b00      	cmp	r3, #0
 8000b3c:	d11c      	bne.n	8000b78 <KeyPad+0x178>
     	 		      	   HAL_Delay(130);
 8000b3e:	2082      	movs	r0, #130	@ 0x82
 8000b40:	f000 fb3e 	bl	80011c0 <HAL_Delay>
     	 		      	   if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0){
 8000b44:	2180      	movs	r1, #128	@ 0x80
 8000b46:	4865      	ldr	r0, [pc, #404]	@ (8000cdc <KeyPad+0x2dc>)
 8000b48:	f000 fdc6 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000b4c:	4603      	mov	r3, r0
 8000b4e:	2b00      	cmp	r3, #0
 8000b50:	d112      	bne.n	8000b78 <KeyPad+0x178>
     	 		      	      LCD_SetCursor(x, y);
 8000b52:	4b63      	ldr	r3, [pc, #396]	@ (8000ce0 <KeyPad+0x2e0>)
 8000b54:	781b      	ldrb	r3, [r3, #0]
 8000b56:	4a63      	ldr	r2, [pc, #396]	@ (8000ce4 <KeyPad+0x2e4>)
 8000b58:	7812      	ldrb	r2, [r2, #0]
 8000b5a:	4611      	mov	r1, r2
 8000b5c:	4618      	mov	r0, r3
 8000b5e:	f7ff fbbd 	bl	80002dc <LCD_SetCursor>
     	 		      	      LCD_CursorBlink();
 8000b62:	f7ff fbd7 	bl	8000314 <LCD_CursorBlink>
     	 		      	      LCD_Print("*");
 8000b66:	4864      	ldr	r0, [pc, #400]	@ (8000cf8 <KeyPad+0x2f8>)
 8000b68:	f7ff fb99 	bl	800029e <LCD_Print>
     	 		      	      y = y + 1;
 8000b6c:	4b5d      	ldr	r3, [pc, #372]	@ (8000ce4 <KeyPad+0x2e4>)
 8000b6e:	781b      	ldrb	r3, [r3, #0]
 8000b70:	3301      	adds	r3, #1
 8000b72:	b2da      	uxtb	r2, r3
 8000b74:	4b5b      	ldr	r3, [pc, #364]	@ (8000ce4 <KeyPad+0x2e4>)
 8000b76:	701a      	strb	r2, [r3, #0]
     	 		      	      }
     	 		        }
     	 		        // SCAN COLUMN 2.
     	 		        GPIOB -> BSRR = (1 << 17);
 8000b78:	4b58      	ldr	r3, [pc, #352]	@ (8000cdc <KeyPad+0x2dc>)
 8000b7a:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8000b7e:	611a      	str	r2, [r3, #16]
     	 		        GPIOB -> BSRR = (1 << 0)|(1 << 2)|(1 << 3);
 8000b80:	4b56      	ldr	r3, [pc, #344]	@ (8000cdc <KeyPad+0x2dc>)
 8000b82:	220d      	movs	r2, #13
 8000b84:	611a      	str	r2, [r3, #16]
     	 		        // NUMBER 8 BUTTON.
     	 		        if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0){
 8000b86:	2110      	movs	r1, #16
 8000b88:	4854      	ldr	r0, [pc, #336]	@ (8000cdc <KeyPad+0x2dc>)
 8000b8a:	f000 fda5 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000b8e:	4603      	mov	r3, r0
 8000b90:	2b00      	cmp	r3, #0
 8000b92:	d124      	bne.n	8000bde <KeyPad+0x1de>
     	 		           HAL_Delay(130);
 8000b94:	2082      	movs	r0, #130	@ 0x82
 8000b96:	f000 fb13 	bl	80011c0 <HAL_Delay>
     	 		           if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0){
 8000b9a:	2110      	movs	r1, #16
 8000b9c:	484f      	ldr	r0, [pc, #316]	@ (8000cdc <KeyPad+0x2dc>)
 8000b9e:	f000 fd9b 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000ba2:	4603      	mov	r3, r0
 8000ba4:	2b00      	cmp	r3, #0
 8000ba6:	d11a      	bne.n	8000bde <KeyPad+0x1de>
     	 		            	LCD_SetCursor(x, y);
 8000ba8:	4b4d      	ldr	r3, [pc, #308]	@ (8000ce0 <KeyPad+0x2e0>)
 8000baa:	781b      	ldrb	r3, [r3, #0]
 8000bac:	4a4d      	ldr	r2, [pc, #308]	@ (8000ce4 <KeyPad+0x2e4>)
 8000bae:	7812      	ldrb	r2, [r2, #0]
 8000bb0:	4611      	mov	r1, r2
 8000bb2:	4618      	mov	r0, r3
 8000bb4:	f7ff fb92 	bl	80002dc <LCD_SetCursor>
     	 		            	LCD_CursorBlink();
 8000bb8:	f7ff fbac 	bl	8000314 <LCD_CursorBlink>
     	 		              LCD_Print("8");
 8000bbc:	484f      	ldr	r0, [pc, #316]	@ (8000cfc <KeyPad+0x2fc>)
 8000bbe:	f7ff fb6e 	bl	800029e <LCD_Print>
     	 		              key = 8;
 8000bc2:	4b4a      	ldr	r3, [pc, #296]	@ (8000cec <KeyPad+0x2ec>)
 8000bc4:	2208      	movs	r2, #8
 8000bc6:	701a      	strb	r2, [r3, #0]
     	 		              Read_Keypad(key);
 8000bc8:	4b48      	ldr	r3, [pc, #288]	@ (8000cec <KeyPad+0x2ec>)
 8000bca:	781b      	ldrb	r3, [r3, #0]
 8000bcc:	4618      	mov	r0, r3
 8000bce:	f7ff fd11 	bl	80005f4 <Read_Keypad>
     	 		            	y = y + 1;
 8000bd2:	4b44      	ldr	r3, [pc, #272]	@ (8000ce4 <KeyPad+0x2e4>)
 8000bd4:	781b      	ldrb	r3, [r3, #0]
 8000bd6:	3301      	adds	r3, #1
 8000bd8:	b2da      	uxtb	r2, r3
 8000bda:	4b42      	ldr	r3, [pc, #264]	@ (8000ce4 <KeyPad+0x2e4>)
 8000bdc:	701a      	strb	r2, [r3, #0]
     	 		            	}
     	 		          }
     	 		        // NUMBER 5 BUTTON.
     	 		        if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0){
 8000bde:	2120      	movs	r1, #32
 8000be0:	483e      	ldr	r0, [pc, #248]	@ (8000cdc <KeyPad+0x2dc>)
 8000be2:	f000 fd79 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000be6:	4603      	mov	r3, r0
 8000be8:	2b00      	cmp	r3, #0
 8000bea:	d124      	bne.n	8000c36 <KeyPad+0x236>
     	 		            	 HAL_Delay(130);
 8000bec:	2082      	movs	r0, #130	@ 0x82
 8000bee:	f000 fae7 	bl	80011c0 <HAL_Delay>
     	 		            	 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0){
 8000bf2:	2120      	movs	r1, #32
 8000bf4:	4839      	ldr	r0, [pc, #228]	@ (8000cdc <KeyPad+0x2dc>)
 8000bf6:	f000 fd6f 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000bfa:	4603      	mov	r3, r0
 8000bfc:	2b00      	cmp	r3, #0
 8000bfe:	d11a      	bne.n	8000c36 <KeyPad+0x236>
     	 		            	    LCD_SetCursor(x, y);
 8000c00:	4b37      	ldr	r3, [pc, #220]	@ (8000ce0 <KeyPad+0x2e0>)
 8000c02:	781b      	ldrb	r3, [r3, #0]
 8000c04:	4a37      	ldr	r2, [pc, #220]	@ (8000ce4 <KeyPad+0x2e4>)
 8000c06:	7812      	ldrb	r2, [r2, #0]
 8000c08:	4611      	mov	r1, r2
 8000c0a:	4618      	mov	r0, r3
 8000c0c:	f7ff fb66 	bl	80002dc <LCD_SetCursor>
     	 		            	    LCD_CursorBlink();
 8000c10:	f7ff fb80 	bl	8000314 <LCD_CursorBlink>
     	 		            	    LCD_Print("5");
 8000c14:	483a      	ldr	r0, [pc, #232]	@ (8000d00 <KeyPad+0x300>)
 8000c16:	f7ff fb42 	bl	800029e <LCD_Print>
     	 		            	    key = 5;
 8000c1a:	4b34      	ldr	r3, [pc, #208]	@ (8000cec <KeyPad+0x2ec>)
 8000c1c:	2205      	movs	r2, #5
 8000c1e:	701a      	strb	r2, [r3, #0]
     	 		            	    Read_Keypad(key);
 8000c20:	4b32      	ldr	r3, [pc, #200]	@ (8000cec <KeyPad+0x2ec>)
 8000c22:	781b      	ldrb	r3, [r3, #0]
 8000c24:	4618      	mov	r0, r3
 8000c26:	f7ff fce5 	bl	80005f4 <Read_Keypad>
     	 		            	    y = y + 1;
 8000c2a:	4b2e      	ldr	r3, [pc, #184]	@ (8000ce4 <KeyPad+0x2e4>)
 8000c2c:	781b      	ldrb	r3, [r3, #0]
 8000c2e:	3301      	adds	r3, #1
 8000c30:	b2da      	uxtb	r2, r3
 8000c32:	4b2c      	ldr	r3, [pc, #176]	@ (8000ce4 <KeyPad+0x2e4>)
 8000c34:	701a      	strb	r2, [r3, #0]
     	 		            	    }
     	 		           }
     	 		        // NUMBER 2 BUTTON.
     	 		        if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0){
 8000c36:	2140      	movs	r1, #64	@ 0x40
 8000c38:	4828      	ldr	r0, [pc, #160]	@ (8000cdc <KeyPad+0x2dc>)
 8000c3a:	f000 fd4d 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000c3e:	4603      	mov	r3, r0
 8000c40:	2b00      	cmp	r3, #0
 8000c42:	d124      	bne.n	8000c8e <KeyPad+0x28e>
     	 		               HAL_Delay(130);
 8000c44:	2082      	movs	r0, #130	@ 0x82
 8000c46:	f000 fabb 	bl	80011c0 <HAL_Delay>
     	 		               if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0){
 8000c4a:	2140      	movs	r1, #64	@ 0x40
 8000c4c:	4823      	ldr	r0, [pc, #140]	@ (8000cdc <KeyPad+0x2dc>)
 8000c4e:	f000 fd43 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000c52:	4603      	mov	r3, r0
 8000c54:	2b00      	cmp	r3, #0
 8000c56:	d11a      	bne.n	8000c8e <KeyPad+0x28e>
     	 		                  LCD_SetCursor(x, y);
 8000c58:	4b21      	ldr	r3, [pc, #132]	@ (8000ce0 <KeyPad+0x2e0>)
 8000c5a:	781b      	ldrb	r3, [r3, #0]
 8000c5c:	4a21      	ldr	r2, [pc, #132]	@ (8000ce4 <KeyPad+0x2e4>)
 8000c5e:	7812      	ldrb	r2, [r2, #0]
 8000c60:	4611      	mov	r1, r2
 8000c62:	4618      	mov	r0, r3
 8000c64:	f7ff fb3a 	bl	80002dc <LCD_SetCursor>
     	 		                  LCD_CursorBlink();
 8000c68:	f7ff fb54 	bl	8000314 <LCD_CursorBlink>
     	 		                  LCD_Print("2");
 8000c6c:	4825      	ldr	r0, [pc, #148]	@ (8000d04 <KeyPad+0x304>)
 8000c6e:	f7ff fb16 	bl	800029e <LCD_Print>
     	 		                   key = 2;
 8000c72:	4b1e      	ldr	r3, [pc, #120]	@ (8000cec <KeyPad+0x2ec>)
 8000c74:	2202      	movs	r2, #2
 8000c76:	701a      	strb	r2, [r3, #0]
     	 		                   Read_Keypad(key);
 8000c78:	4b1c      	ldr	r3, [pc, #112]	@ (8000cec <KeyPad+0x2ec>)
 8000c7a:	781b      	ldrb	r3, [r3, #0]
 8000c7c:	4618      	mov	r0, r3
 8000c7e:	f7ff fcb9 	bl	80005f4 <Read_Keypad>
     	 		                  y = y + 1;
 8000c82:	4b18      	ldr	r3, [pc, #96]	@ (8000ce4 <KeyPad+0x2e4>)
 8000c84:	781b      	ldrb	r3, [r3, #0]
 8000c86:	3301      	adds	r3, #1
 8000c88:	b2da      	uxtb	r2, r3
 8000c8a:	4b16      	ldr	r3, [pc, #88]	@ (8000ce4 <KeyPad+0x2e4>)
 8000c8c:	701a      	strb	r2, [r3, #0]
     	 		            	    }
     	 		           }
     	 		        // NUMBER 0 BUTTON.
     	 		        if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0){
 8000c8e:	2180      	movs	r1, #128	@ 0x80
 8000c90:	4812      	ldr	r0, [pc, #72]	@ (8000cdc <KeyPad+0x2dc>)
 8000c92:	f000 fd21 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000c96:	4603      	mov	r3, r0
 8000c98:	2b00      	cmp	r3, #0
 8000c9a:	d13d      	bne.n	8000d18 <KeyPad+0x318>
     	 		            	  HAL_Delay(130);
 8000c9c:	2082      	movs	r0, #130	@ 0x82
 8000c9e:	f000 fa8f 	bl	80011c0 <HAL_Delay>
     	 		            	  if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0){
 8000ca2:	2180      	movs	r1, #128	@ 0x80
 8000ca4:	480d      	ldr	r0, [pc, #52]	@ (8000cdc <KeyPad+0x2dc>)
 8000ca6:	f000 fd17 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000caa:	4603      	mov	r3, r0
 8000cac:	2b00      	cmp	r3, #0
 8000cae:	d133      	bne.n	8000d18 <KeyPad+0x318>
     	 		            	     LCD_SetCursor(x, y);
 8000cb0:	4b0b      	ldr	r3, [pc, #44]	@ (8000ce0 <KeyPad+0x2e0>)
 8000cb2:	781b      	ldrb	r3, [r3, #0]
 8000cb4:	4a0b      	ldr	r2, [pc, #44]	@ (8000ce4 <KeyPad+0x2e4>)
 8000cb6:	7812      	ldrb	r2, [r2, #0]
 8000cb8:	4611      	mov	r1, r2
 8000cba:	4618      	mov	r0, r3
 8000cbc:	f7ff fb0e 	bl	80002dc <LCD_SetCursor>
     	 		            	     LCD_CursorBlink();
 8000cc0:	f7ff fb28 	bl	8000314 <LCD_CursorBlink>
     	 		            	     LCD_Print("0");
 8000cc4:	4810      	ldr	r0, [pc, #64]	@ (8000d08 <KeyPad+0x308>)
 8000cc6:	f7ff faea 	bl	800029e <LCD_Print>
     	 		            	      key = 0;
 8000cca:	4b08      	ldr	r3, [pc, #32]	@ (8000cec <KeyPad+0x2ec>)
 8000ccc:	2200      	movs	r2, #0
 8000cce:	701a      	strb	r2, [r3, #0]
     	 		            	    Read_Keypad(key);
 8000cd0:	4b06      	ldr	r3, [pc, #24]	@ (8000cec <KeyPad+0x2ec>)
 8000cd2:	781b      	ldrb	r3, [r3, #0]
 8000cd4:	4618      	mov	r0, r3
 8000cd6:	f7ff fc8d 	bl	80005f4 <Read_Keypad>
 8000cda:	e017      	b.n	8000d0c <KeyPad+0x30c>
 8000cdc:	40010c00 	.word	0x40010c00
 8000ce0:	20000006 	.word	0x20000006
 8000ce4:	20000007 	.word	0x20000007
 8000ce8:	080026b0 	.word	0x080026b0
 8000cec:	2000003b 	.word	0x2000003b
 8000cf0:	080026b4 	.word	0x080026b4
 8000cf4:	080026b8 	.word	0x080026b8
 8000cf8:	080026bc 	.word	0x080026bc
 8000cfc:	080026c0 	.word	0x080026c0
 8000d00:	080026c4 	.word	0x080026c4
 8000d04:	080026c8 	.word	0x080026c8
 8000d08:	080026cc 	.word	0x080026cc
     	 		            	     y = y + 1;
 8000d0c:	4b99      	ldr	r3, [pc, #612]	@ (8000f74 <KeyPad+0x574>)
 8000d0e:	781b      	ldrb	r3, [r3, #0]
 8000d10:	3301      	adds	r3, #1
 8000d12:	b2da      	uxtb	r2, r3
 8000d14:	4b97      	ldr	r3, [pc, #604]	@ (8000f74 <KeyPad+0x574>)
 8000d16:	701a      	strb	r2, [r3, #0]
     	 		            	     }
     	 		             }
     	 		         // SCAN COLUMN 3.
     	 		         GPIOB -> BSRR = (1 << 24);
 8000d18:	4b97      	ldr	r3, [pc, #604]	@ (8000f78 <KeyPad+0x578>)
 8000d1a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8000d1e:	611a      	str	r2, [r3, #16]
     	 		         GPIOB -> BSRR = (1 << 0)|(1 << 1)|(1 << 3);
 8000d20:	4b95      	ldr	r3, [pc, #596]	@ (8000f78 <KeyPad+0x578>)
 8000d22:	220b      	movs	r2, #11
 8000d24:	611a      	str	r2, [r3, #16]
     	 		         // NUMBER 9 BUTTON.
     	 		         if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0){
 8000d26:	2110      	movs	r1, #16
 8000d28:	4893      	ldr	r0, [pc, #588]	@ (8000f78 <KeyPad+0x578>)
 8000d2a:	f000 fcd5 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000d2e:	4603      	mov	r3, r0
 8000d30:	2b00      	cmp	r3, #0
 8000d32:	d124      	bne.n	8000d7e <KeyPad+0x37e>
     	 		            HAL_Delay(130);
 8000d34:	2082      	movs	r0, #130	@ 0x82
 8000d36:	f000 fa43 	bl	80011c0 <HAL_Delay>
     	 		            if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0){
 8000d3a:	2110      	movs	r1, #16
 8000d3c:	488e      	ldr	r0, [pc, #568]	@ (8000f78 <KeyPad+0x578>)
 8000d3e:	f000 fccb 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000d42:	4603      	mov	r3, r0
 8000d44:	2b00      	cmp	r3, #0
 8000d46:	d11a      	bne.n	8000d7e <KeyPad+0x37e>
     	 		            	 LCD_SetCursor(x, y);
 8000d48:	4b8c      	ldr	r3, [pc, #560]	@ (8000f7c <KeyPad+0x57c>)
 8000d4a:	781b      	ldrb	r3, [r3, #0]
 8000d4c:	4a89      	ldr	r2, [pc, #548]	@ (8000f74 <KeyPad+0x574>)
 8000d4e:	7812      	ldrb	r2, [r2, #0]
 8000d50:	4611      	mov	r1, r2
 8000d52:	4618      	mov	r0, r3
 8000d54:	f7ff fac2 	bl	80002dc <LCD_SetCursor>
     	 		            	 LCD_CursorBlink();
 8000d58:	f7ff fadc 	bl	8000314 <LCD_CursorBlink>
     	 		            	 LCD_Print("9");
 8000d5c:	4888      	ldr	r0, [pc, #544]	@ (8000f80 <KeyPad+0x580>)
 8000d5e:	f7ff fa9e 	bl	800029e <LCD_Print>
     	 		            	  key = 9;
 8000d62:	4b88      	ldr	r3, [pc, #544]	@ (8000f84 <KeyPad+0x584>)
 8000d64:	2209      	movs	r2, #9
 8000d66:	701a      	strb	r2, [r3, #0]
     	 		            	Read_Keypad(key);
 8000d68:	4b86      	ldr	r3, [pc, #536]	@ (8000f84 <KeyPad+0x584>)
 8000d6a:	781b      	ldrb	r3, [r3, #0]
 8000d6c:	4618      	mov	r0, r3
 8000d6e:	f7ff fc41 	bl	80005f4 <Read_Keypad>
     	 		            	 y = y + 1;
 8000d72:	4b80      	ldr	r3, [pc, #512]	@ (8000f74 <KeyPad+0x574>)
 8000d74:	781b      	ldrb	r3, [r3, #0]
 8000d76:	3301      	adds	r3, #1
 8000d78:	b2da      	uxtb	r2, r3
 8000d7a:	4b7e      	ldr	r3, [pc, #504]	@ (8000f74 <KeyPad+0x574>)
 8000d7c:	701a      	strb	r2, [r3, #0]
     	 		            	 }
     	 		            }
     	 		         // NUMBER 6 BUTTON.
     	 		         if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0){
 8000d7e:	2120      	movs	r1, #32
 8000d80:	487d      	ldr	r0, [pc, #500]	@ (8000f78 <KeyPad+0x578>)
 8000d82:	f000 fca9 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000d86:	4603      	mov	r3, r0
 8000d88:	2b00      	cmp	r3, #0
 8000d8a:	d124      	bne.n	8000dd6 <KeyPad+0x3d6>
     	 		             HAL_Delay(70);
 8000d8c:	2046      	movs	r0, #70	@ 0x46
 8000d8e:	f000 fa17 	bl	80011c0 <HAL_Delay>
     	 		             if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0){
 8000d92:	2120      	movs	r1, #32
 8000d94:	4878      	ldr	r0, [pc, #480]	@ (8000f78 <KeyPad+0x578>)
 8000d96:	f000 fc9f 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000d9a:	4603      	mov	r3, r0
 8000d9c:	2b00      	cmp	r3, #0
 8000d9e:	d11a      	bne.n	8000dd6 <KeyPad+0x3d6>
     	 		                LCD_SetCursor(x, y);
 8000da0:	4b76      	ldr	r3, [pc, #472]	@ (8000f7c <KeyPad+0x57c>)
 8000da2:	781b      	ldrb	r3, [r3, #0]
 8000da4:	4a73      	ldr	r2, [pc, #460]	@ (8000f74 <KeyPad+0x574>)
 8000da6:	7812      	ldrb	r2, [r2, #0]
 8000da8:	4611      	mov	r1, r2
 8000daa:	4618      	mov	r0, r3
 8000dac:	f7ff fa96 	bl	80002dc <LCD_SetCursor>
     	 		                LCD_CursorBlink();
 8000db0:	f7ff fab0 	bl	8000314 <LCD_CursorBlink>
     	 		                LCD_Print("6");
 8000db4:	4874      	ldr	r0, [pc, #464]	@ (8000f88 <KeyPad+0x588>)
 8000db6:	f7ff fa72 	bl	800029e <LCD_Print>
     	 		                key = 6;
 8000dba:	4b72      	ldr	r3, [pc, #456]	@ (8000f84 <KeyPad+0x584>)
 8000dbc:	2206      	movs	r2, #6
 8000dbe:	701a      	strb	r2, [r3, #0]
     	 		                Read_Keypad(key);
 8000dc0:	4b70      	ldr	r3, [pc, #448]	@ (8000f84 <KeyPad+0x584>)
 8000dc2:	781b      	ldrb	r3, [r3, #0]
 8000dc4:	4618      	mov	r0, r3
 8000dc6:	f7ff fc15 	bl	80005f4 <Read_Keypad>
     	 		                y = y + 1;
 8000dca:	4b6a      	ldr	r3, [pc, #424]	@ (8000f74 <KeyPad+0x574>)
 8000dcc:	781b      	ldrb	r3, [r3, #0]
 8000dce:	3301      	adds	r3, #1
 8000dd0:	b2da      	uxtb	r2, r3
 8000dd2:	4b68      	ldr	r3, [pc, #416]	@ (8000f74 <KeyPad+0x574>)
 8000dd4:	701a      	strb	r2, [r3, #0]
     	 		                }
     	 		             }
     	 		          // NUMBER 3 BUTTON.
     	 		         if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0){
 8000dd6:	2140      	movs	r1, #64	@ 0x40
 8000dd8:	4867      	ldr	r0, [pc, #412]	@ (8000f78 <KeyPad+0x578>)
 8000dda:	f000 fc7d 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000dde:	4603      	mov	r3, r0
 8000de0:	2b00      	cmp	r3, #0
 8000de2:	d124      	bne.n	8000e2e <KeyPad+0x42e>
     	 		             HAL_Delay(60);
 8000de4:	203c      	movs	r0, #60	@ 0x3c
 8000de6:	f000 f9eb 	bl	80011c0 <HAL_Delay>
     	 		             if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0){
 8000dea:	2140      	movs	r1, #64	@ 0x40
 8000dec:	4862      	ldr	r0, [pc, #392]	@ (8000f78 <KeyPad+0x578>)
 8000dee:	f000 fc73 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000df2:	4603      	mov	r3, r0
 8000df4:	2b00      	cmp	r3, #0
 8000df6:	d11a      	bne.n	8000e2e <KeyPad+0x42e>
     	 		                LCD_SetCursor(x, y);
 8000df8:	4b60      	ldr	r3, [pc, #384]	@ (8000f7c <KeyPad+0x57c>)
 8000dfa:	781b      	ldrb	r3, [r3, #0]
 8000dfc:	4a5d      	ldr	r2, [pc, #372]	@ (8000f74 <KeyPad+0x574>)
 8000dfe:	7812      	ldrb	r2, [r2, #0]
 8000e00:	4611      	mov	r1, r2
 8000e02:	4618      	mov	r0, r3
 8000e04:	f7ff fa6a 	bl	80002dc <LCD_SetCursor>
     	 		                LCD_CursorBlink();
 8000e08:	f7ff fa84 	bl	8000314 <LCD_CursorBlink>
     	 		                LCD_Print("3");
 8000e0c:	485f      	ldr	r0, [pc, #380]	@ (8000f8c <KeyPad+0x58c>)
 8000e0e:	f7ff fa46 	bl	800029e <LCD_Print>
     	 		                key = 3;
 8000e12:	4b5c      	ldr	r3, [pc, #368]	@ (8000f84 <KeyPad+0x584>)
 8000e14:	2203      	movs	r2, #3
 8000e16:	701a      	strb	r2, [r3, #0]
     	 		                Read_Keypad(key);
 8000e18:	4b5a      	ldr	r3, [pc, #360]	@ (8000f84 <KeyPad+0x584>)
 8000e1a:	781b      	ldrb	r3, [r3, #0]
 8000e1c:	4618      	mov	r0, r3
 8000e1e:	f7ff fbe9 	bl	80005f4 <Read_Keypad>
     	 		                y = y + 1;
 8000e22:	4b54      	ldr	r3, [pc, #336]	@ (8000f74 <KeyPad+0x574>)
 8000e24:	781b      	ldrb	r3, [r3, #0]
 8000e26:	3301      	adds	r3, #1
 8000e28:	b2da      	uxtb	r2, r3
 8000e2a:	4b52      	ldr	r3, [pc, #328]	@ (8000f74 <KeyPad+0x574>)
 8000e2c:	701a      	strb	r2, [r3, #0]
     	 		                }
     	 		             }
     	 		          // SYMBOL "#" BUTTON.
     	 		          if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0){
 8000e2e:	2180      	movs	r1, #128	@ 0x80
 8000e30:	4851      	ldr	r0, [pc, #324]	@ (8000f78 <KeyPad+0x578>)
 8000e32:	f000 fc51 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000e36:	4603      	mov	r3, r0
 8000e38:	2b00      	cmp	r3, #0
 8000e3a:	d11c      	bne.n	8000e76 <KeyPad+0x476>
     	 		            	HAL_Delay(130);
 8000e3c:	2082      	movs	r0, #130	@ 0x82
 8000e3e:	f000 f9bf 	bl	80011c0 <HAL_Delay>
     	 		              if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0){
 8000e42:	2180      	movs	r1, #128	@ 0x80
 8000e44:	484c      	ldr	r0, [pc, #304]	@ (8000f78 <KeyPad+0x578>)
 8000e46:	f000 fc47 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000e4a:	4603      	mov	r3, r0
 8000e4c:	2b00      	cmp	r3, #0
 8000e4e:	d112      	bne.n	8000e76 <KeyPad+0x476>
     	 		            	   LCD_SetCursor(x, y);
 8000e50:	4b4a      	ldr	r3, [pc, #296]	@ (8000f7c <KeyPad+0x57c>)
 8000e52:	781b      	ldrb	r3, [r3, #0]
 8000e54:	4a47      	ldr	r2, [pc, #284]	@ (8000f74 <KeyPad+0x574>)
 8000e56:	7812      	ldrb	r2, [r2, #0]
 8000e58:	4611      	mov	r1, r2
 8000e5a:	4618      	mov	r0, r3
 8000e5c:	f7ff fa3e 	bl	80002dc <LCD_SetCursor>
     	 		            	   LCD_CursorBlink();
 8000e60:	f7ff fa58 	bl	8000314 <LCD_CursorBlink>
     	 		            	   LCD_Print("#");
 8000e64:	484a      	ldr	r0, [pc, #296]	@ (8000f90 <KeyPad+0x590>)
 8000e66:	f7ff fa1a 	bl	800029e <LCD_Print>
     	 		            	   y = y + 1;
 8000e6a:	4b42      	ldr	r3, [pc, #264]	@ (8000f74 <KeyPad+0x574>)
 8000e6c:	781b      	ldrb	r3, [r3, #0]
 8000e6e:	3301      	adds	r3, #1
 8000e70:	b2da      	uxtb	r2, r3
 8000e72:	4b40      	ldr	r3, [pc, #256]	@ (8000f74 <KeyPad+0x574>)
 8000e74:	701a      	strb	r2, [r3, #0]
     	 		            	   }
     	 		           }
     	 		          // SCAN COLUMN 4, THAT IS FUNCTION BUTTON.
     	 		          GPIOB -> BSRR = (1 << 19);
 8000e76:	4b40      	ldr	r3, [pc, #256]	@ (8000f78 <KeyPad+0x578>)
 8000e78:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
 8000e7c:	611a      	str	r2, [r3, #16]
     	 		          GPIOB -> BSRR = (1 << 0)|(1 << 1)|(1 << 2);
 8000e7e:	4b3e      	ldr	r3, [pc, #248]	@ (8000f78 <KeyPad+0x578>)
 8000e80:	2207      	movs	r2, #7
 8000e82:	611a      	str	r2, [r3, #16]

     	 		          // ENTER FUNCTION BUTTON.
     	 		          if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0){
 8000e84:	2110      	movs	r1, #16
 8000e86:	483c      	ldr	r0, [pc, #240]	@ (8000f78 <KeyPad+0x578>)
 8000e88:	f000 fc26 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000e8c:	4603      	mov	r3, r0
 8000e8e:	2b00      	cmp	r3, #0
 8000e90:	d11b      	bne.n	8000eca <KeyPad+0x4ca>
     	 		             HAL_Delay(130);
 8000e92:	2082      	movs	r0, #130	@ 0x82
 8000e94:	f000 f994 	bl	80011c0 <HAL_Delay>
     	 		             if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == 0){
 8000e98:	2110      	movs	r1, #16
 8000e9a:	4837      	ldr	r0, [pc, #220]	@ (8000f78 <KeyPad+0x578>)
 8000e9c:	f000 fc1c 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000ea0:	4603      	mov	r3, r0
 8000ea2:	2b00      	cmp	r3, #0
 8000ea4:	d111      	bne.n	8000eca <KeyPad+0x4ca>
     	 		          	   if(Check_Mode == 1){
 8000ea6:	4b3b      	ldr	r3, [pc, #236]	@ (8000f94 <KeyPad+0x594>)
 8000ea8:	781b      	ldrb	r3, [r3, #0]
 8000eaa:	2b01      	cmp	r3, #1
 8000eac:	d101      	bne.n	8000eb2 <KeyPad+0x4b2>
     	 		          		   Check_Old_Passcode();
 8000eae:	f7ff fc1d 	bl	80006ec <Check_Old_Passcode>
     	 		          	   }if(Check_Mode == 0){
 8000eb2:	4b38      	ldr	r3, [pc, #224]	@ (8000f94 <KeyPad+0x594>)
 8000eb4:	781b      	ldrb	r3, [r3, #0]
 8000eb6:	2b00      	cmp	r3, #0
 8000eb8:	d101      	bne.n	8000ebe <KeyPad+0x4be>
     	 		          		   Xu_Ly_Mat_Khau();
 8000eba:	f7ff fcb7 	bl	800082c <Xu_Ly_Mat_Khau>
     	 		          	    }if(Check_Mode == 2){
     	 		          	   }if(flag_announce_success)
 8000ebe:	4b36      	ldr	r3, [pc, #216]	@ (8000f98 <KeyPad+0x598>)
 8000ec0:	681b      	ldr	r3, [r3, #0]
 8000ec2:	2b00      	cmp	r3, #0
 8000ec4:	d001      	beq.n	8000eca <KeyPad+0x4ca>
     	 		          	   {
     	 		          		   Screen_Success();
 8000ec6:	f7ff fc8d 	bl	80007e4 <Screen_Success>
     	 		          	   }
     	 		                }
     	 		          }
     	 		          // DELETE FUNCTION BUTTON.
     	 		          if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0){
 8000eca:	2120      	movs	r1, #32
 8000ecc:	482a      	ldr	r0, [pc, #168]	@ (8000f78 <KeyPad+0x578>)
 8000ece:	f000 fc03 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000ed2:	4603      	mov	r3, r0
 8000ed4:	2b00      	cmp	r3, #0
 8000ed6:	d122      	bne.n	8000f1e <KeyPad+0x51e>
     	 		             HAL_Delay(130);
 8000ed8:	2082      	movs	r0, #130	@ 0x82
 8000eda:	f000 f971 	bl	80011c0 <HAL_Delay>
     	 		             if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == 0){
 8000ede:	2120      	movs	r1, #32
 8000ee0:	4825      	ldr	r0, [pc, #148]	@ (8000f78 <KeyPad+0x578>)
 8000ee2:	f000 fbf9 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000ee6:	4603      	mov	r3, r0
 8000ee8:	2b00      	cmp	r3, #0
 8000eea:	d118      	bne.n	8000f1e <KeyPad+0x51e>
     	 		                y = y - 1;
 8000eec:	4b21      	ldr	r3, [pc, #132]	@ (8000f74 <KeyPad+0x574>)
 8000eee:	781b      	ldrb	r3, [r3, #0]
 8000ef0:	3b01      	subs	r3, #1
 8000ef2:	b2da      	uxtb	r2, r3
 8000ef4:	4b1f      	ldr	r3, [pc, #124]	@ (8000f74 <KeyPad+0x574>)
 8000ef6:	701a      	strb	r2, [r3, #0]


     	 		                LCD_CursorBlink();
 8000ef8:	f7ff fa0c 	bl	8000314 <LCD_CursorBlink>
     	 		                LCD_Print(" ");
 8000efc:	4827      	ldr	r0, [pc, #156]	@ (8000f9c <KeyPad+0x59c>)
 8000efe:	f7ff f9ce 	bl	800029e <LCD_Print>
     	 		                LCD_SetCursor(x, y);
 8000f02:	4b1e      	ldr	r3, [pc, #120]	@ (8000f7c <KeyPad+0x57c>)
 8000f04:	781b      	ldrb	r3, [r3, #0]
 8000f06:	4a1b      	ldr	r2, [pc, #108]	@ (8000f74 <KeyPad+0x574>)
 8000f08:	7812      	ldrb	r2, [r2, #0]
 8000f0a:	4611      	mov	r1, r2
 8000f0c:	4618      	mov	r0, r3
 8000f0e:	f7ff f9e5 	bl	80002dc <LCD_SetCursor>
     	 		                count--;
 8000f12:	4b23      	ldr	r3, [pc, #140]	@ (8000fa0 <KeyPad+0x5a0>)
 8000f14:	781b      	ldrb	r3, [r3, #0]
 8000f16:	3b01      	subs	r3, #1
 8000f18:	b2da      	uxtb	r2, r3
 8000f1a:	4b21      	ldr	r3, [pc, #132]	@ (8000fa0 <KeyPad+0x5a0>)
 8000f1c:	701a      	strb	r2, [r3, #0]
     	 		                }
     	 		             }
     	 		             //CHANGE FUNCTION BUTTON.
     	 		             if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0){
 8000f1e:	2140      	movs	r1, #64	@ 0x40
 8000f20:	4815      	ldr	r0, [pc, #84]	@ (8000f78 <KeyPad+0x578>)
 8000f22:	f000 fbd9 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000f26:	4603      	mov	r3, r0
 8000f28:	2b00      	cmp	r3, #0
 8000f2a:	d10b      	bne.n	8000f44 <KeyPad+0x544>
     	 		                HAL_Delay(100);
 8000f2c:	2064      	movs	r0, #100	@ 0x64
 8000f2e:	f000 f947 	bl	80011c0 <HAL_Delay>
     	 		                if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == 0){
 8000f32:	2140      	movs	r1, #64	@ 0x40
 8000f34:	4810      	ldr	r0, [pc, #64]	@ (8000f78 <KeyPad+0x578>)
 8000f36:	f000 fbcf 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000f3a:	4603      	mov	r3, r0
 8000f3c:	2b00      	cmp	r3, #0
 8000f3e:	d101      	bne.n	8000f44 <KeyPad+0x544>
     	 		                  Change_Passcode();
 8000f40:	f7ff fbc4 	bl	80006cc <Change_Passcode>
     	 		                }
     	 		             }
     	 		             // RETURN DEFAULT SCREEN WHEN BEGIN.
     	 		             if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0){
 8000f44:	2180      	movs	r1, #128	@ 0x80
 8000f46:	480c      	ldr	r0, [pc, #48]	@ (8000f78 <KeyPad+0x578>)
 8000f48:	f000 fbc6 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000f4c:	4603      	mov	r3, r0
 8000f4e:	2b00      	cmp	r3, #0
 8000f50:	d10b      	bne.n	8000f6a <KeyPad+0x56a>
     	 		                 HAL_Delay(130);
 8000f52:	2082      	movs	r0, #130	@ 0x82
 8000f54:	f000 f934 	bl	80011c0 <HAL_Delay>
     	 		                 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_7) == 0){
 8000f58:	2180      	movs	r1, #128	@ 0x80
 8000f5a:	4807      	ldr	r0, [pc, #28]	@ (8000f78 <KeyPad+0x578>)
 8000f5c:	f000 fbbc 	bl	80016d8 <HAL_GPIO_ReadPin>
 8000f60:	4603      	mov	r3, r0
 8000f62:	2b00      	cmp	r3, #0
 8000f64:	d101      	bne.n	8000f6a <KeyPad+0x56a>
     	 		              	  Reset_LCD();
 8000f66:	f7ff fb09 	bl	800057c <Reset_LCD>
     	 		                    }
     	 		                 }
     	                    return key;
 8000f6a:	4b06      	ldr	r3, [pc, #24]	@ (8000f84 <KeyPad+0x584>)
 8000f6c:	781b      	ldrb	r3, [r3, #0]
     	 	  }
 8000f6e:	4618      	mov	r0, r3
 8000f70:	bd80      	pop	{r7, pc}
 8000f72:	bf00      	nop
 8000f74:	20000007 	.word	0x20000007
 8000f78:	40010c00 	.word	0x40010c00
 8000f7c:	20000006 	.word	0x20000006
 8000f80:	080026d0 	.word	0x080026d0
 8000f84:	2000003b 	.word	0x2000003b
 8000f88:	080026d4 	.word	0x080026d4
 8000f8c:	080026d8 	.word	0x080026d8
 8000f90:	080026dc 	.word	0x080026dc
 8000f94:	2000003e 	.word	0x2000003e
 8000f98:	20000044 	.word	0x20000044
 8000f9c:	080026e0 	.word	0x080026e0
 8000fa0:	2000003a 	.word	0x2000003a

08000fa4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000fa4:	b480      	push	{r7}
 8000fa6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000fa8:	b672      	cpsid	i
}
 8000faa:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000fac:	bf00      	nop
 8000fae:	e7fd      	b.n	8000fac <Error_Handler+0x8>

08000fb0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000fb0:	b480      	push	{r7}
 8000fb2:	b085      	sub	sp, #20
 8000fb4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000fb6:	4b15      	ldr	r3, [pc, #84]	@ (800100c <HAL_MspInit+0x5c>)
 8000fb8:	699b      	ldr	r3, [r3, #24]
 8000fba:	4a14      	ldr	r2, [pc, #80]	@ (800100c <HAL_MspInit+0x5c>)
 8000fbc:	f043 0301 	orr.w	r3, r3, #1
 8000fc0:	6193      	str	r3, [r2, #24]
 8000fc2:	4b12      	ldr	r3, [pc, #72]	@ (800100c <HAL_MspInit+0x5c>)
 8000fc4:	699b      	ldr	r3, [r3, #24]
 8000fc6:	f003 0301 	and.w	r3, r3, #1
 8000fca:	60bb      	str	r3, [r7, #8]
 8000fcc:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000fce:	4b0f      	ldr	r3, [pc, #60]	@ (800100c <HAL_MspInit+0x5c>)
 8000fd0:	69db      	ldr	r3, [r3, #28]
 8000fd2:	4a0e      	ldr	r2, [pc, #56]	@ (800100c <HAL_MspInit+0x5c>)
 8000fd4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000fd8:	61d3      	str	r3, [r2, #28]
 8000fda:	4b0c      	ldr	r3, [pc, #48]	@ (800100c <HAL_MspInit+0x5c>)
 8000fdc:	69db      	ldr	r3, [r3, #28]
 8000fde:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000fe2:	607b      	str	r3, [r7, #4]
 8000fe4:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000fe6:	4b0a      	ldr	r3, [pc, #40]	@ (8001010 <HAL_MspInit+0x60>)
 8000fe8:	685b      	ldr	r3, [r3, #4]
 8000fea:	60fb      	str	r3, [r7, #12]
 8000fec:	68fb      	ldr	r3, [r7, #12]
 8000fee:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8000ff2:	60fb      	str	r3, [r7, #12]
 8000ff4:	68fb      	ldr	r3, [r7, #12]
 8000ff6:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000ffa:	60fb      	str	r3, [r7, #12]
 8000ffc:	4a04      	ldr	r2, [pc, #16]	@ (8001010 <HAL_MspInit+0x60>)
 8000ffe:	68fb      	ldr	r3, [r7, #12]
 8001000:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001002:	bf00      	nop
 8001004:	3714      	adds	r7, #20
 8001006:	46bd      	mov	sp, r7
 8001008:	bc80      	pop	{r7}
 800100a:	4770      	bx	lr
 800100c:	40021000 	.word	0x40021000
 8001010:	40010000 	.word	0x40010000

08001014 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001014:	b480      	push	{r7}
 8001016:	b085      	sub	sp, #20
 8001018:	af00      	add	r7, sp, #0
 800101a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 800101c:	687b      	ldr	r3, [r7, #4]
 800101e:	681b      	ldr	r3, [r3, #0]
 8001020:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001024:	d10b      	bne.n	800103e <HAL_TIM_Base_MspInit+0x2a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001026:	4b08      	ldr	r3, [pc, #32]	@ (8001048 <HAL_TIM_Base_MspInit+0x34>)
 8001028:	69db      	ldr	r3, [r3, #28]
 800102a:	4a07      	ldr	r2, [pc, #28]	@ (8001048 <HAL_TIM_Base_MspInit+0x34>)
 800102c:	f043 0301 	orr.w	r3, r3, #1
 8001030:	61d3      	str	r3, [r2, #28]
 8001032:	4b05      	ldr	r3, [pc, #20]	@ (8001048 <HAL_TIM_Base_MspInit+0x34>)
 8001034:	69db      	ldr	r3, [r3, #28]
 8001036:	f003 0301 	and.w	r3, r3, #1
 800103a:	60fb      	str	r3, [r7, #12]
 800103c:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END TIM2_MspInit 1 */

  }

}
 800103e:	bf00      	nop
 8001040:	3714      	adds	r7, #20
 8001042:	46bd      	mov	sp, r7
 8001044:	bc80      	pop	{r7}
 8001046:	4770      	bx	lr
 8001048:	40021000 	.word	0x40021000

0800104c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800104c:	b480      	push	{r7}
 800104e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001050:	bf00      	nop
 8001052:	e7fd      	b.n	8001050 <NMI_Handler+0x4>

08001054 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001054:	b480      	push	{r7}
 8001056:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001058:	bf00      	nop
 800105a:	e7fd      	b.n	8001058 <HardFault_Handler+0x4>

0800105c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800105c:	b480      	push	{r7}
 800105e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001060:	bf00      	nop
 8001062:	e7fd      	b.n	8001060 <MemManage_Handler+0x4>

08001064 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001064:	b480      	push	{r7}
 8001066:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001068:	bf00      	nop
 800106a:	e7fd      	b.n	8001068 <BusFault_Handler+0x4>

0800106c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800106c:	b480      	push	{r7}
 800106e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001070:	bf00      	nop
 8001072:	e7fd      	b.n	8001070 <UsageFault_Handler+0x4>

08001074 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001074:	b480      	push	{r7}
 8001076:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001078:	bf00      	nop
 800107a:	46bd      	mov	sp, r7
 800107c:	bc80      	pop	{r7}
 800107e:	4770      	bx	lr

08001080 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001080:	b480      	push	{r7}
 8001082:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001084:	bf00      	nop
 8001086:	46bd      	mov	sp, r7
 8001088:	bc80      	pop	{r7}
 800108a:	4770      	bx	lr

0800108c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800108c:	b480      	push	{r7}
 800108e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001090:	bf00      	nop
 8001092:	46bd      	mov	sp, r7
 8001094:	bc80      	pop	{r7}
 8001096:	4770      	bx	lr

08001098 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001098:	b580      	push	{r7, lr}
 800109a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800109c:	f000 f874 	bl	8001188 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80010a0:	bf00      	nop
 80010a2:	bd80      	pop	{r7, pc}

080010a4 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80010a4:	b480      	push	{r7}
 80010a6:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80010a8:	bf00      	nop
 80010aa:	46bd      	mov	sp, r7
 80010ac:	bc80      	pop	{r7}
 80010ae:	4770      	bx	lr

080010b0 <Reset_Handler>:
 80010b0:	f7ff fff8 	bl	80010a4 <SystemInit>
 80010b4:	480b      	ldr	r0, [pc, #44]	@ (80010e4 <LoopFillZerobss+0xe>)
 80010b6:	490c      	ldr	r1, [pc, #48]	@ (80010e8 <LoopFillZerobss+0x12>)
 80010b8:	4a0c      	ldr	r2, [pc, #48]	@ (80010ec <LoopFillZerobss+0x16>)
 80010ba:	2300      	movs	r3, #0
 80010bc:	e002      	b.n	80010c4 <LoopCopyDataInit>

080010be <CopyDataInit>:
 80010be:	58d4      	ldr	r4, [r2, r3]
 80010c0:	50c4      	str	r4, [r0, r3]
 80010c2:	3304      	adds	r3, #4

080010c4 <LoopCopyDataInit>:
 80010c4:	18c4      	adds	r4, r0, r3
 80010c6:	428c      	cmp	r4, r1
 80010c8:	d3f9      	bcc.n	80010be <CopyDataInit>
 80010ca:	4a09      	ldr	r2, [pc, #36]	@ (80010f0 <LoopFillZerobss+0x1a>)
 80010cc:	4c09      	ldr	r4, [pc, #36]	@ (80010f4 <LoopFillZerobss+0x1e>)
 80010ce:	2300      	movs	r3, #0
 80010d0:	e001      	b.n	80010d6 <LoopFillZerobss>

080010d2 <FillZerobss>:
 80010d2:	6013      	str	r3, [r2, #0]
 80010d4:	3204      	adds	r2, #4

080010d6 <LoopFillZerobss>:
 80010d6:	42a2      	cmp	r2, r4
 80010d8:	d3fb      	bcc.n	80010d2 <FillZerobss>
 80010da:	f001 fa5f 	bl	800259c <__libc_init_array>
 80010de:	f7ff f927 	bl	8000330 <main>
 80010e2:	4770      	bx	lr
 80010e4:	20000000 	.word	0x20000000
 80010e8:	20000018 	.word	0x20000018
 80010ec:	08002710 	.word	0x08002710
 80010f0:	20000018 	.word	0x20000018
 80010f4:	20000094 	.word	0x20000094

080010f8 <ADC1_2_IRQHandler>:
 80010f8:	e7fe      	b.n	80010f8 <ADC1_2_IRQHandler>
	...

080010fc <HAL_Init>:
 80010fc:	b580      	push	{r7, lr}
 80010fe:	af00      	add	r7, sp, #0
 8001100:	4b08      	ldr	r3, [pc, #32]	@ (8001124 <HAL_Init+0x28>)
 8001102:	681b      	ldr	r3, [r3, #0]
 8001104:	4a07      	ldr	r2, [pc, #28]	@ (8001124 <HAL_Init+0x28>)
 8001106:	f043 0310 	orr.w	r3, r3, #16
 800110a:	6013      	str	r3, [r2, #0]
 800110c:	2003      	movs	r0, #3
 800110e:	f000 f92b 	bl	8001368 <HAL_NVIC_SetPriorityGrouping>
 8001112:	200f      	movs	r0, #15
 8001114:	f000 f808 	bl	8001128 <HAL_InitTick>
 8001118:	f7ff ff4a 	bl	8000fb0 <HAL_MspInit>
 800111c:	2300      	movs	r3, #0
 800111e:	4618      	mov	r0, r3
 8001120:	bd80      	pop	{r7, pc}
 8001122:	bf00      	nop
 8001124:	40022000 	.word	0x40022000

08001128 <HAL_InitTick>:
 8001128:	b580      	push	{r7, lr}
 800112a:	b082      	sub	sp, #8
 800112c:	af00      	add	r7, sp, #0
 800112e:	6078      	str	r0, [r7, #4]
 8001130:	4b12      	ldr	r3, [pc, #72]	@ (800117c <HAL_InitTick+0x54>)
 8001132:	681a      	ldr	r2, [r3, #0]
 8001134:	4b12      	ldr	r3, [pc, #72]	@ (8001180 <HAL_InitTick+0x58>)
 8001136:	781b      	ldrb	r3, [r3, #0]
 8001138:	4619      	mov	r1, r3
 800113a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800113e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001142:	fbb2 f3f3 	udiv	r3, r2, r3
 8001146:	4618      	mov	r0, r3
 8001148:	f000 f935 	bl	80013b6 <HAL_SYSTICK_Config>
 800114c:	4603      	mov	r3, r0
 800114e:	2b00      	cmp	r3, #0
 8001150:	d001      	beq.n	8001156 <HAL_InitTick+0x2e>
 8001152:	2301      	movs	r3, #1
 8001154:	e00e      	b.n	8001174 <HAL_InitTick+0x4c>
 8001156:	687b      	ldr	r3, [r7, #4]
 8001158:	2b0f      	cmp	r3, #15
 800115a:	d80a      	bhi.n	8001172 <HAL_InitTick+0x4a>
 800115c:	2200      	movs	r2, #0
 800115e:	6879      	ldr	r1, [r7, #4]
 8001160:	f04f 30ff 	mov.w	r0, #4294967295
 8001164:	f000 f90b 	bl	800137e <HAL_NVIC_SetPriority>
 8001168:	4a06      	ldr	r2, [pc, #24]	@ (8001184 <HAL_InitTick+0x5c>)
 800116a:	687b      	ldr	r3, [r7, #4]
 800116c:	6013      	str	r3, [r2, #0]
 800116e:	2300      	movs	r3, #0
 8001170:	e000      	b.n	8001174 <HAL_InitTick+0x4c>
 8001172:	2301      	movs	r3, #1
 8001174:	4618      	mov	r0, r3
 8001176:	3708      	adds	r7, #8
 8001178:	46bd      	mov	sp, r7
 800117a:	bd80      	pop	{r7, pc}
 800117c:	2000000c 	.word	0x2000000c
 8001180:	20000014 	.word	0x20000014
 8001184:	20000010 	.word	0x20000010

08001188 <HAL_IncTick>:
 8001188:	b480      	push	{r7}
 800118a:	af00      	add	r7, sp, #0
 800118c:	4b05      	ldr	r3, [pc, #20]	@ (80011a4 <HAL_IncTick+0x1c>)
 800118e:	781b      	ldrb	r3, [r3, #0]
 8001190:	461a      	mov	r2, r3
 8001192:	4b05      	ldr	r3, [pc, #20]	@ (80011a8 <HAL_IncTick+0x20>)
 8001194:	681b      	ldr	r3, [r3, #0]
 8001196:	4413      	add	r3, r2
 8001198:	4a03      	ldr	r2, [pc, #12]	@ (80011a8 <HAL_IncTick+0x20>)
 800119a:	6013      	str	r3, [r2, #0]
 800119c:	bf00      	nop
 800119e:	46bd      	mov	sp, r7
 80011a0:	bc80      	pop	{r7}
 80011a2:	4770      	bx	lr
 80011a4:	20000014 	.word	0x20000014
 80011a8:	20000090 	.word	0x20000090

080011ac <HAL_GetTick>:
 80011ac:	b480      	push	{r7}
 80011ae:	af00      	add	r7, sp, #0
 80011b0:	4b02      	ldr	r3, [pc, #8]	@ (80011bc <HAL_GetTick+0x10>)
 80011b2:	681b      	ldr	r3, [r3, #0]
 80011b4:	4618      	mov	r0, r3
 80011b6:	46bd      	mov	sp, r7
 80011b8:	bc80      	pop	{r7}
 80011ba:	4770      	bx	lr
 80011bc:	20000090 	.word	0x20000090

080011c0 <HAL_Delay>:
 80011c0:	b580      	push	{r7, lr}
 80011c2:	b084      	sub	sp, #16
 80011c4:	af00      	add	r7, sp, #0
 80011c6:	6078      	str	r0, [r7, #4]
 80011c8:	f7ff fff0 	bl	80011ac <HAL_GetTick>
 80011cc:	60b8      	str	r0, [r7, #8]
 80011ce:	687b      	ldr	r3, [r7, #4]
 80011d0:	60fb      	str	r3, [r7, #12]
 80011d2:	68fb      	ldr	r3, [r7, #12]
 80011d4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80011d8:	d005      	beq.n	80011e6 <HAL_Delay+0x26>
 80011da:	4b0a      	ldr	r3, [pc, #40]	@ (8001204 <HAL_Delay+0x44>)
 80011dc:	781b      	ldrb	r3, [r3, #0]
 80011de:	461a      	mov	r2, r3
 80011e0:	68fb      	ldr	r3, [r7, #12]
 80011e2:	4413      	add	r3, r2
 80011e4:	60fb      	str	r3, [r7, #12]
 80011e6:	bf00      	nop
 80011e8:	f7ff ffe0 	bl	80011ac <HAL_GetTick>
 80011ec:	4602      	mov	r2, r0
 80011ee:	68bb      	ldr	r3, [r7, #8]
 80011f0:	1ad3      	subs	r3, r2, r3
 80011f2:	68fa      	ldr	r2, [r7, #12]
 80011f4:	429a      	cmp	r2, r3
 80011f6:	d8f7      	bhi.n	80011e8 <HAL_Delay+0x28>
 80011f8:	bf00      	nop
 80011fa:	bf00      	nop
 80011fc:	3710      	adds	r7, #16
 80011fe:	46bd      	mov	sp, r7
 8001200:	bd80      	pop	{r7, pc}
 8001202:	bf00      	nop
 8001204:	20000014 	.word	0x20000014

08001208 <__NVIC_SetPriorityGrouping>:
 8001208:	b480      	push	{r7}
 800120a:	b085      	sub	sp, #20
 800120c:	af00      	add	r7, sp, #0
 800120e:	6078      	str	r0, [r7, #4]
 8001210:	687b      	ldr	r3, [r7, #4]
 8001212:	f003 0307 	and.w	r3, r3, #7
 8001216:	60fb      	str	r3, [r7, #12]
 8001218:	4b0c      	ldr	r3, [pc, #48]	@ (800124c <__NVIC_SetPriorityGrouping+0x44>)
 800121a:	68db      	ldr	r3, [r3, #12]
 800121c:	60bb      	str	r3, [r7, #8]
 800121e:	68ba      	ldr	r2, [r7, #8]
 8001220:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001224:	4013      	ands	r3, r2
 8001226:	60bb      	str	r3, [r7, #8]
 8001228:	68fb      	ldr	r3, [r7, #12]
 800122a:	021a      	lsls	r2, r3, #8
 800122c:	68bb      	ldr	r3, [r7, #8]
 800122e:	4313      	orrs	r3, r2
 8001230:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001234:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001238:	60bb      	str	r3, [r7, #8]
 800123a:	4a04      	ldr	r2, [pc, #16]	@ (800124c <__NVIC_SetPriorityGrouping+0x44>)
 800123c:	68bb      	ldr	r3, [r7, #8]
 800123e:	60d3      	str	r3, [r2, #12]
 8001240:	bf00      	nop
 8001242:	3714      	adds	r7, #20
 8001244:	46bd      	mov	sp, r7
 8001246:	bc80      	pop	{r7}
 8001248:	4770      	bx	lr
 800124a:	bf00      	nop
 800124c:	e000ed00 	.word	0xe000ed00

08001250 <__NVIC_GetPriorityGrouping>:
 8001250:	b480      	push	{r7}
 8001252:	af00      	add	r7, sp, #0
 8001254:	4b04      	ldr	r3, [pc, #16]	@ (8001268 <__NVIC_GetPriorityGrouping+0x18>)
 8001256:	68db      	ldr	r3, [r3, #12]
 8001258:	0a1b      	lsrs	r3, r3, #8
 800125a:	f003 0307 	and.w	r3, r3, #7
 800125e:	4618      	mov	r0, r3
 8001260:	46bd      	mov	sp, r7
 8001262:	bc80      	pop	{r7}
 8001264:	4770      	bx	lr
 8001266:	bf00      	nop
 8001268:	e000ed00 	.word	0xe000ed00

0800126c <__NVIC_SetPriority>:
 800126c:	b480      	push	{r7}
 800126e:	b083      	sub	sp, #12
 8001270:	af00      	add	r7, sp, #0
 8001272:	4603      	mov	r3, r0
 8001274:	6039      	str	r1, [r7, #0]
 8001276:	71fb      	strb	r3, [r7, #7]
 8001278:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800127c:	2b00      	cmp	r3, #0
 800127e:	db0a      	blt.n	8001296 <__NVIC_SetPriority+0x2a>
 8001280:	683b      	ldr	r3, [r7, #0]
 8001282:	b2da      	uxtb	r2, r3
 8001284:	490c      	ldr	r1, [pc, #48]	@ (80012b8 <__NVIC_SetPriority+0x4c>)
 8001286:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800128a:	0112      	lsls	r2, r2, #4
 800128c:	b2d2      	uxtb	r2, r2
 800128e:	440b      	add	r3, r1
 8001290:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001294:	e00a      	b.n	80012ac <__NVIC_SetPriority+0x40>
 8001296:	683b      	ldr	r3, [r7, #0]
 8001298:	b2da      	uxtb	r2, r3
 800129a:	4908      	ldr	r1, [pc, #32]	@ (80012bc <__NVIC_SetPriority+0x50>)
 800129c:	79fb      	ldrb	r3, [r7, #7]
 800129e:	f003 030f 	and.w	r3, r3, #15
 80012a2:	3b04      	subs	r3, #4
 80012a4:	0112      	lsls	r2, r2, #4
 80012a6:	b2d2      	uxtb	r2, r2
 80012a8:	440b      	add	r3, r1
 80012aa:	761a      	strb	r2, [r3, #24]
 80012ac:	bf00      	nop
 80012ae:	370c      	adds	r7, #12
 80012b0:	46bd      	mov	sp, r7
 80012b2:	bc80      	pop	{r7}
 80012b4:	4770      	bx	lr
 80012b6:	bf00      	nop
 80012b8:	e000e100 	.word	0xe000e100
 80012bc:	e000ed00 	.word	0xe000ed00

080012c0 <NVIC_EncodePriority>:
 80012c0:	b480      	push	{r7}
 80012c2:	b089      	sub	sp, #36	@ 0x24
 80012c4:	af00      	add	r7, sp, #0
 80012c6:	60f8      	str	r0, [r7, #12]
 80012c8:	60b9      	str	r1, [r7, #8]
 80012ca:	607a      	str	r2, [r7, #4]
 80012cc:	68fb      	ldr	r3, [r7, #12]
 80012ce:	f003 0307 	and.w	r3, r3, #7
 80012d2:	61fb      	str	r3, [r7, #28]
 80012d4:	69fb      	ldr	r3, [r7, #28]
 80012d6:	f1c3 0307 	rsb	r3, r3, #7
 80012da:	2b04      	cmp	r3, #4
 80012dc:	bf28      	it	cs
 80012de:	2304      	movcs	r3, #4
 80012e0:	61bb      	str	r3, [r7, #24]
 80012e2:	69fb      	ldr	r3, [r7, #28]
 80012e4:	3304      	adds	r3, #4
 80012e6:	2b06      	cmp	r3, #6
 80012e8:	d902      	bls.n	80012f0 <NVIC_EncodePriority+0x30>
 80012ea:	69fb      	ldr	r3, [r7, #28]
 80012ec:	3b03      	subs	r3, #3
 80012ee:	e000      	b.n	80012f2 <NVIC_EncodePriority+0x32>
 80012f0:	2300      	movs	r3, #0
 80012f2:	617b      	str	r3, [r7, #20]
 80012f4:	f04f 32ff 	mov.w	r2, #4294967295
 80012f8:	69bb      	ldr	r3, [r7, #24]
 80012fa:	fa02 f303 	lsl.w	r3, r2, r3
 80012fe:	43da      	mvns	r2, r3
 8001300:	68bb      	ldr	r3, [r7, #8]
 8001302:	401a      	ands	r2, r3
 8001304:	697b      	ldr	r3, [r7, #20]
 8001306:	409a      	lsls	r2, r3
 8001308:	f04f 31ff 	mov.w	r1, #4294967295
 800130c:	697b      	ldr	r3, [r7, #20]
 800130e:	fa01 f303 	lsl.w	r3, r1, r3
 8001312:	43d9      	mvns	r1, r3
 8001314:	687b      	ldr	r3, [r7, #4]
 8001316:	400b      	ands	r3, r1
 8001318:	4313      	orrs	r3, r2
 800131a:	4618      	mov	r0, r3
 800131c:	3724      	adds	r7, #36	@ 0x24
 800131e:	46bd      	mov	sp, r7
 8001320:	bc80      	pop	{r7}
 8001322:	4770      	bx	lr

08001324 <SysTick_Config>:
 8001324:	b580      	push	{r7, lr}
 8001326:	b082      	sub	sp, #8
 8001328:	af00      	add	r7, sp, #0
 800132a:	6078      	str	r0, [r7, #4]
 800132c:	687b      	ldr	r3, [r7, #4]
 800132e:	3b01      	subs	r3, #1
 8001330:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001334:	d301      	bcc.n	800133a <SysTick_Config+0x16>
 8001336:	2301      	movs	r3, #1
 8001338:	e00f      	b.n	800135a <SysTick_Config+0x36>
 800133a:	4a0a      	ldr	r2, [pc, #40]	@ (8001364 <SysTick_Config+0x40>)
 800133c:	687b      	ldr	r3, [r7, #4]
 800133e:	3b01      	subs	r3, #1
 8001340:	6053      	str	r3, [r2, #4]
 8001342:	210f      	movs	r1, #15
 8001344:	f04f 30ff 	mov.w	r0, #4294967295
 8001348:	f7ff ff90 	bl	800126c <__NVIC_SetPriority>
 800134c:	4b05      	ldr	r3, [pc, #20]	@ (8001364 <SysTick_Config+0x40>)
 800134e:	2200      	movs	r2, #0
 8001350:	609a      	str	r2, [r3, #8]
 8001352:	4b04      	ldr	r3, [pc, #16]	@ (8001364 <SysTick_Config+0x40>)
 8001354:	2207      	movs	r2, #7
 8001356:	601a      	str	r2, [r3, #0]
 8001358:	2300      	movs	r3, #0
 800135a:	4618      	mov	r0, r3
 800135c:	3708      	adds	r7, #8
 800135e:	46bd      	mov	sp, r7
 8001360:	bd80      	pop	{r7, pc}
 8001362:	bf00      	nop
 8001364:	e000e010 	.word	0xe000e010

08001368 <HAL_NVIC_SetPriorityGrouping>:
 8001368:	b580      	push	{r7, lr}
 800136a:	b082      	sub	sp, #8
 800136c:	af00      	add	r7, sp, #0
 800136e:	6078      	str	r0, [r7, #4]
 8001370:	6878      	ldr	r0, [r7, #4]
 8001372:	f7ff ff49 	bl	8001208 <__NVIC_SetPriorityGrouping>
 8001376:	bf00      	nop
 8001378:	3708      	adds	r7, #8
 800137a:	46bd      	mov	sp, r7
 800137c:	bd80      	pop	{r7, pc}

0800137e <HAL_NVIC_SetPriority>:
 800137e:	b580      	push	{r7, lr}
 8001380:	b086      	sub	sp, #24
 8001382:	af00      	add	r7, sp, #0
 8001384:	4603      	mov	r3, r0
 8001386:	60b9      	str	r1, [r7, #8]
 8001388:	607a      	str	r2, [r7, #4]
 800138a:	73fb      	strb	r3, [r7, #15]
 800138c:	2300      	movs	r3, #0
 800138e:	617b      	str	r3, [r7, #20]
 8001390:	f7ff ff5e 	bl	8001250 <__NVIC_GetPriorityGrouping>
 8001394:	6178      	str	r0, [r7, #20]
 8001396:	687a      	ldr	r2, [r7, #4]
 8001398:	68b9      	ldr	r1, [r7, #8]
 800139a:	6978      	ldr	r0, [r7, #20]
 800139c:	f7ff ff90 	bl	80012c0 <NVIC_EncodePriority>
 80013a0:	4602      	mov	r2, r0
 80013a2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80013a6:	4611      	mov	r1, r2
 80013a8:	4618      	mov	r0, r3
 80013aa:	f7ff ff5f 	bl	800126c <__NVIC_SetPriority>
 80013ae:	bf00      	nop
 80013b0:	3718      	adds	r7, #24
 80013b2:	46bd      	mov	sp, r7
 80013b4:	bd80      	pop	{r7, pc}

080013b6 <HAL_SYSTICK_Config>:
 80013b6:	b580      	push	{r7, lr}
 80013b8:	b082      	sub	sp, #8
 80013ba:	af00      	add	r7, sp, #0
 80013bc:	6078      	str	r0, [r7, #4]
 80013be:	6878      	ldr	r0, [r7, #4]
 80013c0:	f7ff ffb0 	bl	8001324 <SysTick_Config>
 80013c4:	4603      	mov	r3, r0
 80013c6:	4618      	mov	r0, r3
 80013c8:	3708      	adds	r7, #8
 80013ca:	46bd      	mov	sp, r7
 80013cc:	bd80      	pop	{r7, pc}
	...

080013d0 <HAL_GPIO_Init>:
 80013d0:	b480      	push	{r7}
 80013d2:	b08b      	sub	sp, #44	@ 0x2c
 80013d4:	af00      	add	r7, sp, #0
 80013d6:	6078      	str	r0, [r7, #4]
 80013d8:	6039      	str	r1, [r7, #0]
 80013da:	2300      	movs	r3, #0
 80013dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80013de:	2300      	movs	r3, #0
 80013e0:	623b      	str	r3, [r7, #32]
 80013e2:	e169      	b.n	80016b8 <HAL_GPIO_Init+0x2e8>
 80013e4:	2201      	movs	r2, #1
 80013e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80013e8:	fa02 f303 	lsl.w	r3, r2, r3
 80013ec:	61fb      	str	r3, [r7, #28]
 80013ee:	683b      	ldr	r3, [r7, #0]
 80013f0:	681b      	ldr	r3, [r3, #0]
 80013f2:	69fa      	ldr	r2, [r7, #28]
 80013f4:	4013      	ands	r3, r2
 80013f6:	61bb      	str	r3, [r7, #24]
 80013f8:	69ba      	ldr	r2, [r7, #24]
 80013fa:	69fb      	ldr	r3, [r7, #28]
 80013fc:	429a      	cmp	r2, r3
 80013fe:	f040 8158 	bne.w	80016b2 <HAL_GPIO_Init+0x2e2>
 8001402:	683b      	ldr	r3, [r7, #0]
 8001404:	685b      	ldr	r3, [r3, #4]
 8001406:	4a9a      	ldr	r2, [pc, #616]	@ (8001670 <HAL_GPIO_Init+0x2a0>)
 8001408:	4293      	cmp	r3, r2
 800140a:	d05e      	beq.n	80014ca <HAL_GPIO_Init+0xfa>
 800140c:	4a98      	ldr	r2, [pc, #608]	@ (8001670 <HAL_GPIO_Init+0x2a0>)
 800140e:	4293      	cmp	r3, r2
 8001410:	d875      	bhi.n	80014fe <HAL_GPIO_Init+0x12e>
 8001412:	4a98      	ldr	r2, [pc, #608]	@ (8001674 <HAL_GPIO_Init+0x2a4>)
 8001414:	4293      	cmp	r3, r2
 8001416:	d058      	beq.n	80014ca <HAL_GPIO_Init+0xfa>
 8001418:	4a96      	ldr	r2, [pc, #600]	@ (8001674 <HAL_GPIO_Init+0x2a4>)
 800141a:	4293      	cmp	r3, r2
 800141c:	d86f      	bhi.n	80014fe <HAL_GPIO_Init+0x12e>
 800141e:	4a96      	ldr	r2, [pc, #600]	@ (8001678 <HAL_GPIO_Init+0x2a8>)
 8001420:	4293      	cmp	r3, r2
 8001422:	d052      	beq.n	80014ca <HAL_GPIO_Init+0xfa>
 8001424:	4a94      	ldr	r2, [pc, #592]	@ (8001678 <HAL_GPIO_Init+0x2a8>)
 8001426:	4293      	cmp	r3, r2
 8001428:	d869      	bhi.n	80014fe <HAL_GPIO_Init+0x12e>
 800142a:	4a94      	ldr	r2, [pc, #592]	@ (800167c <HAL_GPIO_Init+0x2ac>)
 800142c:	4293      	cmp	r3, r2
 800142e:	d04c      	beq.n	80014ca <HAL_GPIO_Init+0xfa>
 8001430:	4a92      	ldr	r2, [pc, #584]	@ (800167c <HAL_GPIO_Init+0x2ac>)
 8001432:	4293      	cmp	r3, r2
 8001434:	d863      	bhi.n	80014fe <HAL_GPIO_Init+0x12e>
 8001436:	4a92      	ldr	r2, [pc, #584]	@ (8001680 <HAL_GPIO_Init+0x2b0>)
 8001438:	4293      	cmp	r3, r2
 800143a:	d046      	beq.n	80014ca <HAL_GPIO_Init+0xfa>
 800143c:	4a90      	ldr	r2, [pc, #576]	@ (8001680 <HAL_GPIO_Init+0x2b0>)
 800143e:	4293      	cmp	r3, r2
 8001440:	d85d      	bhi.n	80014fe <HAL_GPIO_Init+0x12e>
 8001442:	2b12      	cmp	r3, #18
 8001444:	d82a      	bhi.n	800149c <HAL_GPIO_Init+0xcc>
 8001446:	2b12      	cmp	r3, #18
 8001448:	d859      	bhi.n	80014fe <HAL_GPIO_Init+0x12e>
 800144a:	a201      	add	r2, pc, #4	@ (adr r2, 8001450 <HAL_GPIO_Init+0x80>)
 800144c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001450:	080014cb 	.word	0x080014cb
 8001454:	080014a5 	.word	0x080014a5
 8001458:	080014b7 	.word	0x080014b7
 800145c:	080014f9 	.word	0x080014f9
 8001460:	080014ff 	.word	0x080014ff
 8001464:	080014ff 	.word	0x080014ff
 8001468:	080014ff 	.word	0x080014ff
 800146c:	080014ff 	.word	0x080014ff
 8001470:	080014ff 	.word	0x080014ff
 8001474:	080014ff 	.word	0x080014ff
 8001478:	080014ff 	.word	0x080014ff
 800147c:	080014ff 	.word	0x080014ff
 8001480:	080014ff 	.word	0x080014ff
 8001484:	080014ff 	.word	0x080014ff
 8001488:	080014ff 	.word	0x080014ff
 800148c:	080014ff 	.word	0x080014ff
 8001490:	080014ff 	.word	0x080014ff
 8001494:	080014ad 	.word	0x080014ad
 8001498:	080014c1 	.word	0x080014c1
 800149c:	4a79      	ldr	r2, [pc, #484]	@ (8001684 <HAL_GPIO_Init+0x2b4>)
 800149e:	4293      	cmp	r3, r2
 80014a0:	d013      	beq.n	80014ca <HAL_GPIO_Init+0xfa>
 80014a2:	e02c      	b.n	80014fe <HAL_GPIO_Init+0x12e>
 80014a4:	683b      	ldr	r3, [r7, #0]
 80014a6:	68db      	ldr	r3, [r3, #12]
 80014a8:	623b      	str	r3, [r7, #32]
 80014aa:	e029      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014ac:	683b      	ldr	r3, [r7, #0]
 80014ae:	68db      	ldr	r3, [r3, #12]
 80014b0:	3304      	adds	r3, #4
 80014b2:	623b      	str	r3, [r7, #32]
 80014b4:	e024      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014b6:	683b      	ldr	r3, [r7, #0]
 80014b8:	68db      	ldr	r3, [r3, #12]
 80014ba:	3308      	adds	r3, #8
 80014bc:	623b      	str	r3, [r7, #32]
 80014be:	e01f      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014c0:	683b      	ldr	r3, [r7, #0]
 80014c2:	68db      	ldr	r3, [r3, #12]
 80014c4:	330c      	adds	r3, #12
 80014c6:	623b      	str	r3, [r7, #32]
 80014c8:	e01a      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014ca:	683b      	ldr	r3, [r7, #0]
 80014cc:	689b      	ldr	r3, [r3, #8]
 80014ce:	2b00      	cmp	r3, #0
 80014d0:	d102      	bne.n	80014d8 <HAL_GPIO_Init+0x108>
 80014d2:	2304      	movs	r3, #4
 80014d4:	623b      	str	r3, [r7, #32]
 80014d6:	e013      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014d8:	683b      	ldr	r3, [r7, #0]
 80014da:	689b      	ldr	r3, [r3, #8]
 80014dc:	2b01      	cmp	r3, #1
 80014de:	d105      	bne.n	80014ec <HAL_GPIO_Init+0x11c>
 80014e0:	2308      	movs	r3, #8
 80014e2:	623b      	str	r3, [r7, #32]
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	69fa      	ldr	r2, [r7, #28]
 80014e8:	611a      	str	r2, [r3, #16]
 80014ea:	e009      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014ec:	2308      	movs	r3, #8
 80014ee:	623b      	str	r3, [r7, #32]
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	69fa      	ldr	r2, [r7, #28]
 80014f4:	615a      	str	r2, [r3, #20]
 80014f6:	e003      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014f8:	2300      	movs	r3, #0
 80014fa:	623b      	str	r3, [r7, #32]
 80014fc:	e000      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014fe:	bf00      	nop
 8001500:	69bb      	ldr	r3, [r7, #24]
 8001502:	2bff      	cmp	r3, #255	@ 0xff
 8001504:	d801      	bhi.n	800150a <HAL_GPIO_Init+0x13a>
 8001506:	687b      	ldr	r3, [r7, #4]
 8001508:	e001      	b.n	800150e <HAL_GPIO_Init+0x13e>
 800150a:	687b      	ldr	r3, [r7, #4]
 800150c:	3304      	adds	r3, #4
 800150e:	617b      	str	r3, [r7, #20]
 8001510:	69bb      	ldr	r3, [r7, #24]
 8001512:	2bff      	cmp	r3, #255	@ 0xff
 8001514:	d802      	bhi.n	800151c <HAL_GPIO_Init+0x14c>
 8001516:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001518:	009b      	lsls	r3, r3, #2
 800151a:	e002      	b.n	8001522 <HAL_GPIO_Init+0x152>
 800151c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800151e:	3b08      	subs	r3, #8
 8001520:	009b      	lsls	r3, r3, #2
 8001522:	613b      	str	r3, [r7, #16]
 8001524:	697b      	ldr	r3, [r7, #20]
 8001526:	681a      	ldr	r2, [r3, #0]
 8001528:	210f      	movs	r1, #15
 800152a:	693b      	ldr	r3, [r7, #16]
 800152c:	fa01 f303 	lsl.w	r3, r1, r3
 8001530:	43db      	mvns	r3, r3
 8001532:	401a      	ands	r2, r3
 8001534:	6a39      	ldr	r1, [r7, #32]
 8001536:	693b      	ldr	r3, [r7, #16]
 8001538:	fa01 f303 	lsl.w	r3, r1, r3
 800153c:	431a      	orrs	r2, r3
 800153e:	697b      	ldr	r3, [r7, #20]
 8001540:	601a      	str	r2, [r3, #0]
 8001542:	683b      	ldr	r3, [r7, #0]
 8001544:	685b      	ldr	r3, [r3, #4]
 8001546:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800154a:	2b00      	cmp	r3, #0
 800154c:	f000 80b1 	beq.w	80016b2 <HAL_GPIO_Init+0x2e2>
 8001550:	4b4d      	ldr	r3, [pc, #308]	@ (8001688 <HAL_GPIO_Init+0x2b8>)
 8001552:	699b      	ldr	r3, [r3, #24]
 8001554:	4a4c      	ldr	r2, [pc, #304]	@ (8001688 <HAL_GPIO_Init+0x2b8>)
 8001556:	f043 0301 	orr.w	r3, r3, #1
 800155a:	6193      	str	r3, [r2, #24]
 800155c:	4b4a      	ldr	r3, [pc, #296]	@ (8001688 <HAL_GPIO_Init+0x2b8>)
 800155e:	699b      	ldr	r3, [r3, #24]
 8001560:	f003 0301 	and.w	r3, r3, #1
 8001564:	60bb      	str	r3, [r7, #8]
 8001566:	68bb      	ldr	r3, [r7, #8]
 8001568:	4a48      	ldr	r2, [pc, #288]	@ (800168c <HAL_GPIO_Init+0x2bc>)
 800156a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800156c:	089b      	lsrs	r3, r3, #2
 800156e:	3302      	adds	r3, #2
 8001570:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001574:	60fb      	str	r3, [r7, #12]
 8001576:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001578:	f003 0303 	and.w	r3, r3, #3
 800157c:	009b      	lsls	r3, r3, #2
 800157e:	220f      	movs	r2, #15
 8001580:	fa02 f303 	lsl.w	r3, r2, r3
 8001584:	43db      	mvns	r3, r3
 8001586:	68fa      	ldr	r2, [r7, #12]
 8001588:	4013      	ands	r3, r2
 800158a:	60fb      	str	r3, [r7, #12]
 800158c:	687b      	ldr	r3, [r7, #4]
 800158e:	4a40      	ldr	r2, [pc, #256]	@ (8001690 <HAL_GPIO_Init+0x2c0>)
 8001590:	4293      	cmp	r3, r2
 8001592:	d013      	beq.n	80015bc <HAL_GPIO_Init+0x1ec>
 8001594:	687b      	ldr	r3, [r7, #4]
 8001596:	4a3f      	ldr	r2, [pc, #252]	@ (8001694 <HAL_GPIO_Init+0x2c4>)
 8001598:	4293      	cmp	r3, r2
 800159a:	d00d      	beq.n	80015b8 <HAL_GPIO_Init+0x1e8>
 800159c:	687b      	ldr	r3, [r7, #4]
 800159e:	4a3e      	ldr	r2, [pc, #248]	@ (8001698 <HAL_GPIO_Init+0x2c8>)
 80015a0:	4293      	cmp	r3, r2
 80015a2:	d007      	beq.n	80015b4 <HAL_GPIO_Init+0x1e4>
 80015a4:	687b      	ldr	r3, [r7, #4]
 80015a6:	4a3d      	ldr	r2, [pc, #244]	@ (800169c <HAL_GPIO_Init+0x2cc>)
 80015a8:	4293      	cmp	r3, r2
 80015aa:	d101      	bne.n	80015b0 <HAL_GPIO_Init+0x1e0>
 80015ac:	2303      	movs	r3, #3
 80015ae:	e006      	b.n	80015be <HAL_GPIO_Init+0x1ee>
 80015b0:	2304      	movs	r3, #4
 80015b2:	e004      	b.n	80015be <HAL_GPIO_Init+0x1ee>
 80015b4:	2302      	movs	r3, #2
 80015b6:	e002      	b.n	80015be <HAL_GPIO_Init+0x1ee>
 80015b8:	2301      	movs	r3, #1
 80015ba:	e000      	b.n	80015be <HAL_GPIO_Init+0x1ee>
 80015bc:	2300      	movs	r3, #0
 80015be:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80015c0:	f002 0203 	and.w	r2, r2, #3
 80015c4:	0092      	lsls	r2, r2, #2
 80015c6:	4093      	lsls	r3, r2
 80015c8:	68fa      	ldr	r2, [r7, #12]
 80015ca:	4313      	orrs	r3, r2
 80015cc:	60fb      	str	r3, [r7, #12]
 80015ce:	492f      	ldr	r1, [pc, #188]	@ (800168c <HAL_GPIO_Init+0x2bc>)
 80015d0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80015d2:	089b      	lsrs	r3, r3, #2
 80015d4:	3302      	adds	r3, #2
 80015d6:	68fa      	ldr	r2, [r7, #12]
 80015d8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80015dc:	683b      	ldr	r3, [r7, #0]
 80015de:	685b      	ldr	r3, [r3, #4]
 80015e0:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80015e4:	2b00      	cmp	r3, #0
 80015e6:	d006      	beq.n	80015f6 <HAL_GPIO_Init+0x226>
 80015e8:	4b2d      	ldr	r3, [pc, #180]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 80015ea:	689a      	ldr	r2, [r3, #8]
 80015ec:	492c      	ldr	r1, [pc, #176]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 80015ee:	69bb      	ldr	r3, [r7, #24]
 80015f0:	4313      	orrs	r3, r2
 80015f2:	608b      	str	r3, [r1, #8]
 80015f4:	e006      	b.n	8001604 <HAL_GPIO_Init+0x234>
 80015f6:	4b2a      	ldr	r3, [pc, #168]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 80015f8:	689a      	ldr	r2, [r3, #8]
 80015fa:	69bb      	ldr	r3, [r7, #24]
 80015fc:	43db      	mvns	r3, r3
 80015fe:	4928      	ldr	r1, [pc, #160]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001600:	4013      	ands	r3, r2
 8001602:	608b      	str	r3, [r1, #8]
 8001604:	683b      	ldr	r3, [r7, #0]
 8001606:	685b      	ldr	r3, [r3, #4]
 8001608:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800160c:	2b00      	cmp	r3, #0
 800160e:	d006      	beq.n	800161e <HAL_GPIO_Init+0x24e>
 8001610:	4b23      	ldr	r3, [pc, #140]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001612:	68da      	ldr	r2, [r3, #12]
 8001614:	4922      	ldr	r1, [pc, #136]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001616:	69bb      	ldr	r3, [r7, #24]
 8001618:	4313      	orrs	r3, r2
 800161a:	60cb      	str	r3, [r1, #12]
 800161c:	e006      	b.n	800162c <HAL_GPIO_Init+0x25c>
 800161e:	4b20      	ldr	r3, [pc, #128]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001620:	68da      	ldr	r2, [r3, #12]
 8001622:	69bb      	ldr	r3, [r7, #24]
 8001624:	43db      	mvns	r3, r3
 8001626:	491e      	ldr	r1, [pc, #120]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001628:	4013      	ands	r3, r2
 800162a:	60cb      	str	r3, [r1, #12]
 800162c:	683b      	ldr	r3, [r7, #0]
 800162e:	685b      	ldr	r3, [r3, #4]
 8001630:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001634:	2b00      	cmp	r3, #0
 8001636:	d006      	beq.n	8001646 <HAL_GPIO_Init+0x276>
 8001638:	4b19      	ldr	r3, [pc, #100]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 800163a:	685a      	ldr	r2, [r3, #4]
 800163c:	4918      	ldr	r1, [pc, #96]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 800163e:	69bb      	ldr	r3, [r7, #24]
 8001640:	4313      	orrs	r3, r2
 8001642:	604b      	str	r3, [r1, #4]
 8001644:	e006      	b.n	8001654 <HAL_GPIO_Init+0x284>
 8001646:	4b16      	ldr	r3, [pc, #88]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001648:	685a      	ldr	r2, [r3, #4]
 800164a:	69bb      	ldr	r3, [r7, #24]
 800164c:	43db      	mvns	r3, r3
 800164e:	4914      	ldr	r1, [pc, #80]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001650:	4013      	ands	r3, r2
 8001652:	604b      	str	r3, [r1, #4]
 8001654:	683b      	ldr	r3, [r7, #0]
 8001656:	685b      	ldr	r3, [r3, #4]
 8001658:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800165c:	2b00      	cmp	r3, #0
 800165e:	d021      	beq.n	80016a4 <HAL_GPIO_Init+0x2d4>
 8001660:	4b0f      	ldr	r3, [pc, #60]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001662:	681a      	ldr	r2, [r3, #0]
 8001664:	490e      	ldr	r1, [pc, #56]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001666:	69bb      	ldr	r3, [r7, #24]
 8001668:	4313      	orrs	r3, r2
 800166a:	600b      	str	r3, [r1, #0]
 800166c:	e021      	b.n	80016b2 <HAL_GPIO_Init+0x2e2>
 800166e:	bf00      	nop
 8001670:	10320000 	.word	0x10320000
 8001674:	10310000 	.word	0x10310000
 8001678:	10220000 	.word	0x10220000
 800167c:	10210000 	.word	0x10210000
 8001680:	10120000 	.word	0x10120000
 8001684:	10110000 	.word	0x10110000
 8001688:	40021000 	.word	0x40021000
 800168c:	40010000 	.word	0x40010000
 8001690:	40010800 	.word	0x40010800
 8001694:	40010c00 	.word	0x40010c00
 8001698:	40011000 	.word	0x40011000
 800169c:	40011400 	.word	0x40011400
 80016a0:	40010400 	.word	0x40010400
 80016a4:	4b0b      	ldr	r3, [pc, #44]	@ (80016d4 <HAL_GPIO_Init+0x304>)
 80016a6:	681a      	ldr	r2, [r3, #0]
 80016a8:	69bb      	ldr	r3, [r7, #24]
 80016aa:	43db      	mvns	r3, r3
 80016ac:	4909      	ldr	r1, [pc, #36]	@ (80016d4 <HAL_GPIO_Init+0x304>)
 80016ae:	4013      	ands	r3, r2
 80016b0:	600b      	str	r3, [r1, #0]
 80016b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80016b4:	3301      	adds	r3, #1
 80016b6:	627b      	str	r3, [r7, #36]	@ 0x24
 80016b8:	683b      	ldr	r3, [r7, #0]
 80016ba:	681a      	ldr	r2, [r3, #0]
 80016bc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80016be:	fa22 f303 	lsr.w	r3, r2, r3
 80016c2:	2b00      	cmp	r3, #0
 80016c4:	f47f ae8e 	bne.w	80013e4 <HAL_GPIO_Init+0x14>
 80016c8:	bf00      	nop
 80016ca:	bf00      	nop
 80016cc:	372c      	adds	r7, #44	@ 0x2c
 80016ce:	46bd      	mov	sp, r7
 80016d0:	bc80      	pop	{r7}
 80016d2:	4770      	bx	lr
 80016d4:	40010400 	.word	0x40010400

080016d8 <HAL_GPIO_ReadPin>:
 80016d8:	b480      	push	{r7}
 80016da:	b085      	sub	sp, #20
 80016dc:	af00      	add	r7, sp, #0
 80016de:	6078      	str	r0, [r7, #4]
 80016e0:	460b      	mov	r3, r1
 80016e2:	807b      	strh	r3, [r7, #2]
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	689a      	ldr	r2, [r3, #8]
 80016e8:	887b      	ldrh	r3, [r7, #2]
 80016ea:	4013      	ands	r3, r2
 80016ec:	2b00      	cmp	r3, #0
 80016ee:	d002      	beq.n	80016f6 <HAL_GPIO_ReadPin+0x1e>
 80016f0:	2301      	movs	r3, #1
 80016f2:	73fb      	strb	r3, [r7, #15]
 80016f4:	e001      	b.n	80016fa <HAL_GPIO_ReadPin+0x22>
 80016f6:	2300      	movs	r3, #0
 80016f8:	73fb      	strb	r3, [r7, #15]
 80016fa:	7bfb      	ldrb	r3, [r7, #15]
 80016fc:	4618      	mov	r0, r3
 80016fe:	3714      	adds	r7, #20
 8001700:	46bd      	mov	sp, r7
 8001702:	bc80      	pop	{r7}
 8001704:	4770      	bx	lr

08001706 <HAL_GPIO_WritePin>:
 8001706:	b480      	push	{r7}
 8001708:	b083      	sub	sp, #12
 800170a:	af00      	add	r7, sp, #0
 800170c:	6078      	str	r0, [r7, #4]
 800170e:	460b      	mov	r3, r1
 8001710:	807b      	strh	r3, [r7, #2]
 8001712:	4613      	mov	r3, r2
 8001714:	707b      	strb	r3, [r7, #1]
 8001716:	787b      	ldrb	r3, [r7, #1]
 8001718:	2b00      	cmp	r3, #0
 800171a:	d003      	beq.n	8001724 <HAL_GPIO_WritePin+0x1e>
 800171c:	887a      	ldrh	r2, [r7, #2]
 800171e:	687b      	ldr	r3, [r7, #4]
 8001720:	611a      	str	r2, [r3, #16]
 8001722:	e003      	b.n	800172c <HAL_GPIO_WritePin+0x26>
 8001724:	887b      	ldrh	r3, [r7, #2]
 8001726:	041a      	lsls	r2, r3, #16
 8001728:	687b      	ldr	r3, [r7, #4]
 800172a:	611a      	str	r2, [r3, #16]
 800172c:	bf00      	nop
 800172e:	370c      	adds	r7, #12
 8001730:	46bd      	mov	sp, r7
 8001732:	bc80      	pop	{r7}
 8001734:	4770      	bx	lr
	...

08001738 <HAL_RCC_OscConfig>:
 8001738:	b580      	push	{r7, lr}
 800173a:	b086      	sub	sp, #24
 800173c:	af00      	add	r7, sp, #0
 800173e:	6078      	str	r0, [r7, #4]
 8001740:	687b      	ldr	r3, [r7, #4]
 8001742:	2b00      	cmp	r3, #0
 8001744:	d101      	bne.n	800174a <HAL_RCC_OscConfig+0x12>
 8001746:	2301      	movs	r3, #1
 8001748:	e272      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 800174a:	687b      	ldr	r3, [r7, #4]
 800174c:	681b      	ldr	r3, [r3, #0]
 800174e:	f003 0301 	and.w	r3, r3, #1
 8001752:	2b00      	cmp	r3, #0
 8001754:	f000 8087 	beq.w	8001866 <HAL_RCC_OscConfig+0x12e>
 8001758:	4b92      	ldr	r3, [pc, #584]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 800175a:	685b      	ldr	r3, [r3, #4]
 800175c:	f003 030c 	and.w	r3, r3, #12
 8001760:	2b04      	cmp	r3, #4
 8001762:	d00c      	beq.n	800177e <HAL_RCC_OscConfig+0x46>
 8001764:	4b8f      	ldr	r3, [pc, #572]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001766:	685b      	ldr	r3, [r3, #4]
 8001768:	f003 030c 	and.w	r3, r3, #12
 800176c:	2b08      	cmp	r3, #8
 800176e:	d112      	bne.n	8001796 <HAL_RCC_OscConfig+0x5e>
 8001770:	4b8c      	ldr	r3, [pc, #560]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001772:	685b      	ldr	r3, [r3, #4]
 8001774:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001778:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800177c:	d10b      	bne.n	8001796 <HAL_RCC_OscConfig+0x5e>
 800177e:	4b89      	ldr	r3, [pc, #548]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001780:	681b      	ldr	r3, [r3, #0]
 8001782:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001786:	2b00      	cmp	r3, #0
 8001788:	d06c      	beq.n	8001864 <HAL_RCC_OscConfig+0x12c>
 800178a:	687b      	ldr	r3, [r7, #4]
 800178c:	685b      	ldr	r3, [r3, #4]
 800178e:	2b00      	cmp	r3, #0
 8001790:	d168      	bne.n	8001864 <HAL_RCC_OscConfig+0x12c>
 8001792:	2301      	movs	r3, #1
 8001794:	e24c      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001796:	687b      	ldr	r3, [r7, #4]
 8001798:	685b      	ldr	r3, [r3, #4]
 800179a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800179e:	d106      	bne.n	80017ae <HAL_RCC_OscConfig+0x76>
 80017a0:	4b80      	ldr	r3, [pc, #512]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017a2:	681b      	ldr	r3, [r3, #0]
 80017a4:	4a7f      	ldr	r2, [pc, #508]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017a6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80017aa:	6013      	str	r3, [r2, #0]
 80017ac:	e02e      	b.n	800180c <HAL_RCC_OscConfig+0xd4>
 80017ae:	687b      	ldr	r3, [r7, #4]
 80017b0:	685b      	ldr	r3, [r3, #4]
 80017b2:	2b00      	cmp	r3, #0
 80017b4:	d10c      	bne.n	80017d0 <HAL_RCC_OscConfig+0x98>
 80017b6:	4b7b      	ldr	r3, [pc, #492]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017b8:	681b      	ldr	r3, [r3, #0]
 80017ba:	4a7a      	ldr	r2, [pc, #488]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017bc:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80017c0:	6013      	str	r3, [r2, #0]
 80017c2:	4b78      	ldr	r3, [pc, #480]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017c4:	681b      	ldr	r3, [r3, #0]
 80017c6:	4a77      	ldr	r2, [pc, #476]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017c8:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80017cc:	6013      	str	r3, [r2, #0]
 80017ce:	e01d      	b.n	800180c <HAL_RCC_OscConfig+0xd4>
 80017d0:	687b      	ldr	r3, [r7, #4]
 80017d2:	685b      	ldr	r3, [r3, #4]
 80017d4:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80017d8:	d10c      	bne.n	80017f4 <HAL_RCC_OscConfig+0xbc>
 80017da:	4b72      	ldr	r3, [pc, #456]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017dc:	681b      	ldr	r3, [r3, #0]
 80017de:	4a71      	ldr	r2, [pc, #452]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017e0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80017e4:	6013      	str	r3, [r2, #0]
 80017e6:	4b6f      	ldr	r3, [pc, #444]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	4a6e      	ldr	r2, [pc, #440]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017ec:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80017f0:	6013      	str	r3, [r2, #0]
 80017f2:	e00b      	b.n	800180c <HAL_RCC_OscConfig+0xd4>
 80017f4:	4b6b      	ldr	r3, [pc, #428]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017f6:	681b      	ldr	r3, [r3, #0]
 80017f8:	4a6a      	ldr	r2, [pc, #424]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017fa:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80017fe:	6013      	str	r3, [r2, #0]
 8001800:	4b68      	ldr	r3, [pc, #416]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001802:	681b      	ldr	r3, [r3, #0]
 8001804:	4a67      	ldr	r2, [pc, #412]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001806:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800180a:	6013      	str	r3, [r2, #0]
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	685b      	ldr	r3, [r3, #4]
 8001810:	2b00      	cmp	r3, #0
 8001812:	d013      	beq.n	800183c <HAL_RCC_OscConfig+0x104>
 8001814:	f7ff fcca 	bl	80011ac <HAL_GetTick>
 8001818:	6138      	str	r0, [r7, #16]
 800181a:	e008      	b.n	800182e <HAL_RCC_OscConfig+0xf6>
 800181c:	f7ff fcc6 	bl	80011ac <HAL_GetTick>
 8001820:	4602      	mov	r2, r0
 8001822:	693b      	ldr	r3, [r7, #16]
 8001824:	1ad3      	subs	r3, r2, r3
 8001826:	2b64      	cmp	r3, #100	@ 0x64
 8001828:	d901      	bls.n	800182e <HAL_RCC_OscConfig+0xf6>
 800182a:	2303      	movs	r3, #3
 800182c:	e200      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 800182e:	4b5d      	ldr	r3, [pc, #372]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001830:	681b      	ldr	r3, [r3, #0]
 8001832:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001836:	2b00      	cmp	r3, #0
 8001838:	d0f0      	beq.n	800181c <HAL_RCC_OscConfig+0xe4>
 800183a:	e014      	b.n	8001866 <HAL_RCC_OscConfig+0x12e>
 800183c:	f7ff fcb6 	bl	80011ac <HAL_GetTick>
 8001840:	6138      	str	r0, [r7, #16]
 8001842:	e008      	b.n	8001856 <HAL_RCC_OscConfig+0x11e>
 8001844:	f7ff fcb2 	bl	80011ac <HAL_GetTick>
 8001848:	4602      	mov	r2, r0
 800184a:	693b      	ldr	r3, [r7, #16]
 800184c:	1ad3      	subs	r3, r2, r3
 800184e:	2b64      	cmp	r3, #100	@ 0x64
 8001850:	d901      	bls.n	8001856 <HAL_RCC_OscConfig+0x11e>
 8001852:	2303      	movs	r3, #3
 8001854:	e1ec      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001856:	4b53      	ldr	r3, [pc, #332]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001858:	681b      	ldr	r3, [r3, #0]
 800185a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800185e:	2b00      	cmp	r3, #0
 8001860:	d1f0      	bne.n	8001844 <HAL_RCC_OscConfig+0x10c>
 8001862:	e000      	b.n	8001866 <HAL_RCC_OscConfig+0x12e>
 8001864:	bf00      	nop
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	681b      	ldr	r3, [r3, #0]
 800186a:	f003 0302 	and.w	r3, r3, #2
 800186e:	2b00      	cmp	r3, #0
 8001870:	d063      	beq.n	800193a <HAL_RCC_OscConfig+0x202>
 8001872:	4b4c      	ldr	r3, [pc, #304]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001874:	685b      	ldr	r3, [r3, #4]
 8001876:	f003 030c 	and.w	r3, r3, #12
 800187a:	2b00      	cmp	r3, #0
 800187c:	d00b      	beq.n	8001896 <HAL_RCC_OscConfig+0x15e>
 800187e:	4b49      	ldr	r3, [pc, #292]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001880:	685b      	ldr	r3, [r3, #4]
 8001882:	f003 030c 	and.w	r3, r3, #12
 8001886:	2b08      	cmp	r3, #8
 8001888:	d11c      	bne.n	80018c4 <HAL_RCC_OscConfig+0x18c>
 800188a:	4b46      	ldr	r3, [pc, #280]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 800188c:	685b      	ldr	r3, [r3, #4]
 800188e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001892:	2b00      	cmp	r3, #0
 8001894:	d116      	bne.n	80018c4 <HAL_RCC_OscConfig+0x18c>
 8001896:	4b43      	ldr	r3, [pc, #268]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	f003 0302 	and.w	r3, r3, #2
 800189e:	2b00      	cmp	r3, #0
 80018a0:	d005      	beq.n	80018ae <HAL_RCC_OscConfig+0x176>
 80018a2:	687b      	ldr	r3, [r7, #4]
 80018a4:	691b      	ldr	r3, [r3, #16]
 80018a6:	2b01      	cmp	r3, #1
 80018a8:	d001      	beq.n	80018ae <HAL_RCC_OscConfig+0x176>
 80018aa:	2301      	movs	r3, #1
 80018ac:	e1c0      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 80018ae:	4b3d      	ldr	r3, [pc, #244]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80018b6:	687b      	ldr	r3, [r7, #4]
 80018b8:	695b      	ldr	r3, [r3, #20]
 80018ba:	00db      	lsls	r3, r3, #3
 80018bc:	4939      	ldr	r1, [pc, #228]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80018be:	4313      	orrs	r3, r2
 80018c0:	600b      	str	r3, [r1, #0]
 80018c2:	e03a      	b.n	800193a <HAL_RCC_OscConfig+0x202>
 80018c4:	687b      	ldr	r3, [r7, #4]
 80018c6:	691b      	ldr	r3, [r3, #16]
 80018c8:	2b00      	cmp	r3, #0
 80018ca:	d020      	beq.n	800190e <HAL_RCC_OscConfig+0x1d6>
 80018cc:	4b36      	ldr	r3, [pc, #216]	@ (80019a8 <HAL_RCC_OscConfig+0x270>)
 80018ce:	2201      	movs	r2, #1
 80018d0:	601a      	str	r2, [r3, #0]
 80018d2:	f7ff fc6b 	bl	80011ac <HAL_GetTick>
 80018d6:	6138      	str	r0, [r7, #16]
 80018d8:	e008      	b.n	80018ec <HAL_RCC_OscConfig+0x1b4>
 80018da:	f7ff fc67 	bl	80011ac <HAL_GetTick>
 80018de:	4602      	mov	r2, r0
 80018e0:	693b      	ldr	r3, [r7, #16]
 80018e2:	1ad3      	subs	r3, r2, r3
 80018e4:	2b02      	cmp	r3, #2
 80018e6:	d901      	bls.n	80018ec <HAL_RCC_OscConfig+0x1b4>
 80018e8:	2303      	movs	r3, #3
 80018ea:	e1a1      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 80018ec:	4b2d      	ldr	r3, [pc, #180]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80018ee:	681b      	ldr	r3, [r3, #0]
 80018f0:	f003 0302 	and.w	r3, r3, #2
 80018f4:	2b00      	cmp	r3, #0
 80018f6:	d0f0      	beq.n	80018da <HAL_RCC_OscConfig+0x1a2>
 80018f8:	4b2a      	ldr	r3, [pc, #168]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80018fa:	681b      	ldr	r3, [r3, #0]
 80018fc:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001900:	687b      	ldr	r3, [r7, #4]
 8001902:	695b      	ldr	r3, [r3, #20]
 8001904:	00db      	lsls	r3, r3, #3
 8001906:	4927      	ldr	r1, [pc, #156]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001908:	4313      	orrs	r3, r2
 800190a:	600b      	str	r3, [r1, #0]
 800190c:	e015      	b.n	800193a <HAL_RCC_OscConfig+0x202>
 800190e:	4b26      	ldr	r3, [pc, #152]	@ (80019a8 <HAL_RCC_OscConfig+0x270>)
 8001910:	2200      	movs	r2, #0
 8001912:	601a      	str	r2, [r3, #0]
 8001914:	f7ff fc4a 	bl	80011ac <HAL_GetTick>
 8001918:	6138      	str	r0, [r7, #16]
 800191a:	e008      	b.n	800192e <HAL_RCC_OscConfig+0x1f6>
 800191c:	f7ff fc46 	bl	80011ac <HAL_GetTick>
 8001920:	4602      	mov	r2, r0
 8001922:	693b      	ldr	r3, [r7, #16]
 8001924:	1ad3      	subs	r3, r2, r3
 8001926:	2b02      	cmp	r3, #2
 8001928:	d901      	bls.n	800192e <HAL_RCC_OscConfig+0x1f6>
 800192a:	2303      	movs	r3, #3
 800192c:	e180      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 800192e:	4b1d      	ldr	r3, [pc, #116]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001930:	681b      	ldr	r3, [r3, #0]
 8001932:	f003 0302 	and.w	r3, r3, #2
 8001936:	2b00      	cmp	r3, #0
 8001938:	d1f0      	bne.n	800191c <HAL_RCC_OscConfig+0x1e4>
 800193a:	687b      	ldr	r3, [r7, #4]
 800193c:	681b      	ldr	r3, [r3, #0]
 800193e:	f003 0308 	and.w	r3, r3, #8
 8001942:	2b00      	cmp	r3, #0
 8001944:	d03a      	beq.n	80019bc <HAL_RCC_OscConfig+0x284>
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	699b      	ldr	r3, [r3, #24]
 800194a:	2b00      	cmp	r3, #0
 800194c:	d019      	beq.n	8001982 <HAL_RCC_OscConfig+0x24a>
 800194e:	4b17      	ldr	r3, [pc, #92]	@ (80019ac <HAL_RCC_OscConfig+0x274>)
 8001950:	2201      	movs	r2, #1
 8001952:	601a      	str	r2, [r3, #0]
 8001954:	f7ff fc2a 	bl	80011ac <HAL_GetTick>
 8001958:	6138      	str	r0, [r7, #16]
 800195a:	e008      	b.n	800196e <HAL_RCC_OscConfig+0x236>
 800195c:	f7ff fc26 	bl	80011ac <HAL_GetTick>
 8001960:	4602      	mov	r2, r0
 8001962:	693b      	ldr	r3, [r7, #16]
 8001964:	1ad3      	subs	r3, r2, r3
 8001966:	2b02      	cmp	r3, #2
 8001968:	d901      	bls.n	800196e <HAL_RCC_OscConfig+0x236>
 800196a:	2303      	movs	r3, #3
 800196c:	e160      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 800196e:	4b0d      	ldr	r3, [pc, #52]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001970:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001972:	f003 0302 	and.w	r3, r3, #2
 8001976:	2b00      	cmp	r3, #0
 8001978:	d0f0      	beq.n	800195c <HAL_RCC_OscConfig+0x224>
 800197a:	2001      	movs	r0, #1
 800197c:	f000 fa9c 	bl	8001eb8 <RCC_Delay>
 8001980:	e01c      	b.n	80019bc <HAL_RCC_OscConfig+0x284>
 8001982:	4b0a      	ldr	r3, [pc, #40]	@ (80019ac <HAL_RCC_OscConfig+0x274>)
 8001984:	2200      	movs	r2, #0
 8001986:	601a      	str	r2, [r3, #0]
 8001988:	f7ff fc10 	bl	80011ac <HAL_GetTick>
 800198c:	6138      	str	r0, [r7, #16]
 800198e:	e00f      	b.n	80019b0 <HAL_RCC_OscConfig+0x278>
 8001990:	f7ff fc0c 	bl	80011ac <HAL_GetTick>
 8001994:	4602      	mov	r2, r0
 8001996:	693b      	ldr	r3, [r7, #16]
 8001998:	1ad3      	subs	r3, r2, r3
 800199a:	2b02      	cmp	r3, #2
 800199c:	d908      	bls.n	80019b0 <HAL_RCC_OscConfig+0x278>
 800199e:	2303      	movs	r3, #3
 80019a0:	e146      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 80019a2:	bf00      	nop
 80019a4:	40021000 	.word	0x40021000
 80019a8:	42420000 	.word	0x42420000
 80019ac:	42420480 	.word	0x42420480
 80019b0:	4b92      	ldr	r3, [pc, #584]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 80019b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80019b4:	f003 0302 	and.w	r3, r3, #2
 80019b8:	2b00      	cmp	r3, #0
 80019ba:	d1e9      	bne.n	8001990 <HAL_RCC_OscConfig+0x258>
 80019bc:	687b      	ldr	r3, [r7, #4]
 80019be:	681b      	ldr	r3, [r3, #0]
 80019c0:	f003 0304 	and.w	r3, r3, #4
 80019c4:	2b00      	cmp	r3, #0
 80019c6:	f000 80a6 	beq.w	8001b16 <HAL_RCC_OscConfig+0x3de>
 80019ca:	2300      	movs	r3, #0
 80019cc:	75fb      	strb	r3, [r7, #23]
 80019ce:	4b8b      	ldr	r3, [pc, #556]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 80019d0:	69db      	ldr	r3, [r3, #28]
 80019d2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80019d6:	2b00      	cmp	r3, #0
 80019d8:	d10d      	bne.n	80019f6 <HAL_RCC_OscConfig+0x2be>
 80019da:	4b88      	ldr	r3, [pc, #544]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 80019dc:	69db      	ldr	r3, [r3, #28]
 80019de:	4a87      	ldr	r2, [pc, #540]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 80019e0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80019e4:	61d3      	str	r3, [r2, #28]
 80019e6:	4b85      	ldr	r3, [pc, #532]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 80019e8:	69db      	ldr	r3, [r3, #28]
 80019ea:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80019ee:	60bb      	str	r3, [r7, #8]
 80019f0:	68bb      	ldr	r3, [r7, #8]
 80019f2:	2301      	movs	r3, #1
 80019f4:	75fb      	strb	r3, [r7, #23]
 80019f6:	4b82      	ldr	r3, [pc, #520]	@ (8001c00 <HAL_RCC_OscConfig+0x4c8>)
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80019fe:	2b00      	cmp	r3, #0
 8001a00:	d118      	bne.n	8001a34 <HAL_RCC_OscConfig+0x2fc>
 8001a02:	4b7f      	ldr	r3, [pc, #508]	@ (8001c00 <HAL_RCC_OscConfig+0x4c8>)
 8001a04:	681b      	ldr	r3, [r3, #0]
 8001a06:	4a7e      	ldr	r2, [pc, #504]	@ (8001c00 <HAL_RCC_OscConfig+0x4c8>)
 8001a08:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001a0c:	6013      	str	r3, [r2, #0]
 8001a0e:	f7ff fbcd 	bl	80011ac <HAL_GetTick>
 8001a12:	6138      	str	r0, [r7, #16]
 8001a14:	e008      	b.n	8001a28 <HAL_RCC_OscConfig+0x2f0>
 8001a16:	f7ff fbc9 	bl	80011ac <HAL_GetTick>
 8001a1a:	4602      	mov	r2, r0
 8001a1c:	693b      	ldr	r3, [r7, #16]
 8001a1e:	1ad3      	subs	r3, r2, r3
 8001a20:	2b64      	cmp	r3, #100	@ 0x64
 8001a22:	d901      	bls.n	8001a28 <HAL_RCC_OscConfig+0x2f0>
 8001a24:	2303      	movs	r3, #3
 8001a26:	e103      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001a28:	4b75      	ldr	r3, [pc, #468]	@ (8001c00 <HAL_RCC_OscConfig+0x4c8>)
 8001a2a:	681b      	ldr	r3, [r3, #0]
 8001a2c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001a30:	2b00      	cmp	r3, #0
 8001a32:	d0f0      	beq.n	8001a16 <HAL_RCC_OscConfig+0x2de>
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	68db      	ldr	r3, [r3, #12]
 8001a38:	2b01      	cmp	r3, #1
 8001a3a:	d106      	bne.n	8001a4a <HAL_RCC_OscConfig+0x312>
 8001a3c:	4b6f      	ldr	r3, [pc, #444]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a3e:	6a1b      	ldr	r3, [r3, #32]
 8001a40:	4a6e      	ldr	r2, [pc, #440]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a42:	f043 0301 	orr.w	r3, r3, #1
 8001a46:	6213      	str	r3, [r2, #32]
 8001a48:	e02d      	b.n	8001aa6 <HAL_RCC_OscConfig+0x36e>
 8001a4a:	687b      	ldr	r3, [r7, #4]
 8001a4c:	68db      	ldr	r3, [r3, #12]
 8001a4e:	2b00      	cmp	r3, #0
 8001a50:	d10c      	bne.n	8001a6c <HAL_RCC_OscConfig+0x334>
 8001a52:	4b6a      	ldr	r3, [pc, #424]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a54:	6a1b      	ldr	r3, [r3, #32]
 8001a56:	4a69      	ldr	r2, [pc, #420]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a58:	f023 0301 	bic.w	r3, r3, #1
 8001a5c:	6213      	str	r3, [r2, #32]
 8001a5e:	4b67      	ldr	r3, [pc, #412]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a60:	6a1b      	ldr	r3, [r3, #32]
 8001a62:	4a66      	ldr	r2, [pc, #408]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a64:	f023 0304 	bic.w	r3, r3, #4
 8001a68:	6213      	str	r3, [r2, #32]
 8001a6a:	e01c      	b.n	8001aa6 <HAL_RCC_OscConfig+0x36e>
 8001a6c:	687b      	ldr	r3, [r7, #4]
 8001a6e:	68db      	ldr	r3, [r3, #12]
 8001a70:	2b05      	cmp	r3, #5
 8001a72:	d10c      	bne.n	8001a8e <HAL_RCC_OscConfig+0x356>
 8001a74:	4b61      	ldr	r3, [pc, #388]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a76:	6a1b      	ldr	r3, [r3, #32]
 8001a78:	4a60      	ldr	r2, [pc, #384]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a7a:	f043 0304 	orr.w	r3, r3, #4
 8001a7e:	6213      	str	r3, [r2, #32]
 8001a80:	4b5e      	ldr	r3, [pc, #376]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a82:	6a1b      	ldr	r3, [r3, #32]
 8001a84:	4a5d      	ldr	r2, [pc, #372]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a86:	f043 0301 	orr.w	r3, r3, #1
 8001a8a:	6213      	str	r3, [r2, #32]
 8001a8c:	e00b      	b.n	8001aa6 <HAL_RCC_OscConfig+0x36e>
 8001a8e:	4b5b      	ldr	r3, [pc, #364]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a90:	6a1b      	ldr	r3, [r3, #32]
 8001a92:	4a5a      	ldr	r2, [pc, #360]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a94:	f023 0301 	bic.w	r3, r3, #1
 8001a98:	6213      	str	r3, [r2, #32]
 8001a9a:	4b58      	ldr	r3, [pc, #352]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a9c:	6a1b      	ldr	r3, [r3, #32]
 8001a9e:	4a57      	ldr	r2, [pc, #348]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001aa0:	f023 0304 	bic.w	r3, r3, #4
 8001aa4:	6213      	str	r3, [r2, #32]
 8001aa6:	687b      	ldr	r3, [r7, #4]
 8001aa8:	68db      	ldr	r3, [r3, #12]
 8001aaa:	2b00      	cmp	r3, #0
 8001aac:	d015      	beq.n	8001ada <HAL_RCC_OscConfig+0x3a2>
 8001aae:	f7ff fb7d 	bl	80011ac <HAL_GetTick>
 8001ab2:	6138      	str	r0, [r7, #16]
 8001ab4:	e00a      	b.n	8001acc <HAL_RCC_OscConfig+0x394>
 8001ab6:	f7ff fb79 	bl	80011ac <HAL_GetTick>
 8001aba:	4602      	mov	r2, r0
 8001abc:	693b      	ldr	r3, [r7, #16]
 8001abe:	1ad3      	subs	r3, r2, r3
 8001ac0:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001ac4:	4293      	cmp	r3, r2
 8001ac6:	d901      	bls.n	8001acc <HAL_RCC_OscConfig+0x394>
 8001ac8:	2303      	movs	r3, #3
 8001aca:	e0b1      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001acc:	4b4b      	ldr	r3, [pc, #300]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001ace:	6a1b      	ldr	r3, [r3, #32]
 8001ad0:	f003 0302 	and.w	r3, r3, #2
 8001ad4:	2b00      	cmp	r3, #0
 8001ad6:	d0ee      	beq.n	8001ab6 <HAL_RCC_OscConfig+0x37e>
 8001ad8:	e014      	b.n	8001b04 <HAL_RCC_OscConfig+0x3cc>
 8001ada:	f7ff fb67 	bl	80011ac <HAL_GetTick>
 8001ade:	6138      	str	r0, [r7, #16]
 8001ae0:	e00a      	b.n	8001af8 <HAL_RCC_OscConfig+0x3c0>
 8001ae2:	f7ff fb63 	bl	80011ac <HAL_GetTick>
 8001ae6:	4602      	mov	r2, r0
 8001ae8:	693b      	ldr	r3, [r7, #16]
 8001aea:	1ad3      	subs	r3, r2, r3
 8001aec:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001af0:	4293      	cmp	r3, r2
 8001af2:	d901      	bls.n	8001af8 <HAL_RCC_OscConfig+0x3c0>
 8001af4:	2303      	movs	r3, #3
 8001af6:	e09b      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001af8:	4b40      	ldr	r3, [pc, #256]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001afa:	6a1b      	ldr	r3, [r3, #32]
 8001afc:	f003 0302 	and.w	r3, r3, #2
 8001b00:	2b00      	cmp	r3, #0
 8001b02:	d1ee      	bne.n	8001ae2 <HAL_RCC_OscConfig+0x3aa>
 8001b04:	7dfb      	ldrb	r3, [r7, #23]
 8001b06:	2b01      	cmp	r3, #1
 8001b08:	d105      	bne.n	8001b16 <HAL_RCC_OscConfig+0x3de>
 8001b0a:	4b3c      	ldr	r3, [pc, #240]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b0c:	69db      	ldr	r3, [r3, #28]
 8001b0e:	4a3b      	ldr	r2, [pc, #236]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b10:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8001b14:	61d3      	str	r3, [r2, #28]
 8001b16:	687b      	ldr	r3, [r7, #4]
 8001b18:	69db      	ldr	r3, [r3, #28]
 8001b1a:	2b00      	cmp	r3, #0
 8001b1c:	f000 8087 	beq.w	8001c2e <HAL_RCC_OscConfig+0x4f6>
 8001b20:	4b36      	ldr	r3, [pc, #216]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b22:	685b      	ldr	r3, [r3, #4]
 8001b24:	f003 030c 	and.w	r3, r3, #12
 8001b28:	2b08      	cmp	r3, #8
 8001b2a:	d061      	beq.n	8001bf0 <HAL_RCC_OscConfig+0x4b8>
 8001b2c:	687b      	ldr	r3, [r7, #4]
 8001b2e:	69db      	ldr	r3, [r3, #28]
 8001b30:	2b02      	cmp	r3, #2
 8001b32:	d146      	bne.n	8001bc2 <HAL_RCC_OscConfig+0x48a>
 8001b34:	4b33      	ldr	r3, [pc, #204]	@ (8001c04 <HAL_RCC_OscConfig+0x4cc>)
 8001b36:	2200      	movs	r2, #0
 8001b38:	601a      	str	r2, [r3, #0]
 8001b3a:	f7ff fb37 	bl	80011ac <HAL_GetTick>
 8001b3e:	6138      	str	r0, [r7, #16]
 8001b40:	e008      	b.n	8001b54 <HAL_RCC_OscConfig+0x41c>
 8001b42:	f7ff fb33 	bl	80011ac <HAL_GetTick>
 8001b46:	4602      	mov	r2, r0
 8001b48:	693b      	ldr	r3, [r7, #16]
 8001b4a:	1ad3      	subs	r3, r2, r3
 8001b4c:	2b02      	cmp	r3, #2
 8001b4e:	d901      	bls.n	8001b54 <HAL_RCC_OscConfig+0x41c>
 8001b50:	2303      	movs	r3, #3
 8001b52:	e06d      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001b54:	4b29      	ldr	r3, [pc, #164]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b56:	681b      	ldr	r3, [r3, #0]
 8001b58:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001b5c:	2b00      	cmp	r3, #0
 8001b5e:	d1f0      	bne.n	8001b42 <HAL_RCC_OscConfig+0x40a>
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	6a1b      	ldr	r3, [r3, #32]
 8001b64:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001b68:	d108      	bne.n	8001b7c <HAL_RCC_OscConfig+0x444>
 8001b6a:	4b24      	ldr	r3, [pc, #144]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b6c:	685b      	ldr	r3, [r3, #4]
 8001b6e:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	689b      	ldr	r3, [r3, #8]
 8001b76:	4921      	ldr	r1, [pc, #132]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b78:	4313      	orrs	r3, r2
 8001b7a:	604b      	str	r3, [r1, #4]
 8001b7c:	4b1f      	ldr	r3, [pc, #124]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b7e:	685b      	ldr	r3, [r3, #4]
 8001b80:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8001b84:	687b      	ldr	r3, [r7, #4]
 8001b86:	6a19      	ldr	r1, [r3, #32]
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001b8c:	430b      	orrs	r3, r1
 8001b8e:	491b      	ldr	r1, [pc, #108]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b90:	4313      	orrs	r3, r2
 8001b92:	604b      	str	r3, [r1, #4]
 8001b94:	4b1b      	ldr	r3, [pc, #108]	@ (8001c04 <HAL_RCC_OscConfig+0x4cc>)
 8001b96:	2201      	movs	r2, #1
 8001b98:	601a      	str	r2, [r3, #0]
 8001b9a:	f7ff fb07 	bl	80011ac <HAL_GetTick>
 8001b9e:	6138      	str	r0, [r7, #16]
 8001ba0:	e008      	b.n	8001bb4 <HAL_RCC_OscConfig+0x47c>
 8001ba2:	f7ff fb03 	bl	80011ac <HAL_GetTick>
 8001ba6:	4602      	mov	r2, r0
 8001ba8:	693b      	ldr	r3, [r7, #16]
 8001baa:	1ad3      	subs	r3, r2, r3
 8001bac:	2b02      	cmp	r3, #2
 8001bae:	d901      	bls.n	8001bb4 <HAL_RCC_OscConfig+0x47c>
 8001bb0:	2303      	movs	r3, #3
 8001bb2:	e03d      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001bb4:	4b11      	ldr	r3, [pc, #68]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001bb6:	681b      	ldr	r3, [r3, #0]
 8001bb8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001bbc:	2b00      	cmp	r3, #0
 8001bbe:	d0f0      	beq.n	8001ba2 <HAL_RCC_OscConfig+0x46a>
 8001bc0:	e035      	b.n	8001c2e <HAL_RCC_OscConfig+0x4f6>
 8001bc2:	4b10      	ldr	r3, [pc, #64]	@ (8001c04 <HAL_RCC_OscConfig+0x4cc>)
 8001bc4:	2200      	movs	r2, #0
 8001bc6:	601a      	str	r2, [r3, #0]
 8001bc8:	f7ff faf0 	bl	80011ac <HAL_GetTick>
 8001bcc:	6138      	str	r0, [r7, #16]
 8001bce:	e008      	b.n	8001be2 <HAL_RCC_OscConfig+0x4aa>
 8001bd0:	f7ff faec 	bl	80011ac <HAL_GetTick>
 8001bd4:	4602      	mov	r2, r0
 8001bd6:	693b      	ldr	r3, [r7, #16]
 8001bd8:	1ad3      	subs	r3, r2, r3
 8001bda:	2b02      	cmp	r3, #2
 8001bdc:	d901      	bls.n	8001be2 <HAL_RCC_OscConfig+0x4aa>
 8001bde:	2303      	movs	r3, #3
 8001be0:	e026      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001be2:	4b06      	ldr	r3, [pc, #24]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001be4:	681b      	ldr	r3, [r3, #0]
 8001be6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	d1f0      	bne.n	8001bd0 <HAL_RCC_OscConfig+0x498>
 8001bee:	e01e      	b.n	8001c2e <HAL_RCC_OscConfig+0x4f6>
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	69db      	ldr	r3, [r3, #28]
 8001bf4:	2b01      	cmp	r3, #1
 8001bf6:	d107      	bne.n	8001c08 <HAL_RCC_OscConfig+0x4d0>
 8001bf8:	2301      	movs	r3, #1
 8001bfa:	e019      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001bfc:	40021000 	.word	0x40021000
 8001c00:	40007000 	.word	0x40007000
 8001c04:	42420060 	.word	0x42420060
 8001c08:	4b0b      	ldr	r3, [pc, #44]	@ (8001c38 <HAL_RCC_OscConfig+0x500>)
 8001c0a:	685b      	ldr	r3, [r3, #4]
 8001c0c:	60fb      	str	r3, [r7, #12]
 8001c0e:	68fb      	ldr	r3, [r7, #12]
 8001c10:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	6a1b      	ldr	r3, [r3, #32]
 8001c18:	429a      	cmp	r2, r3
 8001c1a:	d106      	bne.n	8001c2a <HAL_RCC_OscConfig+0x4f2>
 8001c1c:	68fb      	ldr	r3, [r7, #12]
 8001c1e:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001c26:	429a      	cmp	r2, r3
 8001c28:	d001      	beq.n	8001c2e <HAL_RCC_OscConfig+0x4f6>
 8001c2a:	2301      	movs	r3, #1
 8001c2c:	e000      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001c2e:	2300      	movs	r3, #0
 8001c30:	4618      	mov	r0, r3
 8001c32:	3718      	adds	r7, #24
 8001c34:	46bd      	mov	sp, r7
 8001c36:	bd80      	pop	{r7, pc}
 8001c38:	40021000 	.word	0x40021000

08001c3c <HAL_RCC_ClockConfig>:
 8001c3c:	b580      	push	{r7, lr}
 8001c3e:	b084      	sub	sp, #16
 8001c40:	af00      	add	r7, sp, #0
 8001c42:	6078      	str	r0, [r7, #4]
 8001c44:	6039      	str	r1, [r7, #0]
 8001c46:	687b      	ldr	r3, [r7, #4]
 8001c48:	2b00      	cmp	r3, #0
 8001c4a:	d101      	bne.n	8001c50 <HAL_RCC_ClockConfig+0x14>
 8001c4c:	2301      	movs	r3, #1
 8001c4e:	e0d0      	b.n	8001df2 <HAL_RCC_ClockConfig+0x1b6>
 8001c50:	4b6a      	ldr	r3, [pc, #424]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001c52:	681b      	ldr	r3, [r3, #0]
 8001c54:	f003 0307 	and.w	r3, r3, #7
 8001c58:	683a      	ldr	r2, [r7, #0]
 8001c5a:	429a      	cmp	r2, r3
 8001c5c:	d910      	bls.n	8001c80 <HAL_RCC_ClockConfig+0x44>
 8001c5e:	4b67      	ldr	r3, [pc, #412]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001c60:	681b      	ldr	r3, [r3, #0]
 8001c62:	f023 0207 	bic.w	r2, r3, #7
 8001c66:	4965      	ldr	r1, [pc, #404]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001c68:	683b      	ldr	r3, [r7, #0]
 8001c6a:	4313      	orrs	r3, r2
 8001c6c:	600b      	str	r3, [r1, #0]
 8001c6e:	4b63      	ldr	r3, [pc, #396]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001c70:	681b      	ldr	r3, [r3, #0]
 8001c72:	f003 0307 	and.w	r3, r3, #7
 8001c76:	683a      	ldr	r2, [r7, #0]
 8001c78:	429a      	cmp	r2, r3
 8001c7a:	d001      	beq.n	8001c80 <HAL_RCC_ClockConfig+0x44>
 8001c7c:	2301      	movs	r3, #1
 8001c7e:	e0b8      	b.n	8001df2 <HAL_RCC_ClockConfig+0x1b6>
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	681b      	ldr	r3, [r3, #0]
 8001c84:	f003 0302 	and.w	r3, r3, #2
 8001c88:	2b00      	cmp	r3, #0
 8001c8a:	d020      	beq.n	8001cce <HAL_RCC_ClockConfig+0x92>
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	681b      	ldr	r3, [r3, #0]
 8001c90:	f003 0304 	and.w	r3, r3, #4
 8001c94:	2b00      	cmp	r3, #0
 8001c96:	d005      	beq.n	8001ca4 <HAL_RCC_ClockConfig+0x68>
 8001c98:	4b59      	ldr	r3, [pc, #356]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001c9a:	685b      	ldr	r3, [r3, #4]
 8001c9c:	4a58      	ldr	r2, [pc, #352]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001c9e:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8001ca2:	6053      	str	r3, [r2, #4]
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	681b      	ldr	r3, [r3, #0]
 8001ca8:	f003 0308 	and.w	r3, r3, #8
 8001cac:	2b00      	cmp	r3, #0
 8001cae:	d005      	beq.n	8001cbc <HAL_RCC_ClockConfig+0x80>
 8001cb0:	4b53      	ldr	r3, [pc, #332]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001cb2:	685b      	ldr	r3, [r3, #4]
 8001cb4:	4a52      	ldr	r2, [pc, #328]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001cb6:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8001cba:	6053      	str	r3, [r2, #4]
 8001cbc:	4b50      	ldr	r3, [pc, #320]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001cbe:	685b      	ldr	r3, [r3, #4]
 8001cc0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001cc4:	687b      	ldr	r3, [r7, #4]
 8001cc6:	689b      	ldr	r3, [r3, #8]
 8001cc8:	494d      	ldr	r1, [pc, #308]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001cca:	4313      	orrs	r3, r2
 8001ccc:	604b      	str	r3, [r1, #4]
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	681b      	ldr	r3, [r3, #0]
 8001cd2:	f003 0301 	and.w	r3, r3, #1
 8001cd6:	2b00      	cmp	r3, #0
 8001cd8:	d040      	beq.n	8001d5c <HAL_RCC_ClockConfig+0x120>
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	685b      	ldr	r3, [r3, #4]
 8001cde:	2b01      	cmp	r3, #1
 8001ce0:	d107      	bne.n	8001cf2 <HAL_RCC_ClockConfig+0xb6>
 8001ce2:	4b47      	ldr	r3, [pc, #284]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001ce4:	681b      	ldr	r3, [r3, #0]
 8001ce6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001cea:	2b00      	cmp	r3, #0
 8001cec:	d115      	bne.n	8001d1a <HAL_RCC_ClockConfig+0xde>
 8001cee:	2301      	movs	r3, #1
 8001cf0:	e07f      	b.n	8001df2 <HAL_RCC_ClockConfig+0x1b6>
 8001cf2:	687b      	ldr	r3, [r7, #4]
 8001cf4:	685b      	ldr	r3, [r3, #4]
 8001cf6:	2b02      	cmp	r3, #2
 8001cf8:	d107      	bne.n	8001d0a <HAL_RCC_ClockConfig+0xce>
 8001cfa:	4b41      	ldr	r3, [pc, #260]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001cfc:	681b      	ldr	r3, [r3, #0]
 8001cfe:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001d02:	2b00      	cmp	r3, #0
 8001d04:	d109      	bne.n	8001d1a <HAL_RCC_ClockConfig+0xde>
 8001d06:	2301      	movs	r3, #1
 8001d08:	e073      	b.n	8001df2 <HAL_RCC_ClockConfig+0x1b6>
 8001d0a:	4b3d      	ldr	r3, [pc, #244]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001d0c:	681b      	ldr	r3, [r3, #0]
 8001d0e:	f003 0302 	and.w	r3, r3, #2
 8001d12:	2b00      	cmp	r3, #0
 8001d14:	d101      	bne.n	8001d1a <HAL_RCC_ClockConfig+0xde>
 8001d16:	2301      	movs	r3, #1
 8001d18:	e06b      	b.n	8001df2 <HAL_RCC_ClockConfig+0x1b6>
 8001d1a:	4b39      	ldr	r3, [pc, #228]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001d1c:	685b      	ldr	r3, [r3, #4]
 8001d1e:	f023 0203 	bic.w	r2, r3, #3
 8001d22:	687b      	ldr	r3, [r7, #4]
 8001d24:	685b      	ldr	r3, [r3, #4]
 8001d26:	4936      	ldr	r1, [pc, #216]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001d28:	4313      	orrs	r3, r2
 8001d2a:	604b      	str	r3, [r1, #4]
 8001d2c:	f7ff fa3e 	bl	80011ac <HAL_GetTick>
 8001d30:	60f8      	str	r0, [r7, #12]
 8001d32:	e00a      	b.n	8001d4a <HAL_RCC_ClockConfig+0x10e>
 8001d34:	f7ff fa3a 	bl	80011ac <HAL_GetTick>
 8001d38:	4602      	mov	r2, r0
 8001d3a:	68fb      	ldr	r3, [r7, #12]
 8001d3c:	1ad3      	subs	r3, r2, r3
 8001d3e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001d42:	4293      	cmp	r3, r2
 8001d44:	d901      	bls.n	8001d4a <HAL_RCC_ClockConfig+0x10e>
 8001d46:	2303      	movs	r3, #3
 8001d48:	e053      	b.n	8001df2 <HAL_RCC_ClockConfig+0x1b6>
 8001d4a:	4b2d      	ldr	r3, [pc, #180]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001d4c:	685b      	ldr	r3, [r3, #4]
 8001d4e:	f003 020c 	and.w	r2, r3, #12
 8001d52:	687b      	ldr	r3, [r7, #4]
 8001d54:	685b      	ldr	r3, [r3, #4]
 8001d56:	009b      	lsls	r3, r3, #2
 8001d58:	429a      	cmp	r2, r3
 8001d5a:	d1eb      	bne.n	8001d34 <HAL_RCC_ClockConfig+0xf8>
 8001d5c:	4b27      	ldr	r3, [pc, #156]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001d5e:	681b      	ldr	r3, [r3, #0]
 8001d60:	f003 0307 	and.w	r3, r3, #7
 8001d64:	683a      	ldr	r2, [r7, #0]
 8001d66:	429a      	cmp	r2, r3
 8001d68:	d210      	bcs.n	8001d8c <HAL_RCC_ClockConfig+0x150>
 8001d6a:	4b24      	ldr	r3, [pc, #144]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	f023 0207 	bic.w	r2, r3, #7
 8001d72:	4922      	ldr	r1, [pc, #136]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001d74:	683b      	ldr	r3, [r7, #0]
 8001d76:	4313      	orrs	r3, r2
 8001d78:	600b      	str	r3, [r1, #0]
 8001d7a:	4b20      	ldr	r3, [pc, #128]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	f003 0307 	and.w	r3, r3, #7
 8001d82:	683a      	ldr	r2, [r7, #0]
 8001d84:	429a      	cmp	r2, r3
 8001d86:	d001      	beq.n	8001d8c <HAL_RCC_ClockConfig+0x150>
 8001d88:	2301      	movs	r3, #1
 8001d8a:	e032      	b.n	8001df2 <HAL_RCC_ClockConfig+0x1b6>
 8001d8c:	687b      	ldr	r3, [r7, #4]
 8001d8e:	681b      	ldr	r3, [r3, #0]
 8001d90:	f003 0304 	and.w	r3, r3, #4
 8001d94:	2b00      	cmp	r3, #0
 8001d96:	d008      	beq.n	8001daa <HAL_RCC_ClockConfig+0x16e>
 8001d98:	4b19      	ldr	r3, [pc, #100]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001d9a:	685b      	ldr	r3, [r3, #4]
 8001d9c:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	68db      	ldr	r3, [r3, #12]
 8001da4:	4916      	ldr	r1, [pc, #88]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001da6:	4313      	orrs	r3, r2
 8001da8:	604b      	str	r3, [r1, #4]
 8001daa:	687b      	ldr	r3, [r7, #4]
 8001dac:	681b      	ldr	r3, [r3, #0]
 8001dae:	f003 0308 	and.w	r3, r3, #8
 8001db2:	2b00      	cmp	r3, #0
 8001db4:	d009      	beq.n	8001dca <HAL_RCC_ClockConfig+0x18e>
 8001db6:	4b12      	ldr	r3, [pc, #72]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001db8:	685b      	ldr	r3, [r3, #4]
 8001dba:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	691b      	ldr	r3, [r3, #16]
 8001dc2:	00db      	lsls	r3, r3, #3
 8001dc4:	490e      	ldr	r1, [pc, #56]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001dc6:	4313      	orrs	r3, r2
 8001dc8:	604b      	str	r3, [r1, #4]
 8001dca:	f000 f821 	bl	8001e10 <HAL_RCC_GetSysClockFreq>
 8001dce:	4602      	mov	r2, r0
 8001dd0:	4b0b      	ldr	r3, [pc, #44]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001dd2:	685b      	ldr	r3, [r3, #4]
 8001dd4:	091b      	lsrs	r3, r3, #4
 8001dd6:	f003 030f 	and.w	r3, r3, #15
 8001dda:	490a      	ldr	r1, [pc, #40]	@ (8001e04 <HAL_RCC_ClockConfig+0x1c8>)
 8001ddc:	5ccb      	ldrb	r3, [r1, r3]
 8001dde:	fa22 f303 	lsr.w	r3, r2, r3
 8001de2:	4a09      	ldr	r2, [pc, #36]	@ (8001e08 <HAL_RCC_ClockConfig+0x1cc>)
 8001de4:	6013      	str	r3, [r2, #0]
 8001de6:	4b09      	ldr	r3, [pc, #36]	@ (8001e0c <HAL_RCC_ClockConfig+0x1d0>)
 8001de8:	681b      	ldr	r3, [r3, #0]
 8001dea:	4618      	mov	r0, r3
 8001dec:	f7ff f99c 	bl	8001128 <HAL_InitTick>
 8001df0:	2300      	movs	r3, #0
 8001df2:	4618      	mov	r0, r3
 8001df4:	3710      	adds	r7, #16
 8001df6:	46bd      	mov	sp, r7
 8001df8:	bd80      	pop	{r7, pc}
 8001dfa:	bf00      	nop
 8001dfc:	40022000 	.word	0x40022000
 8001e00:	40021000 	.word	0x40021000
 8001e04:	080026e4 	.word	0x080026e4
 8001e08:	2000000c 	.word	0x2000000c
 8001e0c:	20000010 	.word	0x20000010

08001e10 <HAL_RCC_GetSysClockFreq>:
 8001e10:	b480      	push	{r7}
 8001e12:	b087      	sub	sp, #28
 8001e14:	af00      	add	r7, sp, #0
 8001e16:	2300      	movs	r3, #0
 8001e18:	60fb      	str	r3, [r7, #12]
 8001e1a:	2300      	movs	r3, #0
 8001e1c:	60bb      	str	r3, [r7, #8]
 8001e1e:	2300      	movs	r3, #0
 8001e20:	617b      	str	r3, [r7, #20]
 8001e22:	2300      	movs	r3, #0
 8001e24:	607b      	str	r3, [r7, #4]
 8001e26:	2300      	movs	r3, #0
 8001e28:	613b      	str	r3, [r7, #16]
 8001e2a:	4b1e      	ldr	r3, [pc, #120]	@ (8001ea4 <HAL_RCC_GetSysClockFreq+0x94>)
 8001e2c:	685b      	ldr	r3, [r3, #4]
 8001e2e:	60fb      	str	r3, [r7, #12]
 8001e30:	68fb      	ldr	r3, [r7, #12]
 8001e32:	f003 030c 	and.w	r3, r3, #12
 8001e36:	2b04      	cmp	r3, #4
 8001e38:	d002      	beq.n	8001e40 <HAL_RCC_GetSysClockFreq+0x30>
 8001e3a:	2b08      	cmp	r3, #8
 8001e3c:	d003      	beq.n	8001e46 <HAL_RCC_GetSysClockFreq+0x36>
 8001e3e:	e027      	b.n	8001e90 <HAL_RCC_GetSysClockFreq+0x80>
 8001e40:	4b19      	ldr	r3, [pc, #100]	@ (8001ea8 <HAL_RCC_GetSysClockFreq+0x98>)
 8001e42:	613b      	str	r3, [r7, #16]
 8001e44:	e027      	b.n	8001e96 <HAL_RCC_GetSysClockFreq+0x86>
 8001e46:	68fb      	ldr	r3, [r7, #12]
 8001e48:	0c9b      	lsrs	r3, r3, #18
 8001e4a:	f003 030f 	and.w	r3, r3, #15
 8001e4e:	4a17      	ldr	r2, [pc, #92]	@ (8001eac <HAL_RCC_GetSysClockFreq+0x9c>)
 8001e50:	5cd3      	ldrb	r3, [r2, r3]
 8001e52:	607b      	str	r3, [r7, #4]
 8001e54:	68fb      	ldr	r3, [r7, #12]
 8001e56:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001e5a:	2b00      	cmp	r3, #0
 8001e5c:	d010      	beq.n	8001e80 <HAL_RCC_GetSysClockFreq+0x70>
 8001e5e:	4b11      	ldr	r3, [pc, #68]	@ (8001ea4 <HAL_RCC_GetSysClockFreq+0x94>)
 8001e60:	685b      	ldr	r3, [r3, #4]
 8001e62:	0c5b      	lsrs	r3, r3, #17
 8001e64:	f003 0301 	and.w	r3, r3, #1
 8001e68:	4a11      	ldr	r2, [pc, #68]	@ (8001eb0 <HAL_RCC_GetSysClockFreq+0xa0>)
 8001e6a:	5cd3      	ldrb	r3, [r2, r3]
 8001e6c:	60bb      	str	r3, [r7, #8]
 8001e6e:	687b      	ldr	r3, [r7, #4]
 8001e70:	4a0d      	ldr	r2, [pc, #52]	@ (8001ea8 <HAL_RCC_GetSysClockFreq+0x98>)
 8001e72:	fb03 f202 	mul.w	r2, r3, r2
 8001e76:	68bb      	ldr	r3, [r7, #8]
 8001e78:	fbb2 f3f3 	udiv	r3, r2, r3
 8001e7c:	617b      	str	r3, [r7, #20]
 8001e7e:	e004      	b.n	8001e8a <HAL_RCC_GetSysClockFreq+0x7a>
 8001e80:	687b      	ldr	r3, [r7, #4]
 8001e82:	4a0c      	ldr	r2, [pc, #48]	@ (8001eb4 <HAL_RCC_GetSysClockFreq+0xa4>)
 8001e84:	fb02 f303 	mul.w	r3, r2, r3
 8001e88:	617b      	str	r3, [r7, #20]
 8001e8a:	697b      	ldr	r3, [r7, #20]
 8001e8c:	613b      	str	r3, [r7, #16]
 8001e8e:	e002      	b.n	8001e96 <HAL_RCC_GetSysClockFreq+0x86>
 8001e90:	4b05      	ldr	r3, [pc, #20]	@ (8001ea8 <HAL_RCC_GetSysClockFreq+0x98>)
 8001e92:	613b      	str	r3, [r7, #16]
 8001e94:	bf00      	nop
 8001e96:	693b      	ldr	r3, [r7, #16]
 8001e98:	4618      	mov	r0, r3
 8001e9a:	371c      	adds	r7, #28
 8001e9c:	46bd      	mov	sp, r7
 8001e9e:	bc80      	pop	{r7}
 8001ea0:	4770      	bx	lr
 8001ea2:	bf00      	nop
 8001ea4:	40021000 	.word	0x40021000
 8001ea8:	007a1200 	.word	0x007a1200
 8001eac:	080026f4 	.word	0x080026f4
 8001eb0:	08002704 	.word	0x08002704
 8001eb4:	003d0900 	.word	0x003d0900

08001eb8 <RCC_Delay>:
 8001eb8:	b480      	push	{r7}
 8001eba:	b085      	sub	sp, #20
 8001ebc:	af00      	add	r7, sp, #0
 8001ebe:	6078      	str	r0, [r7, #4]
 8001ec0:	4b0a      	ldr	r3, [pc, #40]	@ (8001eec <RCC_Delay+0x34>)
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	4a0a      	ldr	r2, [pc, #40]	@ (8001ef0 <RCC_Delay+0x38>)
 8001ec6:	fba2 2303 	umull	r2, r3, r2, r3
 8001eca:	0a5b      	lsrs	r3, r3, #9
 8001ecc:	687a      	ldr	r2, [r7, #4]
 8001ece:	fb02 f303 	mul.w	r3, r2, r3
 8001ed2:	60fb      	str	r3, [r7, #12]
 8001ed4:	bf00      	nop
 8001ed6:	68fb      	ldr	r3, [r7, #12]
 8001ed8:	1e5a      	subs	r2, r3, #1
 8001eda:	60fa      	str	r2, [r7, #12]
 8001edc:	2b00      	cmp	r3, #0
 8001ede:	d1f9      	bne.n	8001ed4 <RCC_Delay+0x1c>
 8001ee0:	bf00      	nop
 8001ee2:	bf00      	nop
 8001ee4:	3714      	adds	r7, #20
 8001ee6:	46bd      	mov	sp, r7
 8001ee8:	bc80      	pop	{r7}
 8001eea:	4770      	bx	lr
 8001eec:	2000000c 	.word	0x2000000c
 8001ef0:	10624dd3 	.word	0x10624dd3

08001ef4 <HAL_TIM_Base_Init>:
 8001ef4:	b580      	push	{r7, lr}
 8001ef6:	b082      	sub	sp, #8
 8001ef8:	af00      	add	r7, sp, #0
 8001efa:	6078      	str	r0, [r7, #4]
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	2b00      	cmp	r3, #0
 8001f00:	d101      	bne.n	8001f06 <HAL_TIM_Base_Init+0x12>
 8001f02:	2301      	movs	r3, #1
 8001f04:	e041      	b.n	8001f8a <HAL_TIM_Base_Init+0x96>
 8001f06:	687b      	ldr	r3, [r7, #4]
 8001f08:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001f0c:	b2db      	uxtb	r3, r3
 8001f0e:	2b00      	cmp	r3, #0
 8001f10:	d106      	bne.n	8001f20 <HAL_TIM_Base_Init+0x2c>
 8001f12:	687b      	ldr	r3, [r7, #4]
 8001f14:	2200      	movs	r2, #0
 8001f16:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001f1a:	6878      	ldr	r0, [r7, #4]
 8001f1c:	f7ff f87a 	bl	8001014 <HAL_TIM_Base_MspInit>
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	2202      	movs	r2, #2
 8001f24:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001f28:	687b      	ldr	r3, [r7, #4]
 8001f2a:	681a      	ldr	r2, [r3, #0]
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	3304      	adds	r3, #4
 8001f30:	4619      	mov	r1, r3
 8001f32:	4610      	mov	r0, r2
 8001f34:	f000 f936 	bl	80021a4 <TIM_Base_SetConfig>
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	2201      	movs	r2, #1
 8001f3c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8001f40:	687b      	ldr	r3, [r7, #4]
 8001f42:	2201      	movs	r2, #1
 8001f44:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001f48:	687b      	ldr	r3, [r7, #4]
 8001f4a:	2201      	movs	r2, #1
 8001f4c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8001f50:	687b      	ldr	r3, [r7, #4]
 8001f52:	2201      	movs	r2, #1
 8001f54:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8001f58:	687b      	ldr	r3, [r7, #4]
 8001f5a:	2201      	movs	r2, #1
 8001f5c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8001f60:	687b      	ldr	r3, [r7, #4]
 8001f62:	2201      	movs	r2, #1
 8001f64:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	2201      	movs	r2, #1
 8001f6c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8001f70:	687b      	ldr	r3, [r7, #4]
 8001f72:	2201      	movs	r2, #1
 8001f74:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8001f78:	687b      	ldr	r3, [r7, #4]
 8001f7a:	2201      	movs	r2, #1
 8001f7c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	2201      	movs	r2, #1
 8001f84:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001f88:	2300      	movs	r3, #0
 8001f8a:	4618      	mov	r0, r3
 8001f8c:	3708      	adds	r7, #8
 8001f8e:	46bd      	mov	sp, r7
 8001f90:	bd80      	pop	{r7, pc}

08001f92 <HAL_TIM_ConfigClockSource>:
 8001f92:	b580      	push	{r7, lr}
 8001f94:	b084      	sub	sp, #16
 8001f96:	af00      	add	r7, sp, #0
 8001f98:	6078      	str	r0, [r7, #4]
 8001f9a:	6039      	str	r1, [r7, #0]
 8001f9c:	2300      	movs	r3, #0
 8001f9e:	73fb      	strb	r3, [r7, #15]
 8001fa0:	687b      	ldr	r3, [r7, #4]
 8001fa2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001fa6:	2b01      	cmp	r3, #1
 8001fa8:	d101      	bne.n	8001fae <HAL_TIM_ConfigClockSource+0x1c>
 8001faa:	2302      	movs	r3, #2
 8001fac:	e0b4      	b.n	8002118 <HAL_TIM_ConfigClockSource+0x186>
 8001fae:	687b      	ldr	r3, [r7, #4]
 8001fb0:	2201      	movs	r2, #1
 8001fb2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001fb6:	687b      	ldr	r3, [r7, #4]
 8001fb8:	2202      	movs	r2, #2
 8001fba:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001fbe:	687b      	ldr	r3, [r7, #4]
 8001fc0:	681b      	ldr	r3, [r3, #0]
 8001fc2:	689b      	ldr	r3, [r3, #8]
 8001fc4:	60bb      	str	r3, [r7, #8]
 8001fc6:	68bb      	ldr	r3, [r7, #8]
 8001fc8:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8001fcc:	60bb      	str	r3, [r7, #8]
 8001fce:	68bb      	ldr	r3, [r7, #8]
 8001fd0:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8001fd4:	60bb      	str	r3, [r7, #8]
 8001fd6:	687b      	ldr	r3, [r7, #4]
 8001fd8:	681b      	ldr	r3, [r3, #0]
 8001fda:	68ba      	ldr	r2, [r7, #8]
 8001fdc:	609a      	str	r2, [r3, #8]
 8001fde:	683b      	ldr	r3, [r7, #0]
 8001fe0:	681b      	ldr	r3, [r3, #0]
 8001fe2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8001fe6:	d03e      	beq.n	8002066 <HAL_TIM_ConfigClockSource+0xd4>
 8001fe8:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8001fec:	f200 8087 	bhi.w	80020fe <HAL_TIM_ConfigClockSource+0x16c>
 8001ff0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001ff4:	f000 8086 	beq.w	8002104 <HAL_TIM_ConfigClockSource+0x172>
 8001ff8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001ffc:	d87f      	bhi.n	80020fe <HAL_TIM_ConfigClockSource+0x16c>
 8001ffe:	2b70      	cmp	r3, #112	@ 0x70
 8002000:	d01a      	beq.n	8002038 <HAL_TIM_ConfigClockSource+0xa6>
 8002002:	2b70      	cmp	r3, #112	@ 0x70
 8002004:	d87b      	bhi.n	80020fe <HAL_TIM_ConfigClockSource+0x16c>
 8002006:	2b60      	cmp	r3, #96	@ 0x60
 8002008:	d050      	beq.n	80020ac <HAL_TIM_ConfigClockSource+0x11a>
 800200a:	2b60      	cmp	r3, #96	@ 0x60
 800200c:	d877      	bhi.n	80020fe <HAL_TIM_ConfigClockSource+0x16c>
 800200e:	2b50      	cmp	r3, #80	@ 0x50
 8002010:	d03c      	beq.n	800208c <HAL_TIM_ConfigClockSource+0xfa>
 8002012:	2b50      	cmp	r3, #80	@ 0x50
 8002014:	d873      	bhi.n	80020fe <HAL_TIM_ConfigClockSource+0x16c>
 8002016:	2b40      	cmp	r3, #64	@ 0x40
 8002018:	d058      	beq.n	80020cc <HAL_TIM_ConfigClockSource+0x13a>
 800201a:	2b40      	cmp	r3, #64	@ 0x40
 800201c:	d86f      	bhi.n	80020fe <HAL_TIM_ConfigClockSource+0x16c>
 800201e:	2b30      	cmp	r3, #48	@ 0x30
 8002020:	d064      	beq.n	80020ec <HAL_TIM_ConfigClockSource+0x15a>
 8002022:	2b30      	cmp	r3, #48	@ 0x30
 8002024:	d86b      	bhi.n	80020fe <HAL_TIM_ConfigClockSource+0x16c>
 8002026:	2b20      	cmp	r3, #32
 8002028:	d060      	beq.n	80020ec <HAL_TIM_ConfigClockSource+0x15a>
 800202a:	2b20      	cmp	r3, #32
 800202c:	d867      	bhi.n	80020fe <HAL_TIM_ConfigClockSource+0x16c>
 800202e:	2b00      	cmp	r3, #0
 8002030:	d05c      	beq.n	80020ec <HAL_TIM_ConfigClockSource+0x15a>
 8002032:	2b10      	cmp	r3, #16
 8002034:	d05a      	beq.n	80020ec <HAL_TIM_ConfigClockSource+0x15a>
 8002036:	e062      	b.n	80020fe <HAL_TIM_ConfigClockSource+0x16c>
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	6818      	ldr	r0, [r3, #0]
 800203c:	683b      	ldr	r3, [r7, #0]
 800203e:	6899      	ldr	r1, [r3, #8]
 8002040:	683b      	ldr	r3, [r7, #0]
 8002042:	685a      	ldr	r2, [r3, #4]
 8002044:	683b      	ldr	r3, [r7, #0]
 8002046:	68db      	ldr	r3, [r3, #12]
 8002048:	f000 fa22 	bl	8002490 <TIM_ETR_SetConfig>
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	681b      	ldr	r3, [r3, #0]
 8002050:	689b      	ldr	r3, [r3, #8]
 8002052:	60bb      	str	r3, [r7, #8]
 8002054:	68bb      	ldr	r3, [r7, #8]
 8002056:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 800205a:	60bb      	str	r3, [r7, #8]
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	681b      	ldr	r3, [r3, #0]
 8002060:	68ba      	ldr	r2, [r7, #8]
 8002062:	609a      	str	r2, [r3, #8]
 8002064:	e04f      	b.n	8002106 <HAL_TIM_ConfigClockSource+0x174>
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	6818      	ldr	r0, [r3, #0]
 800206a:	683b      	ldr	r3, [r7, #0]
 800206c:	6899      	ldr	r1, [r3, #8]
 800206e:	683b      	ldr	r3, [r7, #0]
 8002070:	685a      	ldr	r2, [r3, #4]
 8002072:	683b      	ldr	r3, [r7, #0]
 8002074:	68db      	ldr	r3, [r3, #12]
 8002076:	f000 fa0b 	bl	8002490 <TIM_ETR_SetConfig>
 800207a:	687b      	ldr	r3, [r7, #4]
 800207c:	681b      	ldr	r3, [r3, #0]
 800207e:	689a      	ldr	r2, [r3, #8]
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	681b      	ldr	r3, [r3, #0]
 8002084:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8002088:	609a      	str	r2, [r3, #8]
 800208a:	e03c      	b.n	8002106 <HAL_TIM_ConfigClockSource+0x174>
 800208c:	687b      	ldr	r3, [r7, #4]
 800208e:	6818      	ldr	r0, [r3, #0]
 8002090:	683b      	ldr	r3, [r7, #0]
 8002092:	6859      	ldr	r1, [r3, #4]
 8002094:	683b      	ldr	r3, [r7, #0]
 8002096:	68db      	ldr	r3, [r3, #12]
 8002098:	461a      	mov	r2, r3
 800209a:	f000 f982 	bl	80023a2 <TIM_TI1_ConfigInputStage>
 800209e:	687b      	ldr	r3, [r7, #4]
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	2150      	movs	r1, #80	@ 0x50
 80020a4:	4618      	mov	r0, r3
 80020a6:	f000 f9d9 	bl	800245c <TIM_ITRx_SetConfig>
 80020aa:	e02c      	b.n	8002106 <HAL_TIM_ConfigClockSource+0x174>
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	6818      	ldr	r0, [r3, #0]
 80020b0:	683b      	ldr	r3, [r7, #0]
 80020b2:	6859      	ldr	r1, [r3, #4]
 80020b4:	683b      	ldr	r3, [r7, #0]
 80020b6:	68db      	ldr	r3, [r3, #12]
 80020b8:	461a      	mov	r2, r3
 80020ba:	f000 f9a0 	bl	80023fe <TIM_TI2_ConfigInputStage>
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	2160      	movs	r1, #96	@ 0x60
 80020c4:	4618      	mov	r0, r3
 80020c6:	f000 f9c9 	bl	800245c <TIM_ITRx_SetConfig>
 80020ca:	e01c      	b.n	8002106 <HAL_TIM_ConfigClockSource+0x174>
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	6818      	ldr	r0, [r3, #0]
 80020d0:	683b      	ldr	r3, [r7, #0]
 80020d2:	6859      	ldr	r1, [r3, #4]
 80020d4:	683b      	ldr	r3, [r7, #0]
 80020d6:	68db      	ldr	r3, [r3, #12]
 80020d8:	461a      	mov	r2, r3
 80020da:	f000 f962 	bl	80023a2 <TIM_TI1_ConfigInputStage>
 80020de:	687b      	ldr	r3, [r7, #4]
 80020e0:	681b      	ldr	r3, [r3, #0]
 80020e2:	2140      	movs	r1, #64	@ 0x40
 80020e4:	4618      	mov	r0, r3
 80020e6:	f000 f9b9 	bl	800245c <TIM_ITRx_SetConfig>
 80020ea:	e00c      	b.n	8002106 <HAL_TIM_ConfigClockSource+0x174>
 80020ec:	687b      	ldr	r3, [r7, #4]
 80020ee:	681a      	ldr	r2, [r3, #0]
 80020f0:	683b      	ldr	r3, [r7, #0]
 80020f2:	681b      	ldr	r3, [r3, #0]
 80020f4:	4619      	mov	r1, r3
 80020f6:	4610      	mov	r0, r2
 80020f8:	f000 f9b0 	bl	800245c <TIM_ITRx_SetConfig>
 80020fc:	e003      	b.n	8002106 <HAL_TIM_ConfigClockSource+0x174>
 80020fe:	2301      	movs	r3, #1
 8002100:	73fb      	strb	r3, [r7, #15]
 8002102:	e000      	b.n	8002106 <HAL_TIM_ConfigClockSource+0x174>
 8002104:	bf00      	nop
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	2201      	movs	r2, #1
 800210a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800210e:	687b      	ldr	r3, [r7, #4]
 8002110:	2200      	movs	r2, #0
 8002112:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002116:	7bfb      	ldrb	r3, [r7, #15]
 8002118:	4618      	mov	r0, r3
 800211a:	3710      	adds	r7, #16
 800211c:	46bd      	mov	sp, r7
 800211e:	bd80      	pop	{r7, pc}

08002120 <HAL_TIM_SlaveConfigSynchro>:
 8002120:	b580      	push	{r7, lr}
 8002122:	b082      	sub	sp, #8
 8002124:	af00      	add	r7, sp, #0
 8002126:	6078      	str	r0, [r7, #4]
 8002128:	6039      	str	r1, [r7, #0]
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002130:	2b01      	cmp	r3, #1
 8002132:	d101      	bne.n	8002138 <HAL_TIM_SlaveConfigSynchro+0x18>
 8002134:	2302      	movs	r3, #2
 8002136:	e031      	b.n	800219c <HAL_TIM_SlaveConfigSynchro+0x7c>
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	2201      	movs	r2, #1
 800213c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	2202      	movs	r2, #2
 8002144:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002148:	6839      	ldr	r1, [r7, #0]
 800214a:	6878      	ldr	r0, [r7, #4]
 800214c:	f000 f898 	bl	8002280 <TIM_SlaveTimer_SetConfig>
 8002150:	4603      	mov	r3, r0
 8002152:	2b00      	cmp	r3, #0
 8002154:	d009      	beq.n	800216a <HAL_TIM_SlaveConfigSynchro+0x4a>
 8002156:	687b      	ldr	r3, [r7, #4]
 8002158:	2201      	movs	r2, #1
 800215a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	2200      	movs	r2, #0
 8002162:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002166:	2301      	movs	r3, #1
 8002168:	e018      	b.n	800219c <HAL_TIM_SlaveConfigSynchro+0x7c>
 800216a:	687b      	ldr	r3, [r7, #4]
 800216c:	681b      	ldr	r3, [r3, #0]
 800216e:	68da      	ldr	r2, [r3, #12]
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	681b      	ldr	r3, [r3, #0]
 8002174:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002178:	60da      	str	r2, [r3, #12]
 800217a:	687b      	ldr	r3, [r7, #4]
 800217c:	681b      	ldr	r3, [r3, #0]
 800217e:	68da      	ldr	r2, [r3, #12]
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	681b      	ldr	r3, [r3, #0]
 8002184:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8002188:	60da      	str	r2, [r3, #12]
 800218a:	687b      	ldr	r3, [r7, #4]
 800218c:	2201      	movs	r2, #1
 800218e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002192:	687b      	ldr	r3, [r7, #4]
 8002194:	2200      	movs	r2, #0
 8002196:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800219a:	2300      	movs	r3, #0
 800219c:	4618      	mov	r0, r3
 800219e:	3708      	adds	r7, #8
 80021a0:	46bd      	mov	sp, r7
 80021a2:	bd80      	pop	{r7, pc}

080021a4 <TIM_Base_SetConfig>:
 80021a4:	b480      	push	{r7}
 80021a6:	b085      	sub	sp, #20
 80021a8:	af00      	add	r7, sp, #0
 80021aa:	6078      	str	r0, [r7, #4]
 80021ac:	6039      	str	r1, [r7, #0]
 80021ae:	687b      	ldr	r3, [r7, #4]
 80021b0:	681b      	ldr	r3, [r3, #0]
 80021b2:	60fb      	str	r3, [r7, #12]
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	4a2f      	ldr	r2, [pc, #188]	@ (8002274 <TIM_Base_SetConfig+0xd0>)
 80021b8:	4293      	cmp	r3, r2
 80021ba:	d00b      	beq.n	80021d4 <TIM_Base_SetConfig+0x30>
 80021bc:	687b      	ldr	r3, [r7, #4]
 80021be:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80021c2:	d007      	beq.n	80021d4 <TIM_Base_SetConfig+0x30>
 80021c4:	687b      	ldr	r3, [r7, #4]
 80021c6:	4a2c      	ldr	r2, [pc, #176]	@ (8002278 <TIM_Base_SetConfig+0xd4>)
 80021c8:	4293      	cmp	r3, r2
 80021ca:	d003      	beq.n	80021d4 <TIM_Base_SetConfig+0x30>
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	4a2b      	ldr	r2, [pc, #172]	@ (800227c <TIM_Base_SetConfig+0xd8>)
 80021d0:	4293      	cmp	r3, r2
 80021d2:	d108      	bne.n	80021e6 <TIM_Base_SetConfig+0x42>
 80021d4:	68fb      	ldr	r3, [r7, #12]
 80021d6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80021da:	60fb      	str	r3, [r7, #12]
 80021dc:	683b      	ldr	r3, [r7, #0]
 80021de:	685b      	ldr	r3, [r3, #4]
 80021e0:	68fa      	ldr	r2, [r7, #12]
 80021e2:	4313      	orrs	r3, r2
 80021e4:	60fb      	str	r3, [r7, #12]
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	4a22      	ldr	r2, [pc, #136]	@ (8002274 <TIM_Base_SetConfig+0xd0>)
 80021ea:	4293      	cmp	r3, r2
 80021ec:	d00b      	beq.n	8002206 <TIM_Base_SetConfig+0x62>
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80021f4:	d007      	beq.n	8002206 <TIM_Base_SetConfig+0x62>
 80021f6:	687b      	ldr	r3, [r7, #4]
 80021f8:	4a1f      	ldr	r2, [pc, #124]	@ (8002278 <TIM_Base_SetConfig+0xd4>)
 80021fa:	4293      	cmp	r3, r2
 80021fc:	d003      	beq.n	8002206 <TIM_Base_SetConfig+0x62>
 80021fe:	687b      	ldr	r3, [r7, #4]
 8002200:	4a1e      	ldr	r2, [pc, #120]	@ (800227c <TIM_Base_SetConfig+0xd8>)
 8002202:	4293      	cmp	r3, r2
 8002204:	d108      	bne.n	8002218 <TIM_Base_SetConfig+0x74>
 8002206:	68fb      	ldr	r3, [r7, #12]
 8002208:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800220c:	60fb      	str	r3, [r7, #12]
 800220e:	683b      	ldr	r3, [r7, #0]
 8002210:	68db      	ldr	r3, [r3, #12]
 8002212:	68fa      	ldr	r2, [r7, #12]
 8002214:	4313      	orrs	r3, r2
 8002216:	60fb      	str	r3, [r7, #12]
 8002218:	68fb      	ldr	r3, [r7, #12]
 800221a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800221e:	683b      	ldr	r3, [r7, #0]
 8002220:	695b      	ldr	r3, [r3, #20]
 8002222:	4313      	orrs	r3, r2
 8002224:	60fb      	str	r3, [r7, #12]
 8002226:	687b      	ldr	r3, [r7, #4]
 8002228:	68fa      	ldr	r2, [r7, #12]
 800222a:	601a      	str	r2, [r3, #0]
 800222c:	683b      	ldr	r3, [r7, #0]
 800222e:	689a      	ldr	r2, [r3, #8]
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002234:	683b      	ldr	r3, [r7, #0]
 8002236:	681a      	ldr	r2, [r3, #0]
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	629a      	str	r2, [r3, #40]	@ 0x28
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	4a0d      	ldr	r2, [pc, #52]	@ (8002274 <TIM_Base_SetConfig+0xd0>)
 8002240:	4293      	cmp	r3, r2
 8002242:	d103      	bne.n	800224c <TIM_Base_SetConfig+0xa8>
 8002244:	683b      	ldr	r3, [r7, #0]
 8002246:	691a      	ldr	r2, [r3, #16]
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	631a      	str	r2, [r3, #48]	@ 0x30
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	2201      	movs	r2, #1
 8002250:	615a      	str	r2, [r3, #20]
 8002252:	687b      	ldr	r3, [r7, #4]
 8002254:	691b      	ldr	r3, [r3, #16]
 8002256:	f003 0301 	and.w	r3, r3, #1
 800225a:	2b00      	cmp	r3, #0
 800225c:	d005      	beq.n	800226a <TIM_Base_SetConfig+0xc6>
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	691b      	ldr	r3, [r3, #16]
 8002262:	f023 0201 	bic.w	r2, r3, #1
 8002266:	687b      	ldr	r3, [r7, #4]
 8002268:	611a      	str	r2, [r3, #16]
 800226a:	bf00      	nop
 800226c:	3714      	adds	r7, #20
 800226e:	46bd      	mov	sp, r7
 8002270:	bc80      	pop	{r7}
 8002272:	4770      	bx	lr
 8002274:	40012c00 	.word	0x40012c00
 8002278:	40000400 	.word	0x40000400
 800227c:	40000800 	.word	0x40000800

08002280 <TIM_SlaveTimer_SetConfig>:
 8002280:	b580      	push	{r7, lr}
 8002282:	b086      	sub	sp, #24
 8002284:	af00      	add	r7, sp, #0
 8002286:	6078      	str	r0, [r7, #4]
 8002288:	6039      	str	r1, [r7, #0]
 800228a:	2300      	movs	r3, #0
 800228c:	75fb      	strb	r3, [r7, #23]
 800228e:	687b      	ldr	r3, [r7, #4]
 8002290:	681b      	ldr	r3, [r3, #0]
 8002292:	689b      	ldr	r3, [r3, #8]
 8002294:	613b      	str	r3, [r7, #16]
 8002296:	693b      	ldr	r3, [r7, #16]
 8002298:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800229c:	613b      	str	r3, [r7, #16]
 800229e:	683b      	ldr	r3, [r7, #0]
 80022a0:	685b      	ldr	r3, [r3, #4]
 80022a2:	693a      	ldr	r2, [r7, #16]
 80022a4:	4313      	orrs	r3, r2
 80022a6:	613b      	str	r3, [r7, #16]
 80022a8:	693b      	ldr	r3, [r7, #16]
 80022aa:	f023 0307 	bic.w	r3, r3, #7
 80022ae:	613b      	str	r3, [r7, #16]
 80022b0:	683b      	ldr	r3, [r7, #0]
 80022b2:	681b      	ldr	r3, [r3, #0]
 80022b4:	693a      	ldr	r2, [r7, #16]
 80022b6:	4313      	orrs	r3, r2
 80022b8:	613b      	str	r3, [r7, #16]
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	681b      	ldr	r3, [r3, #0]
 80022be:	693a      	ldr	r2, [r7, #16]
 80022c0:	609a      	str	r2, [r3, #8]
 80022c2:	683b      	ldr	r3, [r7, #0]
 80022c4:	685b      	ldr	r3, [r3, #4]
 80022c6:	2b70      	cmp	r3, #112	@ 0x70
 80022c8:	d01a      	beq.n	8002300 <TIM_SlaveTimer_SetConfig+0x80>
 80022ca:	2b70      	cmp	r3, #112	@ 0x70
 80022cc:	d860      	bhi.n	8002390 <TIM_SlaveTimer_SetConfig+0x110>
 80022ce:	2b60      	cmp	r3, #96	@ 0x60
 80022d0:	d054      	beq.n	800237c <TIM_SlaveTimer_SetConfig+0xfc>
 80022d2:	2b60      	cmp	r3, #96	@ 0x60
 80022d4:	d85c      	bhi.n	8002390 <TIM_SlaveTimer_SetConfig+0x110>
 80022d6:	2b50      	cmp	r3, #80	@ 0x50
 80022d8:	d046      	beq.n	8002368 <TIM_SlaveTimer_SetConfig+0xe8>
 80022da:	2b50      	cmp	r3, #80	@ 0x50
 80022dc:	d858      	bhi.n	8002390 <TIM_SlaveTimer_SetConfig+0x110>
 80022de:	2b40      	cmp	r3, #64	@ 0x40
 80022e0:	d019      	beq.n	8002316 <TIM_SlaveTimer_SetConfig+0x96>
 80022e2:	2b40      	cmp	r3, #64	@ 0x40
 80022e4:	d854      	bhi.n	8002390 <TIM_SlaveTimer_SetConfig+0x110>
 80022e6:	2b30      	cmp	r3, #48	@ 0x30
 80022e8:	d055      	beq.n	8002396 <TIM_SlaveTimer_SetConfig+0x116>
 80022ea:	2b30      	cmp	r3, #48	@ 0x30
 80022ec:	d850      	bhi.n	8002390 <TIM_SlaveTimer_SetConfig+0x110>
 80022ee:	2b20      	cmp	r3, #32
 80022f0:	d051      	beq.n	8002396 <TIM_SlaveTimer_SetConfig+0x116>
 80022f2:	2b20      	cmp	r3, #32
 80022f4:	d84c      	bhi.n	8002390 <TIM_SlaveTimer_SetConfig+0x110>
 80022f6:	2b00      	cmp	r3, #0
 80022f8:	d04d      	beq.n	8002396 <TIM_SlaveTimer_SetConfig+0x116>
 80022fa:	2b10      	cmp	r3, #16
 80022fc:	d04b      	beq.n	8002396 <TIM_SlaveTimer_SetConfig+0x116>
 80022fe:	e047      	b.n	8002390 <TIM_SlaveTimer_SetConfig+0x110>
 8002300:	687b      	ldr	r3, [r7, #4]
 8002302:	6818      	ldr	r0, [r3, #0]
 8002304:	683b      	ldr	r3, [r7, #0]
 8002306:	68d9      	ldr	r1, [r3, #12]
 8002308:	683b      	ldr	r3, [r7, #0]
 800230a:	689a      	ldr	r2, [r3, #8]
 800230c:	683b      	ldr	r3, [r7, #0]
 800230e:	691b      	ldr	r3, [r3, #16]
 8002310:	f000 f8be 	bl	8002490 <TIM_ETR_SetConfig>
 8002314:	e040      	b.n	8002398 <TIM_SlaveTimer_SetConfig+0x118>
 8002316:	683b      	ldr	r3, [r7, #0]
 8002318:	681b      	ldr	r3, [r3, #0]
 800231a:	2b05      	cmp	r3, #5
 800231c:	d101      	bne.n	8002322 <TIM_SlaveTimer_SetConfig+0xa2>
 800231e:	2301      	movs	r3, #1
 8002320:	e03b      	b.n	800239a <TIM_SlaveTimer_SetConfig+0x11a>
 8002322:	687b      	ldr	r3, [r7, #4]
 8002324:	681b      	ldr	r3, [r3, #0]
 8002326:	6a1b      	ldr	r3, [r3, #32]
 8002328:	60fb      	str	r3, [r7, #12]
 800232a:	687b      	ldr	r3, [r7, #4]
 800232c:	681b      	ldr	r3, [r3, #0]
 800232e:	6a1a      	ldr	r2, [r3, #32]
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	f022 0201 	bic.w	r2, r2, #1
 8002338:	621a      	str	r2, [r3, #32]
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	681b      	ldr	r3, [r3, #0]
 800233e:	699b      	ldr	r3, [r3, #24]
 8002340:	60bb      	str	r3, [r7, #8]
 8002342:	68bb      	ldr	r3, [r7, #8]
 8002344:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8002348:	60bb      	str	r3, [r7, #8]
 800234a:	683b      	ldr	r3, [r7, #0]
 800234c:	691b      	ldr	r3, [r3, #16]
 800234e:	011b      	lsls	r3, r3, #4
 8002350:	68ba      	ldr	r2, [r7, #8]
 8002352:	4313      	orrs	r3, r2
 8002354:	60bb      	str	r3, [r7, #8]
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	681b      	ldr	r3, [r3, #0]
 800235a:	68ba      	ldr	r2, [r7, #8]
 800235c:	619a      	str	r2, [r3, #24]
 800235e:	687b      	ldr	r3, [r7, #4]
 8002360:	681b      	ldr	r3, [r3, #0]
 8002362:	68fa      	ldr	r2, [r7, #12]
 8002364:	621a      	str	r2, [r3, #32]
 8002366:	e017      	b.n	8002398 <TIM_SlaveTimer_SetConfig+0x118>
 8002368:	687b      	ldr	r3, [r7, #4]
 800236a:	6818      	ldr	r0, [r3, #0]
 800236c:	683b      	ldr	r3, [r7, #0]
 800236e:	6899      	ldr	r1, [r3, #8]
 8002370:	683b      	ldr	r3, [r7, #0]
 8002372:	691b      	ldr	r3, [r3, #16]
 8002374:	461a      	mov	r2, r3
 8002376:	f000 f814 	bl	80023a2 <TIM_TI1_ConfigInputStage>
 800237a:	e00d      	b.n	8002398 <TIM_SlaveTimer_SetConfig+0x118>
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	6818      	ldr	r0, [r3, #0]
 8002380:	683b      	ldr	r3, [r7, #0]
 8002382:	6899      	ldr	r1, [r3, #8]
 8002384:	683b      	ldr	r3, [r7, #0]
 8002386:	691b      	ldr	r3, [r3, #16]
 8002388:	461a      	mov	r2, r3
 800238a:	f000 f838 	bl	80023fe <TIM_TI2_ConfigInputStage>
 800238e:	e003      	b.n	8002398 <TIM_SlaveTimer_SetConfig+0x118>
 8002390:	2301      	movs	r3, #1
 8002392:	75fb      	strb	r3, [r7, #23]
 8002394:	e000      	b.n	8002398 <TIM_SlaveTimer_SetConfig+0x118>
 8002396:	bf00      	nop
 8002398:	7dfb      	ldrb	r3, [r7, #23]
 800239a:	4618      	mov	r0, r3
 800239c:	3718      	adds	r7, #24
 800239e:	46bd      	mov	sp, r7
 80023a0:	bd80      	pop	{r7, pc}

080023a2 <TIM_TI1_ConfigInputStage>:
 80023a2:	b480      	push	{r7}
 80023a4:	b087      	sub	sp, #28
 80023a6:	af00      	add	r7, sp, #0
 80023a8:	60f8      	str	r0, [r7, #12]
 80023aa:	60b9      	str	r1, [r7, #8]
 80023ac:	607a      	str	r2, [r7, #4]
 80023ae:	68fb      	ldr	r3, [r7, #12]
 80023b0:	6a1b      	ldr	r3, [r3, #32]
 80023b2:	617b      	str	r3, [r7, #20]
 80023b4:	68fb      	ldr	r3, [r7, #12]
 80023b6:	6a1b      	ldr	r3, [r3, #32]
 80023b8:	f023 0201 	bic.w	r2, r3, #1
 80023bc:	68fb      	ldr	r3, [r7, #12]
 80023be:	621a      	str	r2, [r3, #32]
 80023c0:	68fb      	ldr	r3, [r7, #12]
 80023c2:	699b      	ldr	r3, [r3, #24]
 80023c4:	613b      	str	r3, [r7, #16]
 80023c6:	693b      	ldr	r3, [r7, #16]
 80023c8:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80023cc:	613b      	str	r3, [r7, #16]
 80023ce:	687b      	ldr	r3, [r7, #4]
 80023d0:	011b      	lsls	r3, r3, #4
 80023d2:	693a      	ldr	r2, [r7, #16]
 80023d4:	4313      	orrs	r3, r2
 80023d6:	613b      	str	r3, [r7, #16]
 80023d8:	697b      	ldr	r3, [r7, #20]
 80023da:	f023 030a 	bic.w	r3, r3, #10
 80023de:	617b      	str	r3, [r7, #20]
 80023e0:	697a      	ldr	r2, [r7, #20]
 80023e2:	68bb      	ldr	r3, [r7, #8]
 80023e4:	4313      	orrs	r3, r2
 80023e6:	617b      	str	r3, [r7, #20]
 80023e8:	68fb      	ldr	r3, [r7, #12]
 80023ea:	693a      	ldr	r2, [r7, #16]
 80023ec:	619a      	str	r2, [r3, #24]
 80023ee:	68fb      	ldr	r3, [r7, #12]
 80023f0:	697a      	ldr	r2, [r7, #20]
 80023f2:	621a      	str	r2, [r3, #32]
 80023f4:	bf00      	nop
 80023f6:	371c      	adds	r7, #28
 80023f8:	46bd      	mov	sp, r7
 80023fa:	bc80      	pop	{r7}
 80023fc:	4770      	bx	lr

080023fe <TIM_TI2_ConfigInputStage>:
 80023fe:	b480      	push	{r7}
 8002400:	b087      	sub	sp, #28
 8002402:	af00      	add	r7, sp, #0
 8002404:	60f8      	str	r0, [r7, #12]
 8002406:	60b9      	str	r1, [r7, #8]
 8002408:	607a      	str	r2, [r7, #4]
 800240a:	68fb      	ldr	r3, [r7, #12]
 800240c:	6a1b      	ldr	r3, [r3, #32]
 800240e:	617b      	str	r3, [r7, #20]
 8002410:	68fb      	ldr	r3, [r7, #12]
 8002412:	6a1b      	ldr	r3, [r3, #32]
 8002414:	f023 0210 	bic.w	r2, r3, #16
 8002418:	68fb      	ldr	r3, [r7, #12]
 800241a:	621a      	str	r2, [r3, #32]
 800241c:	68fb      	ldr	r3, [r7, #12]
 800241e:	699b      	ldr	r3, [r3, #24]
 8002420:	613b      	str	r3, [r7, #16]
 8002422:	693b      	ldr	r3, [r7, #16]
 8002424:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8002428:	613b      	str	r3, [r7, #16]
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	031b      	lsls	r3, r3, #12
 800242e:	693a      	ldr	r2, [r7, #16]
 8002430:	4313      	orrs	r3, r2
 8002432:	613b      	str	r3, [r7, #16]
 8002434:	697b      	ldr	r3, [r7, #20]
 8002436:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 800243a:	617b      	str	r3, [r7, #20]
 800243c:	68bb      	ldr	r3, [r7, #8]
 800243e:	011b      	lsls	r3, r3, #4
 8002440:	697a      	ldr	r2, [r7, #20]
 8002442:	4313      	orrs	r3, r2
 8002444:	617b      	str	r3, [r7, #20]
 8002446:	68fb      	ldr	r3, [r7, #12]
 8002448:	693a      	ldr	r2, [r7, #16]
 800244a:	619a      	str	r2, [r3, #24]
 800244c:	68fb      	ldr	r3, [r7, #12]
 800244e:	697a      	ldr	r2, [r7, #20]
 8002450:	621a      	str	r2, [r3, #32]
 8002452:	bf00      	nop
 8002454:	371c      	adds	r7, #28
 8002456:	46bd      	mov	sp, r7
 8002458:	bc80      	pop	{r7}
 800245a:	4770      	bx	lr

0800245c <TIM_ITRx_SetConfig>:
 800245c:	b480      	push	{r7}
 800245e:	b085      	sub	sp, #20
 8002460:	af00      	add	r7, sp, #0
 8002462:	6078      	str	r0, [r7, #4]
 8002464:	6039      	str	r1, [r7, #0]
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	689b      	ldr	r3, [r3, #8]
 800246a:	60fb      	str	r3, [r7, #12]
 800246c:	68fb      	ldr	r3, [r7, #12]
 800246e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002472:	60fb      	str	r3, [r7, #12]
 8002474:	683a      	ldr	r2, [r7, #0]
 8002476:	68fb      	ldr	r3, [r7, #12]
 8002478:	4313      	orrs	r3, r2
 800247a:	f043 0307 	orr.w	r3, r3, #7
 800247e:	60fb      	str	r3, [r7, #12]
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	68fa      	ldr	r2, [r7, #12]
 8002484:	609a      	str	r2, [r3, #8]
 8002486:	bf00      	nop
 8002488:	3714      	adds	r7, #20
 800248a:	46bd      	mov	sp, r7
 800248c:	bc80      	pop	{r7}
 800248e:	4770      	bx	lr

08002490 <TIM_ETR_SetConfig>:
 8002490:	b480      	push	{r7}
 8002492:	b087      	sub	sp, #28
 8002494:	af00      	add	r7, sp, #0
 8002496:	60f8      	str	r0, [r7, #12]
 8002498:	60b9      	str	r1, [r7, #8]
 800249a:	607a      	str	r2, [r7, #4]
 800249c:	603b      	str	r3, [r7, #0]
 800249e:	68fb      	ldr	r3, [r7, #12]
 80024a0:	689b      	ldr	r3, [r3, #8]
 80024a2:	617b      	str	r3, [r7, #20]
 80024a4:	697b      	ldr	r3, [r7, #20]
 80024a6:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80024aa:	617b      	str	r3, [r7, #20]
 80024ac:	683b      	ldr	r3, [r7, #0]
 80024ae:	021a      	lsls	r2, r3, #8
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	431a      	orrs	r2, r3
 80024b4:	68bb      	ldr	r3, [r7, #8]
 80024b6:	4313      	orrs	r3, r2
 80024b8:	697a      	ldr	r2, [r7, #20]
 80024ba:	4313      	orrs	r3, r2
 80024bc:	617b      	str	r3, [r7, #20]
 80024be:	68fb      	ldr	r3, [r7, #12]
 80024c0:	697a      	ldr	r2, [r7, #20]
 80024c2:	609a      	str	r2, [r3, #8]
 80024c4:	bf00      	nop
 80024c6:	371c      	adds	r7, #28
 80024c8:	46bd      	mov	sp, r7
 80024ca:	bc80      	pop	{r7}
 80024cc:	4770      	bx	lr
	...

080024d0 <HAL_TIMEx_MasterConfigSynchronization>:
 80024d0:	b480      	push	{r7}
 80024d2:	b085      	sub	sp, #20
 80024d4:	af00      	add	r7, sp, #0
 80024d6:	6078      	str	r0, [r7, #4]
 80024d8:	6039      	str	r1, [r7, #0]
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80024e0:	2b01      	cmp	r3, #1
 80024e2:	d101      	bne.n	80024e8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80024e4:	2302      	movs	r3, #2
 80024e6:	e046      	b.n	8002576 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	2201      	movs	r2, #1
 80024ec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80024f0:	687b      	ldr	r3, [r7, #4]
 80024f2:	2202      	movs	r2, #2
 80024f4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	681b      	ldr	r3, [r3, #0]
 80024fc:	685b      	ldr	r3, [r3, #4]
 80024fe:	60fb      	str	r3, [r7, #12]
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	681b      	ldr	r3, [r3, #0]
 8002504:	689b      	ldr	r3, [r3, #8]
 8002506:	60bb      	str	r3, [r7, #8]
 8002508:	68fb      	ldr	r3, [r7, #12]
 800250a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800250e:	60fb      	str	r3, [r7, #12]
 8002510:	683b      	ldr	r3, [r7, #0]
 8002512:	681b      	ldr	r3, [r3, #0]
 8002514:	68fa      	ldr	r2, [r7, #12]
 8002516:	4313      	orrs	r3, r2
 8002518:	60fb      	str	r3, [r7, #12]
 800251a:	687b      	ldr	r3, [r7, #4]
 800251c:	681b      	ldr	r3, [r3, #0]
 800251e:	68fa      	ldr	r2, [r7, #12]
 8002520:	605a      	str	r2, [r3, #4]
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	4a16      	ldr	r2, [pc, #88]	@ (8002580 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8002528:	4293      	cmp	r3, r2
 800252a:	d00e      	beq.n	800254a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800252c:	687b      	ldr	r3, [r7, #4]
 800252e:	681b      	ldr	r3, [r3, #0]
 8002530:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002534:	d009      	beq.n	800254a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002536:	687b      	ldr	r3, [r7, #4]
 8002538:	681b      	ldr	r3, [r3, #0]
 800253a:	4a12      	ldr	r2, [pc, #72]	@ (8002584 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 800253c:	4293      	cmp	r3, r2
 800253e:	d004      	beq.n	800254a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	681b      	ldr	r3, [r3, #0]
 8002544:	4a10      	ldr	r2, [pc, #64]	@ (8002588 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8002546:	4293      	cmp	r3, r2
 8002548:	d10c      	bne.n	8002564 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 800254a:	68bb      	ldr	r3, [r7, #8]
 800254c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002550:	60bb      	str	r3, [r7, #8]
 8002552:	683b      	ldr	r3, [r7, #0]
 8002554:	685b      	ldr	r3, [r3, #4]
 8002556:	68ba      	ldr	r2, [r7, #8]
 8002558:	4313      	orrs	r3, r2
 800255a:	60bb      	str	r3, [r7, #8]
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	68ba      	ldr	r2, [r7, #8]
 8002562:	609a      	str	r2, [r3, #8]
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	2201      	movs	r2, #1
 8002568:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800256c:	687b      	ldr	r3, [r7, #4]
 800256e:	2200      	movs	r2, #0
 8002570:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002574:	2300      	movs	r3, #0
 8002576:	4618      	mov	r0, r3
 8002578:	3714      	adds	r7, #20
 800257a:	46bd      	mov	sp, r7
 800257c:	bc80      	pop	{r7}
 800257e:	4770      	bx	lr
 8002580:	40012c00 	.word	0x40012c00
 8002584:	40000400 	.word	0x40000400
 8002588:	40000800 	.word	0x40000800

0800258c <memset>:
 800258c:	4603      	mov	r3, r0
 800258e:	4402      	add	r2, r0
 8002590:	4293      	cmp	r3, r2
 8002592:	d100      	bne.n	8002596 <memset+0xa>
 8002594:	4770      	bx	lr
 8002596:	f803 1b01 	strb.w	r1, [r3], #1
 800259a:	e7f9      	b.n	8002590 <memset+0x4>

0800259c <__libc_init_array>:
 800259c:	b570      	push	{r4, r5, r6, lr}
 800259e:	2600      	movs	r6, #0
 80025a0:	4d0c      	ldr	r5, [pc, #48]	@ (80025d4 <__libc_init_array+0x38>)
 80025a2:	4c0d      	ldr	r4, [pc, #52]	@ (80025d8 <__libc_init_array+0x3c>)
 80025a4:	1b64      	subs	r4, r4, r5
 80025a6:	10a4      	asrs	r4, r4, #2
 80025a8:	42a6      	cmp	r6, r4
 80025aa:	d109      	bne.n	80025c0 <__libc_init_array+0x24>
 80025ac:	f000 f81a 	bl	80025e4 <_init>
 80025b0:	2600      	movs	r6, #0
 80025b2:	4d0a      	ldr	r5, [pc, #40]	@ (80025dc <__libc_init_array+0x40>)
 80025b4:	4c0a      	ldr	r4, [pc, #40]	@ (80025e0 <__libc_init_array+0x44>)
 80025b6:	1b64      	subs	r4, r4, r5
 80025b8:	10a4      	asrs	r4, r4, #2
 80025ba:	42a6      	cmp	r6, r4
 80025bc:	d105      	bne.n	80025ca <__libc_init_array+0x2e>
 80025be:	bd70      	pop	{r4, r5, r6, pc}
 80025c0:	f855 3b04 	ldr.w	r3, [r5], #4
 80025c4:	4798      	blx	r3
 80025c6:	3601      	adds	r6, #1
 80025c8:	e7ee      	b.n	80025a8 <__libc_init_array+0xc>
 80025ca:	f855 3b04 	ldr.w	r3, [r5], #4
 80025ce:	4798      	blx	r3
 80025d0:	3601      	adds	r6, #1
 80025d2:	e7f2      	b.n	80025ba <__libc_init_array+0x1e>
 80025d4:	08002708 	.word	0x08002708
 80025d8:	08002708 	.word	0x08002708
 80025dc:	08002708 	.word	0x08002708
 80025e0:	0800270c 	.word	0x0800270c

080025e4 <_init>:
 80025e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80025e6:	bf00      	nop
 80025e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80025ea:	bc08      	pop	{r3}
 80025ec:	469e      	mov	lr, r3
 80025ee:	4770      	bx	lr

080025f0 <_fini>:
 80025f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80025f2:	bf00      	nop
 80025f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80025f6:	bc08      	pop	{r3}
 80025f8:	469e      	mov	lr, r3
 80025fa:	4770      	bx	lr
